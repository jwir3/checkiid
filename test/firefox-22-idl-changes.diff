diff --git a/accessible/public/nsIAccessibleCaretMoveEvent.idl b/accessible/public/nsIAccessibleCaretMoveEvent.idl
new file mode 100644
--- /dev/null
+++ b/accessible/public/nsIAccessibleCaretMoveEvent.idl
@@ -0,0 +1,18 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIAccessibleEvent.idl"
+
+/**
+ * Fired when the caret changes position in text.
+ */
+[scriptable, builtinclass, uuid(5675c486-a230-4d85-a4bd-33670826d5ff)]
+interface nsIAccessibleCaretMoveEvent: nsIAccessibleEvent
+{
+  /**
+   * Return caret offset.
+   */
+  readonly attribute long caretOffset;
+};
diff --git a/accessible/public/nsIAccessibleEvent.idl b/accessible/public/nsIAccessibleEvent.idl
--- a/accessible/public/nsIAccessibleEvent.idl
+++ b/accessible/public/nsIAccessibleEvent.idl
@@ -20,17 +20,17 @@ interface nsIDOMNode;
  * the event and its target. To listen to in-process accessibility invents,
  * make your object an nsIObserver, and listen for accessible-event by 
  * using code something like this:
  *   nsCOMPtr<nsIObserverService> observerService = 
  *     do_GetService("@mozilla.org/observer-service;1", &rv);
  *   if (NS_SUCCEEDED(rv)) 
  *     rv = observerService->AddObserver(this, "accessible-event", PR_TRUE);
  */
-[scriptable, uuid(7f66a33a-9ed7-4fd4-87a8-e431b0f43368)]
+[scriptable, builtinclass, uuid(7f66a33a-9ed7-4fd4-87a8-e431b0f43368)]
 interface nsIAccessibleEvent : nsISupports
 {
   /**
    * An object has been created.
    */
   const unsigned long EVENT_SHOW = 0x0001;
 
   /**
@@ -443,125 +443,8 @@ interface nsIAccessibleEvent : nsISuppor
   readonly attribute nsIDOMNode DOMNode;
 
   /**
    * Returns true if the event was caused by explicit user input,
    * as opposed to purely originating from a timer or mouse movement
    */
   readonly attribute boolean isFromUserInput;
 };
-
-
-[scriptable, uuid(9addd25d-8fa1-415e-94ec-6038f220d3e4)]
-interface nsIAccessibleStateChangeEvent : nsISupports
-{
-  /**
-   * Returns the state of accessible (see constants declared
-   * in nsIAccessibleStates).
-   */
-  readonly attribute unsigned long state;
-
-  /**
-   * Returns true if the state is extra state.
-   */
-  boolean isExtraState();
-
-  /**
-   * Returns true if the state is turned on.
-   */
-  boolean isEnabled();
-};
-
-
-[scriptable, uuid(21e0f8bd-5638-4964-870b-3c8e944ac4c4)]
-interface nsIAccessibleTextChangeEvent : nsISupports
-{
-  /**
-   * Returns offset of changed text in accessible.
-   */
-  readonly attribute long start;
-
-  /**
-   * Returns length of changed text.
-   */
-  readonly attribute unsigned long length;
-
-  /**
-   * Returns true if text was inserted, otherwise false.
-   */
-  boolean isInserted();
-
-  /**
-   * The inserted or removed text
-   */
-  readonly attribute DOMString modifiedText;
-};
-
-[scriptable, uuid(a2bd2eca-3afa-489b-afb2-f93ef32ad99c)]
-interface nsIAccessibleHideEvent: nsISupports
-{
-  /**
-   * Return an accessible that was a parent of the target.
-   */
-  readonly attribute nsIAccessible targetParent;
-
-  /**
-   * Return an accessible that was a next sibling of the target
-   */
-  readonly attribute nsIAccessible targetNextSibling;
-
-  /**
-   * Return an accessible that was a parent of the target
-   */
-  readonly attribute nsIAccessible targetPrevSibling;
-};
-
-[scriptable, uuid(5675c486-a230-4d85-a4bd-33670826d5ff)]
-interface nsIAccessibleCaretMoveEvent: nsISupports
-{
-  /**
-   * Return caret offset.
-   */
-  readonly attribute long caretOffset;
-};
-
-[scriptable, uuid(df517997-ed52-4ea2-b310-2f8e0fe64572)]
-interface nsIAccessibleTableChangeEvent: nsISupports
-{
-  /**
-   * Return the row or column index.
-   */
-  readonly attribute long rowOrColIndex;
-
-  /**
-   * Return the number of rows or cols
-   */
-  readonly attribute long numRowsOrCols;
-};
-
-
-/*
- * An interface for virtual cursor changed events.
- * Passes previous cursor position and text offsets.
- */
-[scriptable, uuid(370e8b9b-2bbc-4bff-a9c7-16ddc54aea21)]
-interface nsIAccessibleVirtualCursorChangeEvent : nsISupports
-{
-  /**
-   * Previous object pointed at by virtual cursor. null if none.
-   */
-  readonly attribute nsIAccessible oldAccessible;
-
-  /**
-   * Previous start offset of pivot. -1 if none.
-   */
-  readonly attribute long oldStartOffset;
-
-  /**
-   * Previous end offset of pivot. -1 if none.
-   */
-  readonly attribute long oldEndOffset;
-
-  /**
-   * Reason for virtual cursor move.
-   */
-  readonly attribute short reason;
-};
diff --git a/accessible/public/nsIAccessibleHideEvent.idl b/accessible/public/nsIAccessibleHideEvent.idl
new file mode 100644
--- /dev/null
+++ b/accessible/public/nsIAccessibleHideEvent.idl
@@ -0,0 +1,28 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIAccessibleEvent.idl"
+
+/**
+ * Fired when a accessible and its subtree are removed from the tree.
+ */
+[scriptable, builtinclass, uuid(a2bd2eca-3afa-489b-afb2-f93ef32ad99c)]
+interface nsIAccessibleHideEvent: nsIAccessibleEvent
+{
+  /**
+   * Return an accessible that was a parent of the target.
+   */
+  readonly attribute nsIAccessible targetParent;
+
+  /**
+   * Return an accessible that was a next sibling of the target
+   */
+  readonly attribute nsIAccessible targetNextSibling;
+
+  /**
+   * Return an accessible that was a parent of the target
+   */
+  readonly attribute nsIAccessible targetPrevSibling;
+};
diff --git a/accessible/public/nsIAccessibleRelation.idl b/accessible/public/nsIAccessibleRelation.idl
--- a/accessible/public/nsIAccessibleRelation.idl
+++ b/accessible/public/nsIAccessibleRelation.idl
@@ -5,119 +5,114 @@
 
 #include "nsISupports.idl"
 #include "nsIArray.idl"
 
 interface nsIAccessible;
 
 /**
  * This interface gives access to an accessible's set of relations.
- * Be carefull, do not change constants until ATK has a structure to map gecko
- * constants into ATK constants.
  */
-[scriptable, uuid(f42a1589-70ab-4704-877f-4a9162bbe188)]
+[scriptable, uuid(9f85fc0d-2969-48e6-b822-68140f7e5770)]
 interface nsIAccessibleRelation : nsISupports
 {
+  /**
+   * This object is labelled by a target object.
+   */
+  const unsigned long RELATION_LABELLED_BY = 0x00;
 
-  const unsigned long RELATION_NUL = 0x00;
+  /**
+   * This object is label for a target object.
+   */
+  const unsigned long RELATION_LABEL_FOR = 0x01;
+
+  /**
+   * This object is described by the target object.
+   */
+  const unsigned long RELATION_DESCRIBED_BY = 0x02;
+
+  /**
+   * This object is describes the target object.
+   */
+  const unsigned long RELATION_DESCRIPTION_FOR = 0x3;
+
+  /**
+   * This object is a child of a target object.
+   */
+  const unsigned long RELATION_NODE_CHILD_OF = 0x4;
+
+  /**
+   * This object is a parent of a target object. A dual relation to
+   * RELATION_NODE_CHILD_OF
+   */
+  const unsigned long RELATION_NODE_PARENT_OF = 0x5;
 
   /**
    * Some attribute of this object is affected by a target object.
    */
-  const unsigned long RELATION_CONTROLLED_BY = 0x01;
-
-  // First relation
-  const unsigned long RELATION_FIRST = RELATION_CONTROLLED_BY;
+  const unsigned long RELATION_CONTROLLED_BY = 0x06;
 
   /**
    * This object is interactive and controls some attribute of a target object.
    */
-  const unsigned long RELATION_CONTROLLER_FOR = 0x02;
+  const unsigned long RELATION_CONTROLLER_FOR = 0x07;
 
   /**
-   * This object is label for a target object.
+   * Content flows from this object to a target object, i.e. has content that
+   * flows logically to another object in a sequential way, e.g. text flow.
    */
-  const unsigned long RELATION_LABEL_FOR = 0x03;
+  const unsigned long RELATION_FLOWS_TO = 0x08;
 
   /**
-   * This object is labelled by a target object.
+   * Content flows to this object from a target object, i.e. has content that
+   * flows logically from another object in a sequential way, e.g. text flow.
    */
-  const unsigned long RELATION_LABELLED_BY = 0x04;
+  const unsigned long RELATION_FLOWS_FROM = 0x09;
 
   /**
    * This object is a member of a group of one or more objects. When there is
    * more than one object in the group each member may have one and the same
    * target, e.g. a grouping object.  It is also possible that each member has
    * multiple additional targets, e.g. one for every other member in the group.
    */
-  const unsigned long RELATION_MEMBER_OF = 0x05;
-
-  /**
-   * This object is a child of a target object.
-   */
-  const unsigned long RELATION_NODE_CHILD_OF = 0x06;
-
-  /**
-   * Content flows from this object to a target object, i.e. has content that
-   * flows logically to another object in a sequential way, e.g. text flow.
-   */
-  const unsigned long RELATION_FLOWS_TO = 0x07;
-
-  /**
-   * Content flows to this object from a target object, i.e. has content that
-   * flows logically from another object in a sequential way, e.g. text flow.
-   */
-  const unsigned long RELATION_FLOWS_FROM = 0x08;
+  const unsigned long RELATION_MEMBER_OF = 0x0a;
 
   /**
    * This object is a sub window of a target object.
    */
-  const unsigned long RELATION_SUBWINDOW_OF = 0x09;
+  const unsigned long RELATION_SUBWINDOW_OF = 0x0b;
 
   /**
    * This object embeds a target object. This relation can be used on the
    * OBJID_CLIENT accessible for a top level window to show where the content
    * areas are.
    */
-  const unsigned long RELATION_EMBEDS = 0x0a;
+  const unsigned long RELATION_EMBEDS = 0x0c;
 
   /**
    * This object is embedded by a target object.
    */
-  const unsigned long RELATION_EMBEDDED_BY = 0x0b;
+  const unsigned long RELATION_EMBEDDED_BY = 0x0d;
 
   /**
    * This object is a transient component related to the target object. When
    * this object is activated the target object doesn't lose focus.
    */
-  const unsigned long RELATION_POPUP_FOR = 0x0c;
+  const unsigned long RELATION_POPUP_FOR = 0x0e;
 
   /**
    * This object is a parent window of the target object.
    */
-  const unsigned long RELATION_PARENT_WINDOW_OF = 0x0d;
-
-  /**
-   * This object is described by the target object.
-   */
-  const unsigned long RELATION_DESCRIBED_BY = 0x0e;
-
-  /**
-   * This object is describes the target object.
-   */
-  const unsigned long RELATION_DESCRIPTION_FOR = 0x0f;
-
-  // Last relation that is standard to desktop accessibility APIs
-  const unsigned long RELATION_LAST = RELATION_DESCRIPTION_FOR;
+  const unsigned long RELATION_PARENT_WINDOW_OF = 0x0f;
 
   /**
    * Part of a form/dialog with a related default button. It is used for
-   * MSAA only, no for IA2 nor ATK.
+   * MSAA/XPCOM, it isn't for IA2 or ATK.
    */
-  const unsigned long RELATION_DEFAULT_BUTTON = 0x4000;
+  const unsigned long RELATION_DEFAULT_BUTTON = 0x10;
 
   /**
    * Returns the type of the relation.
    */
   readonly attribute unsigned long relationType;
 
   /**
    * Returns the number of targets for this relation.
diff --git a/accessible/public/nsIAccessibleStateChangeEvent.idl b/accessible/public/nsIAccessibleStateChangeEvent.idl
new file mode 100644
--- /dev/null
+++ b/accessible/public/nsIAccessibleStateChangeEvent.idl
@@ -0,0 +1,29 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIAccessibleEvent.idl"
+
+/**
+ * Fired when a state of an accessible changes.
+ */
+[scriptable, builtinclass, uuid(0d2d77c5-7b16-4a15-8b20-c484ceb5ac0d)]
+interface nsIAccessibleStateChangeEvent : nsIAccessibleEvent
+{
+  /**
+   * Returns the state of accessible (see constants declared
+   * in nsIAccessibleStates).
+   */
+  readonly attribute unsigned long state;
+
+  /**
+   * Returns true if the state is extra state.
+   */
+  readonly attribute boolean isExtraState;
+
+  /**
+   * Returns true if the state is turned on.
+   */
+  readonly attribute boolean isEnabled;
+};
diff --git a/accessible/public/nsIAccessibleTableChangeEvent.idl b/accessible/public/nsIAccessibleTableChangeEvent.idl
new file mode 100644
--- /dev/null
+++ b/accessible/public/nsIAccessibleTableChangeEvent.idl
@@ -0,0 +1,20 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIAccessibleEvent.idl"
+
+[scriptable, builtinclass, uuid(df517997-ed52-4ea2-b310-2f8e0fe64572)]
+interface nsIAccessibleTableChangeEvent: nsIAccessibleEvent
+{
+  /**
+   * Return the row or column index.
+   */
+  readonly attribute long rowOrColIndex;
+
+  /**
+   * Return the number of rows or cols
+   */
+  readonly attribute long RowsOrColsCount;
+};
diff --git a/accessible/public/nsIAccessibleTextChangeEvent.idl b/accessible/public/nsIAccessibleTextChangeEvent.idl
new file mode 100644
--- /dev/null
+++ b/accessible/public/nsIAccessibleTextChangeEvent.idl
@@ -0,0 +1,33 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIAccessibleEvent.idl"
+
+/**
+ * Fired when an accessible's text changes.
+ */
+[scriptable, builtinclass, uuid(21e0f8bd-5638-4964-870b-3c8e944ac4c4)]
+interface nsIAccessibleTextChangeEvent : nsIAccessibleEvent
+{
+  /**
+   * Returns offset of changed text in accessible.
+   */
+  readonly attribute long start;
+
+  /**
+   * Returns length of changed text.
+   */
+  readonly attribute unsigned long length;
+
+  /**
+   * Returns true if text was inserted, otherwise false.
+   */
+  readonly attribute boolean isInserted;
+
+  /**
+   * The inserted or removed text
+   */
+  readonly attribute DOMString modifiedText;
+};
diff --git a/accessible/public/nsIAccessibleVirtualCursorChangeEvent.idl b/accessible/public/nsIAccessibleVirtualCursorChangeEvent.idl
new file mode 100644
--- /dev/null
+++ b/accessible/public/nsIAccessibleVirtualCursorChangeEvent.idl
@@ -0,0 +1,34 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIAccessibleEvent.idl"
+
+/*
+ * An interface for virtual cursor changed events.
+ * Passes previous cursor position and text offsets.
+ */
+[scriptable, builtinclass, uuid(370e8b9b-2bbc-4bff-a9c7-16ddc54aea21)]
+interface nsIAccessibleVirtualCursorChangeEvent : nsIAccessibleEvent
+{
+  /**
+   * Previous object pointed at by virtual cursor. null if none.
+   */
+  readonly attribute nsIAccessible oldAccessible;
+
+  /**
+   * Previous start offset of pivot. -1 if none.
+   */
+  readonly attribute long oldStartOffset;
+
+  /**
+   * Previous end offset of pivot. -1 if none.
+   */
+  readonly attribute long oldEndOffset;
+
+  /**
+   * Reason for virtual cursor move.
+   */
+  readonly attribute short reason;
+};
diff --git a/b2g/components/b2g.idl b/b2g/components/b2g.idl
--- a/b2g/components/b2g.idl
+++ b/b2g/components/b2g.idl
@@ -35,9 +35,30 @@ interface nsIB2GKeyboard : nsISupports
   // list (type=month) or a widget (type=date, time, etc.).
   // If the value passed in parameter isn't valid (in the term of HTML5
   // Forms Validation), the value will simply be ignored by the element. 
   void setValue(in jsval value);
 
   void removeFocus();
 
   attribute nsIDOMEventListener onfocuschange;
+
+  // Fires when user moves the cursor, changes the selection, or alters the
+  // composing text length
+  attribute nsIDOMEventListener onselectionchange;
+
+  // The start position of the selection.
+  readonly attribute long selectionStart;
+
+  // The stop position of the selection.
+  readonly attribute long selectionEnd;
+
+  /*
+   * Set the selection range of the the editable text.
+   *
+   * @param start The beginning of the selected text.
+   * @param end The end of the selected text.
+   *
+   * Note that the start position should be less or equal to the end position.
+   * To move the cursor, set the start and end position to the same value.
+   */
+  void setSelectionRange(in long start, in long end);
 };
diff --git a/caps/idl/nsIScriptSecurityManager.idl b/caps/idl/nsIScriptSecurityManager.idl
--- a/caps/idl/nsIScriptSecurityManager.idl
+++ b/caps/idl/nsIScriptSecurityManager.idl
@@ -235,10 +235,9 @@ interface nsIScriptSecurityManager : nsI
      * inMozBrowser has to be true if the uri is inside a mozbrowser iframe.
      */
     AUTF8String getExtendedOrigin(in nsIURI uri, in unsigned long appId,
                                   in boolean inMozBrowser);
 };
 
 %{C++
 #define NS_SCRIPTSECURITYMANAGER_CONTRACTID "@mozilla.org/scriptsecuritymanager;1"
-#define NS_SCRIPTSECURITYMANAGER_CLASSNAME "scriptsecuritymanager"
 %}
diff --git a/content/base/public/nsIContentSecurityPolicy.idl b/content/base/public/nsIContentSecurityPolicy.idl
--- a/content/base/public/nsIContentSecurityPolicy.idl
+++ b/content/base/public/nsIContentSecurityPolicy.idl
@@ -4,21 +4,21 @@
 
 #include "nsISupports.idl"
 
 interface nsIURI;
 interface nsIHttpChannel;
 interface nsIDocShell;
 
 /**
- * nsIContentSecurityPolicy  
+ * nsIContentSecurityPolicy
  * Describes an XPCOM component used to model an enforce CSPs.
  */
 
-[scriptable, uuid(d1680bb4-1ac0-4772-9437-1188375e44f2)]
+[scriptable, uuid(91E1F257-914C-4D4F-902C-F67F772839AB)]
 interface nsIContentSecurityPolicy : nsISupports
 {
 
   /**
    * Set to true when the CSP has been read in and parsed and is ready to
    * enforce.  This is a barrier for the nsDocument so it doesn't load any
    * sub-content until either it knows that a CSP is ready or will not be used.
    */
@@ -32,24 +32,40 @@ interface nsIContentSecurityPolicy : nsI
 
   /**
    * A read-only string version of the policy for debugging.
    */
   readonly attribute AString policy;
 
   /**
    * Whether this policy allows in-page script.
+   * @param shouldReportViolation
+   *     Whether or not the use of inline script should be reported.
+   *     This function always returns "true" for report-only policies, but when
+   *     the report-only policy is violated, shouldReportViolation is true as
+   *     well.
+   * @return
+   *     Whether or not the effects of the inline script should be allowed
+   *     (block the compilation if false).
    */
-  readonly attribute boolean allowsInlineScript;
+  boolean getAllowsInlineScript(out boolean shouldReportViolation);
 
   /**
    * whether this policy allows eval and eval-like functions
    * such as setTimeout("code string", time).
+   * @param shouldReportViolation
+   *     Whether or not the use of eval should be reported.
+   *     This function always returns "true" for report-only policies, but when
+   *     the report-only policy is violated, shouldReportViolation is true as
+   *     well.
+   * @return
+   *     Whether or not the effects of the eval call should be allowed
+   *     (block the call if false).
    */
-  readonly attribute boolean allowsEval;
+  boolean getAllowsEval(out boolean shouldReportViolation);
 
   /**
    * Log policy violation on the Error Console and send a report if a report-uri
    * is present in the policy
    *
    * @param violationType
    *     one of the VIOLATION_TYPE_* constants, e.g. inline-script or eval
    * @param sourceFile
@@ -73,17 +89,17 @@ interface nsIContentSecurityPolicy : nsI
    * @param blockedURI
    *     the URI that violated the policy
    * @param violatedDirective
    *     the directive that was violated.
    * @param scriptSample
    *     a sample of the violating inline script
    * @param lineNum
    *     source line number of the violation (if available)
-   * @return 
+   * @return
    *     nothing.
    */
   void sendReports(in AString blockedURI,
                    in AString violatedDirective,
                    in AString scriptSample,
                    in int32_t lineNum);
 
   /**
diff --git a/content/base/public/nsIDOMDataChannel.idl b/content/base/public/nsIDOMDataChannel.idl
--- a/content/base/public/nsIDOMDataChannel.idl
+++ b/content/base/public/nsIDOMDataChannel.idl
@@ -1,24 +1,27 @@
 #include "domstubs.idl"
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIVariant;
 
-[scriptable, builtinclass, uuid(7363aa5c-f4b2-4b86-8d15-e0f714c9216b)]
+[scriptable, builtinclass, uuid(1aed816d-1156-414e-8fe2-f01daa6021f0)]
 interface nsIDOMDataChannel : nsIDOMEventTarget
 {
   readonly attribute DOMString label;
+  readonly attribute DOMString protocol;
   readonly attribute boolean reliable;
   readonly attribute boolean ordered;
 
   readonly attribute DOMString readyState;
   readonly attribute unsigned long bufferedAmount;
 
+  readonly attribute unsigned short stream;
+
   [implicit_jscontext] attribute jsval onopen;
   [implicit_jscontext] attribute jsval onerror;
   [implicit_jscontext] attribute jsval onclose;
   [implicit_jscontext] attribute jsval onmessage;
 
   attribute DOMString binaryType;
 
   void close();
diff --git a/content/base/public/nsIDOMFileReader.idl b/content/base/public/nsIDOMFileReader.idl
--- a/content/base/public/nsIDOMFileReader.idl
+++ b/content/base/public/nsIDOMFileReader.idl
@@ -4,17 +4,17 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMEventListener;
 interface nsIDOMBlob;
 interface nsIDOMDOMError;
 
-[scriptable, builtinclass, uuid(62a1628e-c856-4aee-8273-d0c62488e2ca)]
+[scriptable, builtinclass, uuid(81a8d00b-2982-44f6-aecf-faac0d0819d6)]
 interface nsIDOMFileReader : nsIDOMEventTarget
 {
   [implicit_jscontext]
   void readAsArrayBuffer(in nsIDOMBlob filedata);
   void readAsBinaryString(in nsIDOMBlob filedata);
   void readAsText(in nsIDOMBlob filedata, [optional] in DOMString encoding);
   void readAsDataURL(in nsIDOMBlob file);
 
diff --git a/content/base/public/nsIFrameLoader.idl b/content/base/public/nsIFrameLoader.idl
--- a/content/base/public/nsIFrameLoader.idl
+++ b/content/base/public/nsIFrameLoader.idl
@@ -1,15 +1,16 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
+interface nsFrameLoader;
 interface nsIDocShell;
 interface nsIURI;
 interface nsIFrame;
 interface nsSubDocumentFrame;
 interface nsIMessageSender;
 interface nsIVariant;
 interface nsIDOMElement;
 
@@ -245,16 +246,20 @@ interface nsIFrameLoader : nsISupports
    * The element which owns this frame loader.
    *
    * For example, if this is a frame loader for an <iframe>, this attribute
    * returns the iframe element.
    */
   readonly attribute nsIDOMElement ownerElement;
 };
 
+%{C++
+class nsFrameLoader;
+%}
+
 native alreadyAddRefed_nsFrameLoader(already_AddRefed<nsFrameLoader>);
 
 [scriptable, uuid(5879040e-83e9-40e3-b2bb-5ddf43b76e47)]
 interface nsIFrameLoaderOwner : nsISupports
 {
   /**
    * The frame loader owned by this nsIFrameLoaderOwner
    */
diff --git a/content/base/public/nsIImageLoadingContent.idl b/content/base/public/nsIImageLoadingContent.idl
--- a/content/base/public/nsIImageLoadingContent.idl
+++ b/content/base/public/nsIImageLoadingContent.idl
@@ -28,21 +28,21 @@ interface nsIFrame;
  * become current only when the image is loaded.  It is the responsibility of
  * observers to check which request they are getting notifications for.
  *
  * Observers added in mid-load will not get any notifications they
  * missed.  We should NOT freeze this interface without considering
  * this issue.  (It could be that the image status on imgIRequest is
  * sufficient, when combined with the imageBlockingStatus information.)
  *
- * Please make sure to update the HTMLImageElement and SVGImageElement
- * Web IDL interfaces to mirror this interface when changing it.
+ * Please make sure to update the MozImageLoadingContent WebIDL
+ * interface to mirror this interface when changing it.
  */
 
-[scriptable, builtinclass, uuid(497bfb9b-d996-4d1e-a647-8137b0cfc876)]
+[scriptable, builtinclass, uuid(e3968acd-b796-4ca3-aec0-e7f0880f2219)]
 interface nsIImageLoadingContent : imgINotificationObserver
 {
   /**
    * Request types.  Image loading content nodes attempt to do atomic
    * image changes when the image url is changed.  This means that
    * when the url changes the new image load will start, but the old
    * image will remain the "current" request until the new image is
    * fully loaded.  At that point, the old "current" request will be
@@ -154,9 +154,17 @@ interface nsIImageLoadingContent : imgIN
   void forceReload();
 
   /**
    * Enables/disables image state forcing. When |aForce| is PR_TRUE, we force
    * nsImageLoadingContent::ImageState() to return |aState|. Call again with |aForce|
    * as PR_FALSE to revert ImageState() to its original behaviour.
    */
   void forceImageState(in boolean aForce, in unsigned long long aState);
+
+  /**
+   * A visible count is stored, if it is non-zero then this image is considered
+   * visible. These methods increment, decrement, or return the visible coount.
+   */
+  [noscript, notxpcom] void IncrementVisibleCount();
+  [noscript, notxpcom] void DecrementVisibleCount();
+  [noscript, notxpcom] uint32_t GetVisibleCount();
 };
diff --git a/content/base/public/nsIObjectLoadingContent.idl b/content/base/public/nsIObjectLoadingContent.idl
--- a/content/base/public/nsIObjectLoadingContent.idl
+++ b/content/base/public/nsIObjectLoadingContent.idl
@@ -15,19 +15,22 @@ interface nsIURI;
 
 %{C++
 #include "nsNPAPIPluginInstance.h"
 %}
 [ptr] native nsNPAPIPluginInstancePtr(nsNPAPIPluginInstance);
 
 /**
  * This interface represents a content node that loads objects.
+ *
+ * Please make sure to update the MozObjectLoadingContent WebIDL
+ * interface to mirror this interface when changing it.
  */
 
-[scriptable, uuid(5804ab94-4fa1-4720-8f3e-655b769ea2df)]
+[scriptable, uuid(e2ef99fe-f7d3-422f-a7b4-834e8bdde710)]
 interface nsIObjectLoadingContent : nsISupports
 {
   /**
    * See notes in nsObjectLoadingContent.h
    */
   const unsigned long TYPE_LOADING  = 0;
   const unsigned long TYPE_IMAGE    = 1;
   const unsigned long TYPE_PLUGIN   = 2;
@@ -93,18 +96,16 @@ interface nsIObjectLoadingContent : nsIS
    * Tells the content about an associated object frame.
    * This can be called multiple times for different frames.
    *
    * This is noscript because this is an internal method that will go away, and
    * because nsIObjectFrame is unscriptable.
    */
   [noscript] void hasNewFrame(in nsIObjectFrame aFrame);
 
-  [noscript] void disconnectFrame();
-
   /**
    * If this object is in going to be printed, this method
    * returns the nsIObjectFrame object which should be used when
    * printing the plugin. The returned nsIFrame is in the original document,
    * not in the static clone.
    */
   [noscript] nsIFrame getPrintFrame();
 
@@ -162,12 +163,18 @@ interface nsIObjectLoadingContent : nsIS
    * The URL of the data/src loaded in the object. This may be null (i.e.
    * an <embed> with no src).
    */
   readonly attribute nsIURI srcURI;
 
   readonly attribute unsigned long pluginFallbackType;
 
   /**
+   * If this object currently owns a running plugin, regardless of whether or
+   * not one is pending spawn/despawn.
+   */
+  readonly attribute bool hasRunningPlugin;
+
+  /**
    * This method will disable the play-preview plugin state.
    */
   void cancelPlayPreview();
 };
diff --git a/content/base/public/nsISelectionPrivate.idl b/content/base/public/nsISelectionPrivate.idl
--- a/content/base/public/nsISelectionPrivate.idl
+++ b/content/base/public/nsISelectionPrivate.idl
@@ -9,33 +9,31 @@
 
 interface nsRange;
 interface nsIDOMNode;
 interface nsISelectionListener;
 interface nsIContent;
 interface nsINode;
 
 %{C++
-class nsFrameSelection;
 struct nsTextRangeStyle;
 struct nsPoint;
 struct ScrollAxis;
 #include "nsTArray.h"
 #include "nsIFrame.h"
 %}
 
-[ptr] native nsFrameSelection(nsFrameSelection);
 [ptr] native nsIFrame(nsIFrame);
 [ptr] native RangeArray(nsTArray<nsRange*>);
 [ref] native constTextRangeStyleRef(const nsTextRangeStyle);
 [ref] native nsPointRef(nsPoint);
 native nsDirection(nsDirection);
 native ScrollAxis(nsIPresShell::ScrollAxis);
 
-[scriptable, builtinclass, uuid(a6d2cedd-afbc-4d25-bffb-e725b9881e30)]
+[scriptable, builtinclass, uuid(3ede44eb-2df8-41de-ab79-6f3dbd10090b)]
 interface nsISelectionPrivate : nsISelection
  {
     const short ENDOFPRECEDINGLINE=0;
     const short STARTOFNEXTLINE=1;
     
     attribute boolean interlinePosition;
 
     /* startBatchChanges
@@ -78,21 +76,16 @@ interface nsISelectionPrivate : nsISelec
      */
     [noscript] attribute boolean canCacheFrameOffset;
 
     /* GetCachedOffsetForFrame
      * Returns cached value for nsTextFrame::GetPointFromOffset.
      */
     [noscript] void getCachedFrameOffset(in nsIFrame aFrame, in int32_t inOffset, in nsPointRef aPoint);
 
-    /* getFrameSelection
-     * Returnes a reference to the frame selection associated with this selection 
-     */
-    [noscript] nsFrameSelection getFrameSelection();
-
     [noscript] void setAncestorLimiter(in nsIContent aContent);
 
     /**
      * Set the painting style for the range. The range must be a range in
      * the selection. The textRangeStyle will be used by text frame
      * when it is painting the selection.
      */
     [noscript] void setTextRangeStyle(in nsIDOMRange range,
diff --git a/content/base/public/nsIXMLHttpRequest.idl b/content/base/public/nsIXMLHttpRequest.idl
--- a/content/base/public/nsIXMLHttpRequest.idl
+++ b/content/base/public/nsIXMLHttpRequest.idl
@@ -16,50 +16,29 @@ interface nsPIDOMWindow;
 interface nsIInputStream;
 interface nsIDOMBlob;
 
 %{C++
 // for jsval
 #include "jsapi.h"
 %}
 
-/**
- * Parameters for instantiating an XMLHttpRequest. They are passed as an
- * optional argument to the constructor:
- *
- *  new XMLHttpRequest({anon: true, system: true});
- *
- */
-dictionary XMLHttpRequestParameters
-{
-  /**
-   * If true, the request will be sent without cookie and authentication
-   * headers.
-   */
-  boolean mozAnon;
-
-  /**
-   * If true, the same origin policy will not be enforced on the request.
-   */
-  boolean mozSystem;
-};
-
-[scriptable, builtinclass, uuid(a137d5e6-81e2-4fa3-a791-26459df723ff)]
+[scriptable, builtinclass, uuid(5bc978f2-41e5-4349-a12d-b018092271f7)]
 interface nsIXMLHttpRequestEventTarget : nsIDOMEventTarget {
   // event handler attributes
   [implicit_jscontext] attribute jsval onabort;
   [implicit_jscontext] attribute jsval onerror;
   [implicit_jscontext] attribute jsval onload;
   [implicit_jscontext] attribute jsval onloadstart;
   [implicit_jscontext] attribute jsval onprogress;
   [implicit_jscontext] attribute jsval ontimeout;
   [implicit_jscontext] attribute jsval onloadend;
 };
 
-[scriptable, builtinclass, uuid(8dbd2448-740a-412c-b314-434f24a1c510)]
+[scriptable, builtinclass, uuid(df3796fa-d98a-4185-9dda-d2f2b56a5d38)]
 interface nsIXMLHttpRequestUpload : nsIXMLHttpRequestEventTarget {
   // for future use
 };
 
 /**
  * Mozilla's XMLHttpRequest is modelled after Microsoft's IXMLHttpRequest
  * object. The goal has been to make Mozilla's version match Microsoft's
  * version as closely as possible, but there are bound to be some differences.
@@ -95,28 +74,25 @@ interface nsIXMLHttpRequestUpload : nsIX
  *   The 'onload', 'onerror', and 'onreadystatechange' attributes moved to
  *   nsIJSXMLHttpRequest, but if you're coding in C++ you should avoid using
  *   those.
  *
  * Conclusion: Do not use event listeners on XMLHttpRequest from C++, unless
  * you're aware of all the security implications.  And then think twice about
  * it.
  */
-[scriptable, uuid(8e9768b4-339c-413c-a210-0c74934eb9e1)]
+[scriptable, uuid(cd31a34e-71b5-4bea-8366-c926de9d3d62)]
 interface nsIXMLHttpRequest : nsISupports
 {
   /**
    * The request uses a channel in order to perform the
    * request.  This attribute represents the channel used
    * for the request.  NULL if the channel has not yet been
    * created.
    *
-   * In a multipart request case, this is the initial channel, not the
-   * different parts in the multipart request.
-   *
    * Mozilla only. Requires elevated privileges to access.
    */
   readonly attribute nsIChannel channel;
 
   /**
    * The response to the request is parsed as if it were a
    * text/xml stream. This attributes represents the response as
    * a DOM Document object. NULL if the request is unsuccessful or
@@ -164,19 +140,16 @@ interface nsIXMLHttpRequest : nsISupport
    * abort the request.
    */
   [binaryname(SlowAbort)] void abort();
 
   /**
    * Returns all of the response headers as a string for HTTP
    * requests.
    *
-   * Note that this will return all the headers from the *current*
-   * part of a multipart request, not from the original channel.
-   *
    * @returns A string containing all of the response headers.
    *          The empty string if the response has not yet been received.
    */
   DOMString getAllResponseHeaders();
 
   /**
    * Returns the text of the header with the specified name for
    * HTTP requests.
@@ -206,19 +179,16 @@ interface nsIXMLHttpRequest : nsISupport
    *               if the URL is not a HTTP URL.
    * @param url The URL to which to send the request.
    * @param async (optional) Whether the request is synchronous or
    *              asynchronous i.e. whether send returns only after
    *              the response is received or if it returns immediately after
    *              sending the request. In the latter case, notification
    *              of completion is sent through the event listeners.
    *              The default value is true.
-   *              This argument must be true if the multipart
-   *              attribute has been set to true, or an exception will
-   *              be thrown.
    * @param user (optional) A username for authentication if necessary.
    *             The default value is the empty string
    * @param password (optional) A password for authentication if necessary.
    *                 The default value is the empty string
    */
   [optional_argc] void open(in AUTF8String method, in AUTF8String url,
                             [optional] in boolean async,
                             [optional,Undefined(Empty)] in DOMString user,
@@ -300,31 +270,16 @@ interface nsIXMLHttpRequest : nsISupport
    * must be done before the <code>send</code> method is invoked.
    *
    * @param mimetype The type used to override that returned by the server
    *                 (if any).
    */
   [binaryname(SlowOverrideMimeType)] void overrideMimeType(in DOMString mimetype);
 
   /**
-   * Set to true if the response is expected to be a stream of
-   * possibly multiple (XML) documents. If set to true, the content
-   * type of the initial response must be multipart/x-mixed-replace or
-   * an error will be triggerd. All requests must be asynchronous.
-   *
-   * This enables server push. For each XML document that's written to
-   * this request, a new XML DOM document is created and the onload
-   * handler is called inbetween documents. Note that when this is
-   * set, the onload handler and other event handlers are not reset
-   * after the first XML document is loaded, and the onload handler
-   * will be called as each part of the response is received.
-   */
-  attribute boolean multipart;
-
-  /**
    * Set to true if this is a background service request. This will
    * prevent a load group being associated with the request, and
    * suppress any security dialogs from being shown * to the user.
    * In the cases where one of those dialogs would be shown, the request
    * will simply fail instead.
    */
   attribute boolean mozBackgroundRequest;
 
diff --git a/content/media/webspeech/recognition/nsIDOMSpeechRecognitionError.idl b/content/media/webspeech/recognition/nsIDOMSpeechRecognitionError.idl
new file mode 100644
--- /dev/null
+++ b/content/media/webspeech/recognition/nsIDOMSpeechRecognitionError.idl
@@ -0,0 +1,39 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
+ * The origin of this IDL file is
+ * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html
+ *
+ * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C
+ * liability, trademark and document use rules apply.
+ */
+
+#include "nsIDOMEvent.idl"
+
+[scriptable, builtinclass, uuid(5ddc5a46-e7db-4c5c-8ed4-80cf5d88fca3)]
+interface nsIDOMSpeechRecognitionError : nsIDOMEvent {
+    const unsigned long NO_SPEECH = 0;
+    const unsigned long ABORTED = 1;
+    const unsigned long AUDIO_CAPTURE = 2;
+    const unsigned long NETWORK = 3;
+    const unsigned long NOT_ALLOWED = 4;
+    const unsigned long SERVICE_NOT_ALLOWED = 5;
+    const unsigned long BAD_GRAMMAR = 6;
+    const unsigned long LANGUAGE_NOT_SUPPORTED = 7;
+
+    [noscript] void initSpeechRecognitionError(in DOMString eventTypeArg,
+                                               in boolean canBubbleArg,
+                                               in boolean cancelableArg,
+                                               in unsigned long error,
+                                               in DOMString message);
+
+    readonly attribute unsigned long error;
+    readonly attribute DOMString message;
+};
+
+dictionary SpeechRecognitionErrorInit : EventInit {
+    unsigned long error;
+    DOMString message;
+};
diff --git a/content/media/webspeech/recognition/nsIDOMSpeechRecognitionEvent.idl b/content/media/webspeech/recognition/nsIDOMSpeechRecognitionEvent.idl
new file mode 100644
--- /dev/null
+++ b/content/media/webspeech/recognition/nsIDOMSpeechRecognitionEvent.idl
@@ -0,0 +1,38 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/.
+ *
+ * The origin of this IDL file is
+ * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html
+ *
+ * Copyright © 2012 W3C® (MIT, ERCIM, Keio), All Rights Reserved. W3C
+ * liability, trademark and document use rules apply.
+ */
+
+#include "nsIDOMEvent.idl"
+
+interface SpeechRecognitionResultList;
+
+[scriptable, builtinclass, uuid(98dded70-33af-42d5-819d-e15b6f4a3aba)]
+interface nsIDOMSpeechRecognitionEvent : nsIDOMEvent {
+    [noscript] void initSpeechRecognitionEvent(in DOMString eventTypeArg,
+                                               in boolean canBubbleArg,
+                                               in boolean cancelableArg,
+                                               in unsigned long resultIndex,
+                                               in nsISupports results,
+                                               in DOMString interpretation,
+                                               in nsIDOMDocument emma);
+
+    readonly attribute unsigned long resultIndex;
+    readonly attribute nsISupports results;
+    readonly attribute DOMString interpretation;
+    readonly attribute nsIDOMDocument emma;
+};
+
+dictionary SpeechRecognitionEventInit : EventInit {
+    unsigned long resultIndex;
+    nsISupports results;
+    DOMString interpretation;
+    nsIDOMDocument emma;
+};
diff --git a/content/media/webspeech/recognition/nsISpeechRecognitionService.idl b/content/media/webspeech/recognition/nsISpeechRecognitionService.idl
new file mode 100644
--- /dev/null
+++ b/content/media/webspeech/recognition/nsISpeechRecognitionService.idl
@@ -0,0 +1,25 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+%{C++
+#include "mozilla/WeakPtr.h"
+%}
+
+native SpeechRecognitionWeakPtr(mozilla::WeakPtr<mozilla::dom::SpeechRecognition>);
+[ptr] native AudioSegmentPtr(mozilla::AudioSegment);
+
+[uuid(cb98d929-81cd-4a51-a214-80d3e6281d24)]
+interface nsISpeechRecognitionService : nsISupports {
+    void initialize(in SpeechRecognitionWeakPtr aSpeechRecognition);
+    void processAudioSegment(in AudioSegmentPtr aAudioSegment);
+    void soundEnd();
+    void abort();
+};
+
+%{C++
+#define NS_SPEECH_RECOGNITION_SERVICE_CONTRACTID_PREFIX "@mozilla.org/webspeech/service;1?name="
+%}
diff --git a/docshell/base/nsIDocShell.idl b/docshell/base/nsIDocShell.idl
--- a/docshell/base/nsIDocShell.idl
+++ b/docshell/base/nsIDocShell.idl
@@ -35,17 +35,17 @@ interface nsISHEntry;
 interface nsILayoutHistoryState;
 interface nsISecureBrowserUI;
 interface nsIDOMStorage;
 interface nsIPrincipal;
 interface nsIWebBrowserPrint;
 interface nsIVariant;
 interface nsIPrivacyTransitionObserver;
 
-[scriptable, builtinclass, uuid(e8f6f3e5-8cee-4be3-8d56-5ed617305bf8)]
+[scriptable, builtinclass, uuid(4277354d-5069-4278-935a-5d596ce9bfbf)]
 interface nsIDocShell : nsIDocShellTreeItem
 {
   /**
    * Loads a given URI.  This will give priority to loading the requested URI
    * in the object implementing	this interface.  If it can't be loaded here
    * however, the URL dispatcher will go through its normal process of content
    * loading.
    *
@@ -592,16 +592,23 @@ interface nsIDocShell : nsIDocShellTreeI
    * embedding application will need to cause the data to be 
    * reparsed in order to update the DOM / display.
    *
    * A force also sets the fallback encoding for this frame.
    */
   attribute string charset;
 
   /**
+   * Called when the user chose an encoding override from the character
+   * encoding menu. Separate from the setter for the charset property to avoid
+   * extensions adding noise to the data.
+   */
+  void gatherCharsetMenuTelemetry();
+
+  /**
    * The charset forced by the user. When the charset attribute is set this
    * attribute is set to the same value.
    *
    * XXX Could this be replaced by a boolean?
    */
   attribute nsIAtom forcedCharset;
 
   /**
diff --git a/docshell/base/nsIDocShellTreeItem.idl b/docshell/base/nsIDocShellTreeItem.idl
--- a/docshell/base/nsIDocShellTreeItem.idl
+++ b/docshell/base/nsIDocShellTreeItem.idl
@@ -10,23 +10,23 @@ interface nsIDocShellTreeOwner;
 
 
 /**
  * The nsIDocShellTreeItem supplies the methods that are required of any item
  * that wishes to be able to live within the docshell tree either as a middle
  * node or a leaf. 
  */
 
-[scriptable, uuid(09b54ec1-d98a-49a9-bc95-3219e8b55089)]
+[scriptable, uuid(e35bbb39-985b-4d62-81da-73c330222e5f)]
 interface nsIDocShellTreeItem : nsIDocShellTreeNode
 {
 	/*
 	name of the DocShellTreeItem
 	*/
-	attribute wstring name;
+	attribute AString name;
 
         /**
          * Compares the provided name against the item's name and
          * returns the appropriate result.
          *
          * @return <CODE>PR_TRUE</CODE> if names match;
          *         <CODE>PR_FALSE</CODE> otherwise.
          */
diff --git a/dom/activities/interfaces/nsIActivityProxy.idl b/dom/activities/interfaces/nsIActivityProxy.idl
--- a/dom/activities/interfaces/nsIActivityProxy.idl
+++ b/dom/activities/interfaces/nsIActivityProxy.idl
@@ -1,21 +1,20 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
-interface nsIDOMMozActivity;
 interface nsIDOMMozActivityOptions;
 interface nsIDOMWindow;
 
 /**
   * Implemented by @mozilla.org/dom/activities/proxy;1
   */
-[scriptable, uuid(3f9e0695-f466-4111-a8fa-ed5c0751c42b)]
+[scriptable, uuid(c7a258f7-26a6-46c6-a887-a6c936034f98)]
 interface nsIActivityProxy : nsISupports
 {
-    void startActivity(in nsIDOMMozActivity activity,
+    void startActivity(in nsISupports /* MozActivity */ activity,
                        in nsIDOMMozActivityOptions options,
                        in nsIDOMWindow window);
     void cleanup();
 };
diff --git a/dom/activities/interfaces/nsIDOMActivity.idl b/dom/activities/interfaces/nsIDOMActivity.idl
deleted file mode 100644
--- a/dom/activities/interfaces/nsIDOMActivity.idl
+++ /dev/null
@@ -1,14 +0,0 @@
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this file,
- * You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "domstubs.idl"
-#include "nsIDOMDOMRequest.idl"
-
-/**
-  * The constructor will accept a nsIDOMActivityOptions parameter.
-  */
-[scriptable, builtinclass, uuid(1f59cd9a-b8b5-4a98-bd2a-897b73584946)]
-interface nsIDOMMozActivity : nsIDOMDOMRequest
-{
-};
diff --git a/dom/base/nsIDOMDOMRequest.idl b/dom/base/nsIDOMDOMRequest.idl
--- a/dom/base/nsIDOMDOMRequest.idl
+++ b/dom/base/nsIDOMDOMRequest.idl
@@ -6,17 +6,17 @@
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMDOMError;
 interface nsIDOMWindow;
 interface nsIDOMDOMCursor;
 interface nsICursorContinueCallback;
 
-[scriptable, builtinclass, uuid(d88998b7-ee30-4ae5-bbed-58f5711929de)]
+[scriptable, builtinclass, uuid(e18fdde5-35b0-46df-8522-f88adf7698f3)]
 interface nsIDOMDOMRequest : nsIDOMEventTarget
 {
   readonly attribute DOMString readyState; // "pending" or "done"
 
   readonly attribute jsval result;
   readonly attribute nsIDOMDOMError error;
 
   [implicit_jscontext] attribute jsval onsuccess;
diff --git a/dom/base/nsISiteSpecificUserAgent.idl b/dom/base/nsISiteSpecificUserAgent.idl
--- a/dom/base/nsISiteSpecificUserAgent.idl
+++ b/dom/base/nsISiteSpecificUserAgent.idl
@@ -1,25 +1,28 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIURI;
+interface nsIDOMWindow;
 
 /**
- * nsISiteSpecificUserAgent provides you with site-specific User Agent strings.
+ * nsISiteSpecificUserAgent provides you with site/window-specific User Agent strings.
  */
 
-[scriptable, uuid(604a64af-9809-4c2f-a91d-f6ebfa21f6cb)]
+[scriptable, uuid(a509469a-ef3d-4ad1-8dba-c92a96b0bc64)]
 interface nsISiteSpecificUserAgent : nsISupports
 {
   /**
    * Get the User Agent string for a given URI.
    *
    * @param aURI is the URI of the page the UA string is used for.
    *
+   * @param aWindow is the window this UA is being requested for
+   *
    * @returns the User Agent string for the given URI. If no override applies,
    * the default User Agent string is used.
    */
-  AString getUserAgentForURI(in nsIURI aURI);
+  AString getUserAgentForURIAndWindow(in nsIURI aURI, in nsIDOMWindow aWindow);
 };
diff --git a/dom/bluetooth/nsIDOMBluetoothAdapter.idl b/dom/bluetooth/nsIDOMBluetoothAdapter.idl
--- a/dom/bluetooth/nsIDOMBluetoothAdapter.idl
+++ b/dom/bluetooth/nsIDOMBluetoothAdapter.idl
@@ -5,22 +5,21 @@
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMDOMRequest;
 interface nsIDOMBlob;
 interface nsIDOMBluetoothDevice;
 
-[scriptable, builtinclass, uuid(6a4a9415-cda3-4a19-b79e-05d9bc2c2700)]
+[scriptable, builtinclass, uuid(4321647b-0d45-4231-920b-8d238b6d1700)]
 interface nsIDOMBluetoothAdapter : nsIDOMEventTarget
 {
   readonly attribute DOMString address;
   [binaryname(AdapterClass)] readonly attribute unsigned long class;
-  readonly attribute bool enabled;
   readonly attribute bool discovering;
 
   [implicit_jscontext]
   readonly attribute jsval devices;
 
   [implicit_jscontext]
   readonly attribute jsval uuids;
   
@@ -55,21 +54,9 @@ interface nsIDOMBluetoothAdapter : nsIDO
 
   // One device can only send one file at a time
   nsIDOMDOMRequest sendFile(in DOMString aDeviceAddress, in nsIDOMBlob aBlob);
   nsIDOMDOMRequest stopSendingFile(in DOMString aDeviceAddress);
   nsIDOMDOMRequest confirmReceivingFile(in DOMString aDeviceAddress, in bool aConfirmation);
 
   // Fired when discoverying and any device is discovered.
   [implicit_jscontext] attribute jsval ondevicefound;
-  // Fired when any device is out of discoverable range.
-  [implicit_jscontext] attribute jsval ondevicedisappeared;
-  // Fired when any device is created.
-  [implicit_jscontext] attribute jsval ondevicecreated;
-  // Fired when a property of the adapter is changed
-  [implicit_jscontext] attribute jsval onpropertychanged;
-  // Pairing related events
-  [implicit_jscontext] attribute jsval onrequestconfirmation;
-  [implicit_jscontext] attribute jsval onrequestpincode;
-  [implicit_jscontext] attribute jsval onrequestpasskey;
-  [implicit_jscontext] attribute jsval onauthorize;
-  [implicit_jscontext] attribute jsval oncancel;
 };
diff --git a/dom/bluetooth/nsIDOMBluetoothDevice.idl b/dom/bluetooth/nsIDOMBluetoothDevice.idl
--- a/dom/bluetooth/nsIDOMBluetoothDevice.idl
+++ b/dom/bluetooth/nsIDOMBluetoothDevice.idl
@@ -1,23 +1,20 @@
 /* -*- Mode: c++; c-basic-offset: 2; indent-tabs-mode: nil; tab-width: 40 -*- */
 /* vim: set ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
-[scriptable, builtinclass, uuid(4a679fc6-572a-4ddc-8e93-cfbddb9f2d6a)]
+[scriptable, builtinclass, uuid(7297ef65-db38-45f1-a5dc-b7347aaa223d)]
 interface nsIDOMBluetoothDevice : nsIDOMEventTarget
 {
   readonly attribute DOMString address;
   readonly attribute DOMString name;
   readonly attribute DOMString icon;
   [binaryname(DeviceClass)] readonly attribute unsigned long class;
   [implicit_jscontext] readonly attribute jsval uuids;
   [implicit_jscontext] readonly attribute jsval services;
   readonly attribute bool connected;
   readonly attribute bool paired;
-  [implicit_jscontext] attribute jsval onpropertychanged;
-  [implicit_jscontext] attribute jsval onconnected;
-  [implicit_jscontext] attribute jsval ondisconnected;
 };
diff --git a/dom/bluetooth/nsIDOMBluetoothDeviceAddressEvent.idl b/dom/bluetooth/nsIDOMBluetoothDeviceAddressEvent.idl
deleted file mode 100644
--- a/dom/bluetooth/nsIDOMBluetoothDeviceAddressEvent.idl
+++ /dev/null
@@ -1,21 +0,0 @@
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this file,
- * You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsIDOMEvent.idl"
-
-[scriptable, builtinclass, uuid(90c55b1c-2da5-4a30-bf09-0c70369a8d89)]
-interface nsIDOMBluetoothDeviceAddressEvent : nsIDOMEvent
-{
-  readonly attribute DOMString  deviceAddress;
-
-  [noscript] void initBluetoothDeviceAddressEvent(in DOMString aType,
-                                                  in boolean aCanBubble,
-                                                  in boolean aCancelable,
-                                                  in DOMString aDeviceAddress);
-};
-
-dictionary BluetoothDeviceAddressEventInit : EventInit
-{
-  DOMString  deviceAddress;
-};
diff --git a/dom/bluetooth/nsIDOMBluetoothManager.idl b/dom/bluetooth/nsIDOMBluetoothManager.idl
--- a/dom/bluetooth/nsIDOMBluetoothManager.idl
+++ b/dom/bluetooth/nsIDOMBluetoothManager.idl
@@ -4,17 +4,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMDOMRequest;
 interface nsIDOMBluetoothAdapter;
 
-[scriptable, builtinclass, uuid(3300693f-ae91-4a3f-b887-bf502c6a97ee)]
+[scriptable, builtinclass, uuid(303a262a-1dd1-486d-a108-d8c582e86765)]
 interface nsIDOMBluetoothManager : nsIDOMEventTarget
 {
   readonly attribute bool enabled;
 
   nsIDOMDOMRequest getDefaultAdapter();
 
   bool isConnected(in unsigned short aProfile);
 
diff --git a/dom/cellbroadcast/interfaces/nsICellBroadcastProvider.idl b/dom/cellbroadcast/interfaces/nsICellBroadcastProvider.idl
new file mode 100644
--- /dev/null
+++ b/dom/cellbroadcast/interfaces/nsICellBroadcastProvider.idl
@@ -0,0 +1,35 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIDOMMozCellBroadcastMessage;
+
+[scriptable, uuid(4c6fb794-31bd-4ed7-b21a-34b82aa3efbe)]
+interface nsICellBroadcastListener : nsISupports
+{
+  /**
+   * Called when a Cell Broadcast message has been received by the network.
+   *
+   * @param message
+   *        The received Cell Broadcast Message.
+   */
+  void notifyMessageReceived(in nsIDOMMozCellBroadcastMessage message);
+};
+
+/**
+ * XPCOM component (in the content process) that provides the cell broadcast
+ * information.
+ */
+[scriptable, uuid(e6c01d18-829e-4d5a-9611-60fca36e6b46)]
+interface nsICellBroadcastProvider : nsISupports
+{
+  /**
+   * Called when a content process registers receiving unsolicited messages from
+   * RadioInterfaceLayer in the chrome process. Only a content process that has
+   * the 'cellbroadcast' permission is allowed to register.
+   */
+  void registerCellBroadcastMsg(in nsICellBroadcastListener listener);
+  void unregisterCellBroadcastMsg(in nsICellBroadcastListener listener);
+};
diff --git a/dom/cellbroadcast/interfaces/nsIDOMMozCellBroadcast.idl b/dom/cellbroadcast/interfaces/nsIDOMMozCellBroadcast.idl
--- a/dom/cellbroadcast/interfaces/nsIDOMMozCellBroadcast.idl
+++ b/dom/cellbroadcast/interfaces/nsIDOMMozCellBroadcast.idl
@@ -4,14 +4,14 @@
 
 #include "nsIDOMEventTarget.idl"
 
 /**
  * Cell Broadcast short message service (CBS) permits a number of
  * unacknowledged general CBS messages to be broadcast to all receivers within
  * a particular region.
  */
-[scriptable, builtinclass, uuid(06bf2607-cd01-4307-9063-b6eac13b4613)]
+[scriptable, builtinclass, uuid(113bd5ff-8981-4e55-8c20-ea68fd722a48)]
 interface nsIDOMMozCellBroadcast : nsIDOMEventTarget
 {
   [implicit_jscontext] attribute jsval onreceived;
 };
 
diff --git a/dom/file/nsIDOMArchiveReader.idl b/dom/file/nsIDOMArchiveReader.idl
deleted file mode 100644
--- a/dom/file/nsIDOMArchiveReader.idl
+++ /dev/null
@@ -1,32 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-interface nsIDOMArchiveRequest;
-
-[scriptable, builtinclass, uuid(a616ab85-fc3a-4028-9f10-f8620ee1b8e1)]
-interface nsIDOMArchiveReader : nsISupports
-{
-  nsIDOMArchiveRequest getFilenames();
-  nsIDOMArchiveRequest getFile(in DOMString filename);
-  nsIDOMArchiveRequest getFiles();
-};
-
-/* This dictionary is the optional argument for the
- * ArchiveReader constructor:
- * var a = new ArchiveReader(blob, { encoding: "iso-8859-1" }); */
-dictionary ArchiveReaderOptions
-{
-  DOMString encoding = "windows-1252"; // Default fallback encoding
-};
-
-%{ C++
-#define NS_ARCHIVEREADER_CID                         \
-{0xb6b8c817, 0x4e9a, 0x46f8,                         \
-{0x9e, 0x3e, 0x3d, 0x96, 0x79, 0x01, 0xa2, 0x80}}
-#define NS_ARCHIVEREADER_CONTRACTID \
-"@mozilla.org/files/archivereader;1"
-%}
diff --git a/dom/file/nsIDOMArchiveRequest.idl b/dom/file/nsIDOMArchiveRequest.idl
deleted file mode 100644
--- a/dom/file/nsIDOMArchiveRequest.idl
+++ /dev/null
@@ -1,15 +0,0 @@
-/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ts=2 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this file,
- * You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsIDOMDOMRequest.idl"
-
-interface nsIDOMArchiveReader;
-
-[scriptable, builtinclass, uuid(6e59f1be-24bc-43ee-810a-8abb21599f29)]
-interface nsIDOMArchiveRequest : nsIDOMDOMRequest
-{
-  readonly attribute nsIDOMArchiveReader reader;
-};
diff --git a/dom/file/nsIDOMFileRequest.idl b/dom/file/nsIDOMFileRequest.idl
deleted file mode 100644
--- a/dom/file/nsIDOMFileRequest.idl
+++ /dev/null
@@ -1,18 +0,0 @@
-/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ts=2 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this file,
- * You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsIDOMDOMRequest.idl"
-
-interface nsIDOMEventListener;
-interface nsIDOMLockedFile;
-
-[scriptable, builtinclass, uuid(6733d649-0acb-487d-8a7d-f102ac4419e9)]
-interface nsIDOMFileRequest : nsIDOMDOMRequest
-{
-  readonly attribute nsIDOMLockedFile lockedFile;
-
-  [implicit_jscontext] attribute jsval onprogress;
-};
diff --git a/dom/file/nsIDOMLockedFile.idl b/dom/file/nsIDOMLockedFile.idl
--- a/dom/file/nsIDOMLockedFile.idl
+++ b/dom/file/nsIDOMLockedFile.idl
@@ -3,63 +3,62 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIDOMEventListener;
 interface nsIDOMFileHandle;
-interface nsIDOMFileRequest;
 
 dictionary DOMFileMetadataParameters
 {
   boolean size;
   boolean lastModified;
 };
 
-[scriptable, builtinclass, uuid(589e0d26-20b5-4355-ac1e-9c6fd0dd83f2)]
+[scriptable, builtinclass, uuid(a09cdc35-6b1e-42ce-95bb-f8f10a354202)]
 interface nsIDOMLockedFile : nsISupports
 {
   readonly attribute nsIDOMFileHandle fileHandle;
 
   // "readonly" or "readwrite"
   readonly attribute DOMString mode;
 
   readonly attribute boolean active;
 
   [implicit_jscontext]
   attribute jsval location;
 
   [implicit_jscontext]
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   getMetadata(/* DOMFileMetadataParameters */
               [optional /* all */] in jsval parameters);
 
   [implicit_jscontext]
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   readAsArrayBuffer(in unsigned long long size);
 
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   readAsText(in unsigned long long size,
              [optional] in DOMString encoding);
 
   [implicit_jscontext]
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   write(in jsval value);
 
   [implicit_jscontext]
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   append(in jsval value);
 
   [optional_argc]
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   truncate([optional] in unsigned long long size);
 
-  nsIDOMFileRequest
+  nsISupports /* FileRequest */
   flush();
 
   void
   abort();
 
   [implicit_jscontext] attribute jsval oncomplete;
 
   [implicit_jscontext] attribute jsval onabort;
diff --git a/dom/fm/nsIFMRadio.idl b/dom/fm/nsIFMRadio.idl
--- a/dom/fm/nsIFMRadio.idl
+++ b/dom/fm/nsIFMRadio.idl
@@ -21,17 +21,17 @@ interface nsIFMRadioSettings : nsISuppor
  *
  * Because the WebFM API (navigator.mozFMRadio) is implemented as a JS component,
  * it can't access our C++ hardware interface directly; instead it must go
  * through this interface.
  * Do not confuse this interface with the WebFM DOM interface (nsIDOMFMRadio).
  *
  * If the WebFM API is re-written in c++ some day, this interface will be useless.
  */
-[scriptable, builtinclass, uuid(9586bc9c-738e-4bcd-907c-ad340a6adc8b)]
+[scriptable, builtinclass, uuid(2ee7c122-b7aa-4948-9bc5-e4593ed4ac32)]
 interface nsIFMRadio : nsIDOMEventTarget {
     const long SEEK_DIRECTION_UP   = 0;
     const long SEEK_DIRECTION_DOWN = 1;
 
     /**
      * Indicates if the FM radio hardware is enabled.
      */
     readonly attribute boolean enabled;
diff --git a/dom/icc/interfaces/SimToolKit.idl b/dom/icc/interfaces/SimToolKit.idl
--- a/dom/icc/interfaces/SimToolKit.idl
+++ b/dom/icc/interfaces/SimToolKit.idl
@@ -11,16 +11,23 @@ dictionary MozStkTextMessage
   /**
    * Text String.
    *
    * @see TS 11.14, clause 12.15, Text String.
    */
   DOMString text;
 
   /**
+   * The length of time for which the ME shall display the dialog.
+   *
+   * @see MozStkDuration
+   */
+  jsval duration;
+
+  /**
    * Indicate this text message is high priority or normal priority.
    *
    * @see TS 11.14, clause 12.6, Command Qualifier, Display Text, bit 1.
    *
    * High priority text shall be displayed on the screen immediately, except if
    * there is a conflict of priority level of alerting such as incoming calls
    * or a low battery warning. In that situation, the resolution is left to
    * the terminal. If the command is rejected in spite of the high priority,
@@ -244,16 +251,23 @@ dictionary MozStkSetUpCall
 
   /**
    * The text message used in call set up phase.
    *
    * @see MozStkTextMessage for the detail specification of
    *      callMessage.
    */
   jsval callMessage;
+
+  /**
+   * The Optional maximum duration for the redial mechanism.
+   * The time elapsed since the first call set-up attempt has exceeded the duration
+   * requested by the UICC, the redial mechanism is terminated.
+   */
+  jsval duration;
 };
 
 dictionary MozStkSetUpEventList
 {
   /**
    * The list of events that needs to provide details to ICC when they happen.
    * When this valus is null, means an indication to remove the existing list
    * of events in ME.
diff --git a/dom/icc/interfaces/nsIDOMIccManager.idl b/dom/icc/interfaces/nsIDOMIccManager.idl
--- a/dom/icc/interfaces/nsIDOMIccManager.idl
+++ b/dom/icc/interfaces/nsIDOMIccManager.idl
@@ -1,18 +1,20 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 #include "SimToolKit.idl"
 
 interface nsIDOMEventListener;
+interface nsIDOMDOMRequest;
+interface nsIDOMContact;
 
-[scriptable, builtinclass, uuid(9d898c66-3485-4cd5-ab8d-92ef2988887b)]
+[scriptable, builtinclass, uuid(9af5378e-03ce-4c5f-8ec1-50ae774b5612)]
 interface nsIDOMMozIccManager : nsIDOMEventTarget
 {
   /**
    * STK Menu Presentation types.
    */
   const unsigned short STK_MENU_TYPE_NOT_SPECIFIED      = 0x00;
   const unsigned short STK_MENU_TYPE_DATA_VALUES        = 0x01;
   const unsigned short STK_MENU_TYPE_NAVIGATION_OPTIONS = 0x03;
@@ -267,9 +269,67 @@ interface nsIDOMMozIccManager : nsIDOMEv
    */
   [implicit_jscontext] attribute jsval onstkcommand;
 
   /**
    * 'stksessionend' event is notified whenever STK Session is terminated by
    * ICC.
    */
   [implicit_jscontext] attribute jsval onstksessionend;
+
+  /**
+   * Update ICC Phonebook contact.
+   *
+   * @param contactType
+   *        One of type as below,
+   *        - 'adn': Abbreviated Dialling Number
+   *        - 'fdn': Fixed Dialling Number
+   * @param contact
+   *        The contact will be updated in ICC
+   * @param [optional] pin2
+   *        PIN2 is only required for 'fdn'.
+   */
+  nsIDOMDOMRequest updateContact(in DOMString contactType,
+                                 in nsIDOMContact contact,
+                                 [optional] in DOMString pin2);
+
+  // UICC Secure Element Interfaces
+
+  /**
+   * A secure element is a smart card chip that can hold
+   * several different applications with the necessary security.
+   * The most known secure element is the Universal Integrated Circuit Card (UICC)
+   */
+
+  /**
+   * Send request to open a logical channel defined by its
+   * application identifier (AID)
+   *
+   * @param aid
+   *        The Application Identifier of the Applet to be selected on this channel
+   * return value : An instance of Channel (channelID) if available or null.
+   */
+  nsIDOMDOMRequest iccOpenChannel(in DOMString aid);
+
+  /**
+   * Interface, used to communicate with an applet through the
+   * Application Data Protocol Units (APDUs) and is
+   * used for all data that is exchanged between the UICC card and the terminal (ME).
+   *
+   * @param channel
+   *        The Application Identifier of the Applet to which APDU is directed
+   * @param apdu
+   *        Application Protocol Data Unit
+   * return value : Response APDU
+   */
+  nsIDOMDOMRequest iccExchangeAPDU(in long channel, in jsval apdu);
+
+  /**
+   * Send request to close the selected logical channel identified by its
+   * application identifier (AID)
+   *
+   * @param aid
+   *        The Application Identifier of the Applet , to be closed
+   */
+  nsIDOMDOMRequest iccCloseChannel(in long channel);
+
+  // End of UICC Secure Element Interfaces
 };
diff --git a/dom/icc/interfaces/nsIIccProvider.idl b/dom/icc/interfaces/nsIIccProvider.idl
new file mode 100644
--- /dev/null
+++ b/dom/icc/interfaces/nsIIccProvider.idl
@@ -0,0 +1,60 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIDOMWindow;
+interface nsIDOMDOMRequest;
+interface nsIDOMContact;
+
+[scriptable, uuid(f383a42b-0961-4bb0-b45e-dbc345d59237)]
+interface nsIIccListener : nsISupports
+{
+  void notifyStkCommand(in DOMString aMessage);
+  void notifyStkSessionEnd();
+};
+
+/**
+ * XPCOM component (in the content process) that provides the ICC information.
+ */
+[scriptable, uuid(c74b434a-fb2a-4e22-a6cd-1ac353e3f4ce)]
+interface nsIIccProvider : nsISupports
+{
+  /**
+   * Called when a content process registers receiving unsolicited messages from
+   * RadioInterfaceLayer in the chrome process. Only a content process that has
+   * the 'mobileconnection' permission is allowed to register.
+   */
+  void registerIccMsg(in nsIIccListener listener);
+  void unregisterIccMsg(in nsIIccListener listener);
+
+  void sendStkResponse(in nsIDOMWindow window,
+                       in jsval        command,
+                       in jsval        response);
+  void sendStkMenuSelection(in nsIDOMWindow   window,
+                            in unsigned short itemIdentifier,
+                            in boolean        helpRequested);
+  void sendStkTimerExpiration(in nsIDOMWindow window,
+                              in jsval        timer);
+  void sendStkEventDownload(in nsIDOMWindow window,
+                            in jsval        event);
+
+  nsIDOMDOMRequest updateContact(in nsIDOMWindow window,
+                                 in DOMString contactType,
+                                 in nsIDOMContact contact,
+                                 in DOMString pin2);
+
+  /**
+   * Secure Card Icc communication channel
+   */
+  nsIDOMDOMRequest iccOpenChannel(in nsIDOMWindow window,
+                                  in DOMString aid);
+
+  nsIDOMDOMRequest iccExchangeAPDU(in nsIDOMWindow window,
+                                   in long channel,
+                                   in jsval apdu);
+
+  nsIDOMDOMRequest iccCloseChannel(in nsIDOMWindow window,
+                                   in long channel);
+};
diff --git a/dom/indexedDB/nsIIDBFactory.idl b/dom/indexedDB/nsIIDBFactory.idl
deleted file mode 100644
--- a/dom/indexedDB/nsIIDBFactory.idl
+++ /dev/null
@@ -1,33 +0,0 @@
-/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* vim: set ts=8 et sw=2 tw=80: */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-interface nsIIDBKeyRange;
-interface nsIIDBOpenDBRequest;
-
-/**
- * Interface that defines the indexedDB property on a window.  See
- * http://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#idl-def-IDBFactory
- * for more information.
- */
-[scriptable, builtinclass, uuid(3c763a8f-df53-491d-9635-e1d959e43c0c)]
-interface nsIIDBFactory : nsISupports
-{
-  [implicit_jscontext, optional_argc]
-  nsIIDBOpenDBRequest
-  open([Null(Stringify)] in DOMString name,
-       [optional] in long long version);
-
-  [implicit_jscontext]
-  nsIIDBOpenDBRequest
-  deleteDatabase(in AString name);
-
-  [implicit_jscontext]
-  short
-  cmp(in jsval first,
-      in jsval second);
-};
diff --git a/dom/indexedDB/nsIIndexedDatabaseManager.idl b/dom/indexedDB/nsIIndexedDatabaseManager.idl
--- a/dom/indexedDB/nsIIndexedDatabaseManager.idl
+++ b/dom/indexedDB/nsIIndexedDatabaseManager.idl
@@ -1,74 +1,20 @@
 /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* vim: set ts=2 et sw=2 tw=80: */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
-interface nsIURI;
-
-[scriptable, function, uuid(38f15cc7-2df0-4a90-8b7f-1606b2243522)]
-interface nsIIndexedDatabaseUsageCallback : nsISupports
-{
-  void onUsageResult(in nsIURI aURI,
-                     in unsigned long long aUsage,
-                     in unsigned long long aFileUsage,
-                     in unsigned long aAppId,
-                     in boolean aInMozBrowserOnly);
-};
-
-[scriptable, builtinclass, uuid(e5168115-baff-4559-887e-7c0405cc9e63)]
+[scriptable, builtinclass, uuid(538d1085-517e-405a-a0f0-eb575cb0b8e5)]
 interface nsIIndexedDatabaseManager : nsISupports
 {
   /**
-   * Schedules an asynchronous callback that will return the total amount of
-   * disk space being used by databases for the given origin.
-   *
-   * @param aURI
-   *        The URI whose usage is being queried.
-   * @param aCallback
-   *        The callback that will be called when the usage is available.
-   */
-  [optional_argc]
-  void getUsageForURI(in nsIURI aURI,
-                      in nsIIndexedDatabaseUsageCallback aCallback,
-                      [optional] in unsigned long aAppId,
-                      [optional] in boolean aInMozBrowserOnly);
-
-  /**
-   * Cancels an asynchronous usage check initiated by a previous call to
-   * getUsageForURI().
-   *
-   * @param aURI
-   *        The URI whose usage is being queried.
-   * @param aCallback
-   *        The callback that will be called when the usage is available.
-   */
-  [optional_argc]
-  void cancelGetUsageForURI(in nsIURI aURI,
-                            in nsIIndexedDatabaseUsageCallback aCallback,
-                            [optional] in unsigned long aAppId,
-                            [optional] in boolean aInMozBrowserOnly);
-
-  /**
-   * Removes all databases stored for the given URI. The files may not be
-   * deleted immediately depending on prohibitive concurrent operations.
-   *
-   * @param aURI
-   *        The URI whose databases are to be cleared.
-   */
-  [optional_argc]
-  void clearDatabasesForURI(in nsIURI aURI,
-                            [optional] in unsigned long aAppId,
-                            [optional] in boolean aInMozBrowserOnly);
-
-  /**
    * Defines indexedDB and IDBKeyrange with its static functions on 
    * aObject and initializes DOM exception providers if needed.
    *
    * @param aObject
    *        The object, indexedDB and IDBKeyrange should be defined on.
    */
   [implicit_jscontext]
   void initWindowless(in jsval aObject);
diff --git a/dom/interfaces/base/domstubs.idl b/dom/interfaces/base/domstubs.idl
--- a/dom/interfaces/base/domstubs.idl
+++ b/dom/interfaces/base/domstubs.idl
@@ -18,17 +18,16 @@ interface nsIDOMAttr;
 interface nsIDOMCDATASection;
 interface nsIDOMCharacterData;
 interface nsIDOMComment;
 interface nsIDOMDOMImplementation;
 interface nsIDOMDocument;
 interface nsIDOMDocumentFragment;
 interface nsIDOMDocumentType;
 interface nsIDOMElement;
-interface nsIDOMNamedNodeMap;
 interface nsIDOMNode;
 interface nsIDOMNodeList;
 interface nsIDOMProcessingInstruction;
 interface nsIDOMText;
 interface nsIDOMDOMStringList;
 interface nsIDOMClientRect;
 interface nsIDOMClientRectList;
 
diff --git a/dom/interfaces/base/nsIContentPrefService2.idl b/dom/interfaces/base/nsIContentPrefService2.idl
--- a/dom/interfaces/base/nsIContentPrefService2.idl
+++ b/dom/interfaces/base/nsIContentPrefService2.idl
@@ -54,21 +54,25 @@ interface nsIContentPref;
  * usePrivateBrowsing is true, temporary private-browsing storage is used, and
  * otherwise permanent storage is used.  A context can be obtained from the
  * window or channel whose content pertains to the preferences being modified or
  * retrieved.
  *
  *
  * Callbacks
  *
- * The methods of callback objects are always called asynchronously.  See
- * nsIContentPrefCallback2 below for more information about callbacks.
+ * The methods of callback objects are always called asynchronously.
+ *
+ * Observers are called after callbacks are called, but they are called in the
+ * same turn of the event loop as callbacks.
+ *
+ * See nsIContentPrefCallback2 below for more information about callbacks.
  */
 
-[scriptable, uuid(51e1d34a-5e9d-4b77-b14c-0f8346e264ca)]
+[scriptable, uuid(133608c7-f812-41ca-bc1c-62a4eb95e52a)]
 interface nsIContentPrefService2 : nsISupports
 {
   /**
    * Gets the preference with the given domain and name.
    *
    * @param domain    The preference's domain.
    * @param name      The preference's name.
    * @param context   The private-browsing context, if any.
@@ -313,16 +317,27 @@ interface nsIContentPrefService2 : nsISu
    * Unregisters an observer for the given name.
    *
    * @param name      The name for which the observer was registered.  Pass null
    *                  if the observer was added with a null name.
    * @param observer  The observer.
    */
   void removeObserverForName(in AString name,
                              in nsIContentPrefObserver observer);
+
+  /**
+   * Extracts and returns the domain from the given string representation of a
+   * URI.  This is how the API extracts domains from URIs passed to it.
+   *
+   * @param str  The string representation of a URI, like
+   *             "http://example.com/foo/bar".
+   * @return     If the given string is a valid URI, the domain of that URI is
+   *             returned.  Otherwise, the string itself is returned.
+   */
+  AString extractDomain(in AString str);
 };
 
 /**
  * The callback used by the above methods.
  */
 [scriptable, uuid(1a12cf41-79e8-4d0f-9899-2f7b27c5d9a1)]
 interface nsIContentPrefCallback2 : nsISupports
 {
@@ -331,17 +346,17 @@ interface nsIContentPrefCallback2 : nsIS
    * preference.  It is not called for other methods.
    *
    * @param pref  The retrieved preference.
    */
   void handleResult(in nsIContentPref pref);
 
   /**
    * Called when an error occurs.  This may be called multiple times before
-   * onComplete is called.
+   * handleCompletion is called.
    *
    * @param error  A number in Components.results describing the error.
    */
   void handleError(in nsresult error);
 
   /**
    * Called when the method finishes.  This will be called exactly once for
    * each method invocation, and afterward no other callback methods will be
diff --git a/dom/interfaces/base/nsIDOMScreen.idl b/dom/interfaces/base/nsIDOMScreen.idl
--- a/dom/interfaces/base/nsIDOMScreen.idl
+++ b/dom/interfaces/base/nsIDOMScreen.idl
@@ -1,16 +1,16 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
-[scriptable, builtinclass, uuid(01e8587b-35a9-4a59-8349-c7ee93846fb2)]
+[scriptable, builtinclass, uuid(310a1d9a-4271-4d85-9e35-9dae6683b2c1)]
 interface nsIDOMScreen : nsIDOMEventTarget
 {
   readonly attribute long             top;
   readonly attribute long             left;
   readonly attribute long             width;
   readonly attribute long             height;
   readonly attribute long             pixelDepth;
   readonly attribute long             colorDepth;
diff --git a/dom/interfaces/base/nsIDOMWindowUtils.idl b/dom/interfaces/base/nsIDOMWindowUtils.idl
--- a/dom/interfaces/base/nsIDOMWindowUtils.idl
+++ b/dom/interfaces/base/nsIDOMWindowUtils.idl
@@ -36,17 +36,17 @@ interface nsIDOMWindow;
 interface nsIDOMBlob;
 interface nsIDOMFile;
 interface nsIFile;
 interface nsIDOMTouch;
 interface nsIDOMClientRect;
 interface nsIURI;
 interface nsIDOMEventTarget;
 
-[scriptable, uuid(16b3bdcc-75d4-11e2-8a20-aaff78957a39)]
+[scriptable, uuid(ab9e9c45-1910-458c-a043-79cbbfc89f4d)]
 interface nsIDOMWindowUtils : nsISupports {
 
   /**
    * Image animation mode of the window. When this attribute's value
    * is changed, the implementation should set all images in the window
    * to the given value. That is, when set to kDontAnimMode, all images
    * will stop animating. The attribute's value must be one of the
    * animationMode values from imgIContainer.
@@ -647,17 +647,17 @@ interface nsIDOMWindowUtils : nsISupport
    */
   void getScrollXY(in boolean aFlushLayout, out long aScrollX, out long aScrollY);
 
   /**
    * Returns the scrollbar width of the window's scroll frame.
    *
    * @param aFlushLayout flushes layout if true. Otherwise, no flush occurs.
    */
-  long getScrollbarWidth(in boolean aFlushLayout);
+  void getScrollbarSize(in boolean aFlushLayout, out long aWidth, out long aHeight);
 
   /**
    * Returns the bounds of the window's currently loaded document. This will
    * generally be (0, 0, pageWidth, pageHeight) but in some cases (e.g. RTL
    * documents) may have a negative left value.
    */
   nsIDOMClientRect getRootBounds();
 
@@ -1133,16 +1133,22 @@ interface nsIDOMWindowUtils : nsISupport
   void advanceTimeAndRefresh(in long long aMilliseconds);
 
   /**
    * Undoes the effects of advanceTimeAndRefresh.
    */
   void restoreNormalRefresh();
 
   /**
+   * Reports whether the current state is test-controlled refreshes
+   * (see advanceTimeAndRefresh and restoreNormalRefresh above).
+   */
+  readonly attribute bool isTestControllingRefreshes;
+
+  /**
    * Method for testing nsStyleAnimation::ComputeDistance.
    *
    * Returns the distance between the two values as reported by
    * nsStyleAnimation::ComputeDistance for the given element and
    * property.
    */
   double computeAnimationDistance(in nsIDOMElement element,
                                   in AString property,
@@ -1284,16 +1290,29 @@ interface nsIDOMWindowUtils : nsISupport
    * Set the scrollport size for the purposes of clamping scroll positions for
    * the root scroll frame of this document to be (aWidth,aHeight) in CSS pixels.
    *
    * The caller of this method must have chrome privileges.
    */
   void setScrollPositionClampingScrollPortSize(in float aWidth, in float aHeight);
 
   /**
+   * Set margins for the layout of fixed position elements in the content
+   * document. These are used on mobile, where the viewable area can be
+   * temporarily obscured by the browser chrome. In this situation, we're ok
+   * with scrollable page content being obscured, but fixed position content
+   * cannot be revealed without removing the obscuring chrome, so we use these
+   * margins so that it can remain visible.
+   *
+   * The caller of this method must have chrome privileges.
+   */
+  void setContentDocumentFixedPositionMargins(in float aTop, in float aRight,
+                                              in float aBottom, in float aLeft);
+
+  /**
    * Prevent this window (and any child windows) from displaying any further
    * dialogs (e.g. window.alert()).
    */
   void preventFurtherDialogs();
 
   const unsigned long AGENT_SHEET = 0;
   const unsigned long USER_SHEET = 1;
   const unsigned long AUTHOR_SHEET = 2;
@@ -1331,9 +1350,14 @@ interface nsIDOMWindowUtils : nsISupport
    void allowScriptsToClose();
 
    /**
     * In certain cases the event handling of nodes, form controls in practice,
     * may be disabled. Such cases are for example the existence of disabled
     * attribute or -moz-user-input: none/disabled.
     */
    boolean isNodeDisabledForEvents(in nsIDOMNode aNode);
+
+   /**
+    * Setting paintFlashing to true will flash newly painted area.
+    */
+   attribute boolean paintFlashing;
 };
diff --git a/dom/interfaces/core/nsIDOMAttr.idl b/dom/interfaces/core/nsIDOMAttr.idl
--- a/dom/interfaces/core/nsIDOMAttr.idl
+++ b/dom/interfaces/core/nsIDOMAttr.idl
@@ -9,17 +9,17 @@
  * The nsIDOMAttr interface represents an attribute in an "Element" object. 
  * Typically the allowable values for the attribute are defined in a document 
  * type definition.
  * 
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/
  */
 
-[scriptable, uuid(03da4bc9-1b9a-41dc-a1a4-32414d48d704)]
+[scriptable, builtinclass, uuid(a974a4d3-2ff1-445b-8b8e-0aada5d4eedc)]
 interface nsIDOMAttr : nsIDOMNode
 {
   readonly attribute DOMString            name;
   readonly attribute boolean              specified;
            attribute DOMString            value;
                                             // raises(DOMException) on setting
 
   // Introduced in DOM Level 2:
diff --git a/dom/interfaces/core/nsIDOMCDATASection.idl b/dom/interfaces/core/nsIDOMCDATASection.idl
--- a/dom/interfaces/core/nsIDOMCDATASection.idl
+++ b/dom/interfaces/core/nsIDOMCDATASection.idl
@@ -10,12 +10,12 @@
  * that would otherwise be regarded as markup.
  * Their primary purpose is for including material such as XML fragments, 
  * without needing to escape all the delimiters.
  * 
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/
  */
 
-[scriptable, uuid(92cfb4d4-7456-44fa-9c76-c70fdee78e2f)]
+[scriptable, uuid(cfad94e0-92d6-4b32-ab18-c61f9b8cb313)]
 interface nsIDOMCDATASection : nsIDOMText
 {
 };
diff --git a/dom/interfaces/core/nsIDOMCharacterData.idl b/dom/interfaces/core/nsIDOMCharacterData.idl
--- a/dom/interfaces/core/nsIDOMCharacterData.idl
+++ b/dom/interfaces/core/nsIDOMCharacterData.idl
@@ -8,17 +8,17 @@
 /**
  * The nsIDOMCharacterData interface extends nsIDOMNode with a set of 
  * attributes and methods for accessing character data in the DOM.
  * 
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/
  */
 
-[scriptable, uuid(cb75c251-afc7-444f-b2d6-b9635555f3ed)]
+[scriptable, uuid(05c29ae6-5533-42b6-9085-257f60445d5a)]
 interface nsIDOMCharacterData : nsIDOMNode
 {
            attribute DOMString            data;
                                   // raises(DOMException) on setting
                                   // raises(DOMException) on retrieval
 
   readonly attribute unsigned long        length;
   DOMString                 substringData(in unsigned long offset, 
diff --git a/dom/interfaces/core/nsIDOMComment.idl b/dom/interfaces/core/nsIDOMComment.idl
--- a/dom/interfaces/core/nsIDOMComment.idl
+++ b/dom/interfaces/core/nsIDOMComment.idl
@@ -9,12 +9,12 @@
  * The nsIDOMComment interface inherits from nsIDOMCharacterData and represents 
  * the content of a comment, i.e., all the characters between the starting 
  * '<!--' and ending '-->'.
  * 
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/
  */
 
-[scriptable, uuid(cea49a35-dac9-4c4d-9830-4660abb3b6bc)]
+[scriptable, uuid(cf5493dc-ba25-423a-81e7-b417494f103a)]
 interface nsIDOMComment : nsIDOMCharacterData
 {
 };
diff --git a/dom/interfaces/core/nsIDOMDocument.idl b/dom/interfaces/core/nsIDOMDocument.idl
--- a/dom/interfaces/core/nsIDOMDocument.idl
+++ b/dom/interfaces/core/nsIDOMDocument.idl
@@ -22,17 +22,17 @@ interface nsIDOMLocation;
  * cannot exist outside the context of a Document, the nsIDOMDocument 
  * interface also contains the factory methods needed to create these 
  * objects.
  *
  * For more information on this interface please see 
  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html
  */
 
-[scriptable, uuid(9b93f82b-9691-4021-8f45-1bf505db77ba)]
+[scriptable, uuid(75996de6-6b0f-43e5-ae79-c98fa669da9a)]
 interface nsIDOMDocument : nsIDOMNode
 {
   readonly attribute nsIDOMDocumentType         doctype;
   readonly attribute nsIDOMDOMImplementation    implementation;
   readonly attribute nsIDOMElement              documentElement;
   nsIDOMElement                 createElement([Null(Stringify)] in DOMString tagName)
                                   raises(DOMException);
   nsIDOMDocumentFragment        createDocumentFragment();
diff --git a/dom/interfaces/core/nsIDOMDocumentFragment.idl b/dom/interfaces/core/nsIDOMDocumentFragment.idl
--- a/dom/interfaces/core/nsIDOMDocumentFragment.idl
+++ b/dom/interfaces/core/nsIDOMDocumentFragment.idl
@@ -9,12 +9,12 @@
  * DocumentFragment is a "lightweight" or "minimal" Document object.
  * nsIDOMDocumentFragment is used in situations where the Document
  * interface can potentially be a heavyweight interface.
  *
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/
  */
 
-[scriptable, uuid(4a15eb0c-d5bc-4902-9d50-21b12cab47e7)]
+[scriptable, builtinclass, uuid(33127aed-9d6a-4b0d-95aa-0529f51bcb9c)]
 interface nsIDOMDocumentFragment : nsIDOMNode
 {
 };
diff --git a/dom/interfaces/core/nsIDOMDocumentType.idl b/dom/interfaces/core/nsIDOMDocumentType.idl
--- a/dom/interfaces/core/nsIDOMDocumentType.idl
+++ b/dom/interfaces/core/nsIDOMDocumentType.idl
@@ -10,16 +10,16 @@
  * or a DocumentType object. 
  * The nsIDOMDocumentType interface in the DOM Core provides an 
  * interface to the list of entities that are defined for the document.
  *
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/
  */
 
-[scriptable, uuid(ac5fd4c5-6c5d-4dfc-878c-7d661aa676de)]
+[scriptable, uuid(7568365e-240f-4818-b2fc-0680bfb50942)]
 interface nsIDOMDocumentType : nsIDOMNode
 {
   readonly attribute  DOMString            name;
   readonly attribute  DOMString            publicId;
   readonly attribute  DOMString            systemId;
   readonly attribute  DOMString            internalSubset;
 };
diff --git a/dom/interfaces/core/nsIDOMElement.idl b/dom/interfaces/core/nsIDOMElement.idl
--- a/dom/interfaces/core/nsIDOMElement.idl
+++ b/dom/interfaces/core/nsIDOMElement.idl
@@ -1,33 +1,36 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMNode.idl"
 
+interface nsIDOMMozNamedAttrMap;
+
 /**
  * The nsIDOMElement interface represents an element in an HTML or 
  * XML document. 
  *
  * For more information on this interface please see 
  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#interface-element
  */
 
-[scriptable, uuid(8f972a47-1f20-4906-b59d-19310349a2c2)]
+[scriptable, uuid(ccc2bbbc-5b44-4b01-b718-dd51f339fef8)]
 interface nsIDOMElement : nsIDOMNode
 {
   readonly attribute DOMString        tagName;
 
   /**
    * Returns a DOMTokenList object reflecting the class attribute.
    */
   readonly attribute nsISupports classList;
 
+  readonly attribute nsIDOMMozNamedAttrMap attributes;
   DOMString          getAttribute(in DOMString name);
   DOMString          getAttributeNS(in DOMString namespaceURI, 
                                     in DOMString localName);
   void               setAttribute(in DOMString name, 
                                   in DOMString value);
   void               setAttributeNS(in DOMString namespaceURI, 
                                     in DOMString qualifiedName, 
                                     in DOMString value);
diff --git a/dom/interfaces/core/nsIDOMNamedNodeMap.idl b/dom/interfaces/core/nsIDOMMozNamedAttrMap.idl
rename from dom/interfaces/core/nsIDOMNamedNodeMap.idl
rename to dom/interfaces/core/nsIDOMMozNamedAttrMap.idl
--- a/dom/interfaces/core/nsIDOMNamedNodeMap.idl
+++ b/dom/interfaces/core/nsIDOMMozNamedAttrMap.idl
@@ -1,36 +1,33 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "domstubs.idl"
 
 /**
- * Objects implementing the nsIDOMNamedNodeMap interface are used to 
- * represent collections of nodes that can be accessed by name.
- *
- * For more information on this interface please see 
- * http://www.w3.org/TR/DOM-Level-2-Core/
+ * This is a temporary, non-standard interface, to ease the transition to a
+ * world where Attr no longer inherits from Node.
  */
 
-[scriptable, uuid(a6cf907b-15b3-11d2-932e-00805f8add32)]
-interface nsIDOMNamedNodeMap : nsISupports
+[scriptable, uuid(cb5564cd-26ec-418f-a6d6-1d57cd2c971c)]
+interface nsIDOMMozNamedAttrMap : nsISupports
 {
-  nsIDOMNode                getNamedItem(in DOMString name);
-  nsIDOMNode                setNamedItem(in nsIDOMNode arg)
+  nsIDOMAttr                getNamedItem(in DOMString name);
+  nsIDOMAttr                setNamedItem(in nsIDOMAttr arg)
                                   raises(DOMException);
-  nsIDOMNode                removeNamedItem(in DOMString name)
+  nsIDOMAttr                removeNamedItem(in DOMString name)
                                   raises(DOMException);
-  nsIDOMNode                item(in unsigned long index);
+  nsIDOMAttr                item(in unsigned long index);
   readonly attribute  unsigned long        length;
   // Introduced in DOM Level 2:
-  nsIDOMNode                getNamedItemNS(in DOMString namespaceURI, 
+  nsIDOMAttr                getNamedItemNS(in DOMString namespaceURI, 
                                            in DOMString localName);
   // Introduced in DOM Level 2:
-  nsIDOMNode                setNamedItemNS(in nsIDOMNode arg)
+  nsIDOMAttr                setNamedItemNS(in nsIDOMAttr arg)
                                   raises(DOMException);
   // Introduced in DOM Level 2:
-  nsIDOMNode                removeNamedItemNS(in DOMString namespaceURI, 
+  nsIDOMAttr                removeNamedItemNS(in DOMString namespaceURI, 
                                               in DOMString localName)
                                   raises(DOMException);
 };
diff --git a/dom/interfaces/core/nsIDOMNSEditableElement.idl b/dom/interfaces/core/nsIDOMNSEditableElement.idl
--- a/dom/interfaces/core/nsIDOMNSEditableElement.idl
+++ b/dom/interfaces/core/nsIDOMNSEditableElement.idl
@@ -4,18 +4,22 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIEditor;
 
 /**
  * This interface is implemented by elements which have inner editable content,
- * such as HTML input and textarea. 
-*/
+ * such as HTML input and textarea.
+ *
+ * Please make sure to update the HTMLTextAreaElement and HTMLInputElement
+ * Web IDL interfaces to mirror this interface when changing it.
+ *
+ */
 
 [scriptable, uuid(b33eb56c-3120-418c-892b-774b00c7dde8)]
 interface nsIDOMNSEditableElement : nsISupports
 {
   readonly attribute nsIEditor editor;
   // This is similar to set .value on nsIDOMInput/TextAreaElements, but
   // handling of the value change is closer to the normal user input, so 
   // 'change' event for example will be dispatched when focusing out the
diff --git a/dom/interfaces/core/nsIDOMNode.idl b/dom/interfaces/core/nsIDOMNode.idl
--- a/dom/interfaces/core/nsIDOMNode.idl
+++ b/dom/interfaces/core/nsIDOMNode.idl
@@ -12,17 +12,17 @@ interface nsIDOMUserDataHandler;
  * The nsIDOMNode interface is the primary datatype for the entire 
  * Document Object Model.
  * It represents a single node in the document tree.
  *
  * For more information on this interface please see 
  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html
  */
 
-[scriptable, uuid(5e9bcec9-5928-4f77-8a9c-424ef01c20e1)]
+[scriptable, uuid(56545150-a001-484e-9ed4-cb319eebd7b3)]
 interface nsIDOMNode : nsISupports
 {
   const unsigned short      ELEMENT_NODE       = 1;
   const unsigned short      ATTRIBUTE_NODE     = 2;
   const unsigned short      TEXT_NODE          = 3;
   const unsigned short      CDATA_SECTION_NODE = 4;
   const unsigned short      ENTITY_REFERENCE_NODE = 5;
   const unsigned short      ENTITY_NODE        = 6;
@@ -40,17 +40,16 @@ interface nsIDOMNode : nsISupports
   readonly attribute unsigned short   nodeType;
   readonly attribute nsIDOMNode       parentNode;
   readonly attribute nsIDOMElement    parentElement;
   readonly attribute nsIDOMNodeList   childNodes;
   readonly attribute nsIDOMNode       firstChild;
   readonly attribute nsIDOMNode       lastChild;
   readonly attribute nsIDOMNode       previousSibling;
   readonly attribute nsIDOMNode       nextSibling;
-  readonly attribute nsIDOMNamedNodeMap attributes;
   // Modified in DOM Level 2:
   readonly attribute nsIDOMDocument   ownerDocument;
   nsIDOMNode                insertBefore(in nsIDOMNode newChild, 
                                          in nsIDOMNode refChild)
                                           raises(DOMException);
   nsIDOMNode                replaceChild(in nsIDOMNode newChild, 
                                          in nsIDOMNode oldChild)
                                           raises(DOMException);
@@ -59,19 +58,16 @@ interface nsIDOMNode : nsISupports
   nsIDOMNode                appendChild(in nsIDOMNode newChild)
                                          raises(DOMException);
   boolean                   hasChildNodes();
   // Modified in DOM Level 4:
   [optional_argc] nsIDOMNode                cloneNode([optional] in boolean deep);
   // Modified in DOM Level 2:
   void                      normalize();
   // Introduced in DOM Level 2:
-  boolean                   isSupported(in DOMString feature, 
-                                        in DOMString version);
-  // Introduced in DOM Level 2:
   readonly attribute DOMString        namespaceURI;
   // Modified in DOM Core
   readonly attribute DOMString        prefix;
 
   // Introduced in DOM Level 2:
   readonly attribute DOMString        localName;
   // Introduced in DOM Level 2:
   boolean            hasAttributes();
diff --git a/dom/interfaces/core/nsIDOMProcessingInstruction.idl b/dom/interfaces/core/nsIDOMProcessingInstruction.idl
--- a/dom/interfaces/core/nsIDOMProcessingInstruction.idl
+++ b/dom/interfaces/core/nsIDOMProcessingInstruction.idl
@@ -10,13 +10,13 @@
  * "processing instruction", used in XML as a way to keep processor-specific 
  * information in the text of the document.
  *
  * For more information on this interface please see 
  * http://www.w3.org/TR/DOM-Level-2-Core/ and
  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html
  */
 
-[scriptable, uuid(d754433f-4637-4a5f-9034-0388173ea254)]
+[scriptable, uuid(9ee8b1c3-2b0d-49e2-b2d6-f6bb8bf21b9e)]
 interface nsIDOMProcessingInstruction : nsIDOMCharacterData
 {
   readonly attribute DOMString        target;
 };
diff --git a/dom/interfaces/core/nsIDOMText.idl b/dom/interfaces/core/nsIDOMText.idl
--- a/dom/interfaces/core/nsIDOMText.idl
+++ b/dom/interfaces/core/nsIDOMText.idl
@@ -8,17 +8,17 @@
 /**
  * The nsIDOMText interface inherits from nsIDOMCharacterData and represents 
  * the textual content (termed character data in XML) of an Element or Attr.
  *
  * For more information on this interface please see 
  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html
  */
 
-[scriptable, uuid(437ed60c-febd-4bd0-892f-cf358adc3c96)]
+[scriptable, uuid(3de88cc9-1462-4bb8-a2fc-845b132547ac)]
 interface nsIDOMText : nsIDOMCharacterData
 {
   nsIDOMText                      splitText(in unsigned long offset)
                                        raises(DOMException);
 
   /**
    * The concatenation of all logically adjacent text nodes with this text
    * node, where "logically adjacent" consists of all text nodes which can be
diff --git a/dom/interfaces/core/nsIDOMXMLDocument.idl b/dom/interfaces/core/nsIDOMXMLDocument.idl
--- a/dom/interfaces/core/nsIDOMXMLDocument.idl
+++ b/dom/interfaces/core/nsIDOMXMLDocument.idl
@@ -1,16 +1,16 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMDocument.idl"
 
-[scriptable, uuid(18C55EFC-560B-4BDD-9776-A8D239EF7052)]
+[scriptable, uuid(79547ba5-291e-4775-b71e-2440a4621b54)]
 interface nsIDOMXMLDocument : nsIDOMDocument
 {
   // DOM Level 3 Load & Save, DocumentLS
   // http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DocumentLS
   /**
    * Whether to load synchronously or asynchronously.
    * The default is async==true.
    */
diff --git a/dom/interfaces/core/nsIDocumentRegister.idl b/dom/interfaces/core/nsIDocumentRegister.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/core/nsIDocumentRegister.idl
@@ -0,0 +1,16 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+[scriptable, uuid(e35935bd-ebae-4e0d-93bf-efa93ab14c05)]
+interface nsIDocumentRegister : nsISupports
+{
+  [optional_argc,
+   implicit_jscontext] jsval   register(in DOMString name,
+                                        [optional] in jsval options)
+                                 raises(DOMException);
+};
+
diff --git a/dom/interfaces/devicestorage/nsIDOMDeviceStorage.idl b/dom/interfaces/devicestorage/nsIDOMDeviceStorage.idl
--- a/dom/interfaces/devicestorage/nsIDOMDeviceStorage.idl
+++ b/dom/interfaces/devicestorage/nsIDOMDeviceStorage.idl
@@ -1,47 +1,47 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "domstubs.idl"
 #include "nsIDOMEventTarget.idl"
 interface nsIDOMBlob;
 interface nsIDOMDOMRequest;
-interface nsIDOMDeviceStorageCursor;
+interface nsIDOMDOMCursor;
 interface nsIDOMDeviceStorageChangeEvent;
 interface nsIDOMEventListener;
 interface nsIFile;
 
 dictionary DeviceStorageEnumerationParameters
 {
   jsval since;
 };
 
-[scriptable, uuid(c611b701-ddfc-456d-893a-3b3fcb30d9fd), builtinclass]
+[scriptable, uuid(cf424c41-26e0-4c26-bb81-82981f7e3641), builtinclass]
 interface nsIDOMDeviceStorage : nsIDOMEventTarget
 {
     [implicit_jscontext] attribute jsval onchange;
     nsIDOMDOMRequest add(in nsIDOMBlob aBlob);
     nsIDOMDOMRequest addNamed(in nsIDOMBlob aBlob, in DOMString aName);
 
     [implicit_jscontext]
     nsIDOMDOMRequest get(in jsval aName);
 
     [implicit_jscontext]
     nsIDOMDOMRequest getEditable(in jsval aName);
 
     [implicit_jscontext]
     nsIDOMDOMRequest delete(in jsval aName);
 
     [optional_argc, implicit_jscontext]
-    nsIDOMDeviceStorageCursor enumerate([optional] in jsval aName, /* DeviceStorageEnumerationParameters */ [optional] in jsval options);
+    nsIDOMDOMCursor enumerate([optional] in jsval aName, /* DeviceStorageEnumerationParameters */ [optional] in jsval options);
 
     [optional_argc, implicit_jscontext]
-    nsIDOMDeviceStorageCursor enumerateEditable([optional] in jsval aName, /* DeviceStorageEnumerationParameters */ [optional] in jsval options);
+    nsIDOMDOMCursor enumerateEditable([optional] in jsval aName, /* DeviceStorageEnumerationParameters */ [optional] in jsval options);
 
     nsIDOMDOMRequest freeSpace();
 
     nsIDOMDOMRequest usedSpace();
 
     nsIDOMDOMRequest available();
 
     [noscript] readonly attribute nsIFile rootDirectory;
diff --git a/dom/interfaces/devicestorage/nsIDOMDeviceStorageCursor.idl b/dom/interfaces/devicestorage/nsIDOMDeviceStorageCursor.idl
deleted file mode 100644
--- a/dom/interfaces/devicestorage/nsIDOMDeviceStorageCursor.idl
+++ /dev/null
@@ -1,11 +0,0 @@
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this file,
- * You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "domstubs.idl"
-
-[scriptable, uuid(995DFF99-ED70-4780-AC9A-4B58CD491186)]
-interface nsIDOMDeviceStorageCursor : nsISupports
-{
-    void continue();
-};
diff --git a/dom/interfaces/events/nsIDOMClipboardEvent.idl b/dom/interfaces/events/nsIDOMClipboardEvent.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/events/nsIDOMClipboardEvent.idl
@@ -0,0 +1,28 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "domstubs.idl"
+#include "nsIDOMEvent.idl"
+
+interface nsIDOMDataTransfer;
+
+[scriptable, builtinclass, uuid(8D92944A-F2E5-41F4-9CF3-D85043B90CAC)]
+interface nsIDOMClipboardEvent : nsIDOMEvent
+{
+  readonly attribute nsIDOMDataTransfer clipboardData;
+
+  // The constructor must be used from script to initialize
+  // clipboard events.
+  [noscript] void initClipboardEvent(in DOMString typeArg,
+                                     in boolean canBubbleArg,
+                                     in boolean cancelableArg,
+                                     in nsIDOMDataTransfer clipboardData);
+};
+
+dictionary ClipboardEventInit : EventInit
+{
+  DOMString data;
+  DOMString dataType;
+};
diff --git a/dom/interfaces/events/nsIDOMElementReplaceEvent.idl b/dom/interfaces/events/nsIDOMElementReplaceEvent.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/events/nsIDOMElementReplaceEvent.idl
@@ -0,0 +1,24 @@
+/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIDOMEvent.idl"
+
+interface nsIDOMElement;
+
+[scriptable, builtinclass, uuid(19a31767-54bf-4044-8769-cd172e37eca2)]
+interface nsIDOMElementReplaceEvent : nsIDOMEvent
+{
+  readonly attribute nsIDOMElement upgrade;
+
+  void initElementReplaceEvent(in DOMString typeArg,
+                               in boolean canBubbleArg,
+                               in boolean canCancelArg,
+                               in nsIDOMElement upgrade);
+};
+
+dictionary ElementReplaceEventInit : EventInit
+{
+  nsIDOMElement upgrade;
+};
diff --git a/dom/interfaces/events/nsIDOMEvent.idl b/dom/interfaces/events/nsIDOMEvent.idl
--- a/dom/interfaces/events/nsIDOMEvent.idl
+++ b/dom/interfaces/events/nsIDOMEvent.idl
@@ -3,47 +3,53 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "domstubs.idl"
 
 interface nsIDOMEventTarget;
 
 [ptr] native nsEventPtr(nsEvent);
+[ptr] native nsDOMEventPtr(nsDOMEvent);
 [ptr] native IPCMessagePtr(IPC::Message);
 [ptr] native ConstIPCMessagePtr(const IPC::Message);
+[ptr] native EventTargetPtr(mozilla::dom::EventTarget);
 %{C++
 #ifdef ERROR
 #undef ERROR
 #endif
 
 class nsEvent;
+class nsDOMEvent;
 class nsCommandEvent;
 class nsPresContext;
 class nsInvalidateRequestList;
 namespace IPC {
 class Message;
 }
 namespace mozilla {
 namespace widget {
 class WheelEvent;
 } // namespace widget
+namespace dom {
+class EventTarget;
+} // namespace dom
 } // namespace mozilla
 %}
 
 /**
  * The nsIDOMEvent interface is the primary datatype for all events in
  * the Document Object Model.
  *
  * For more information on this interface please see 
  * http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html and
  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html
  */
 
-[scriptable, builtinclass, uuid(c939eab8-1345-4344-875b-e0f2d8d89171)]
+[scriptable, builtinclass, uuid(547ec16c-e41d-4df7-9fb6-ad6041f0687a)]
 interface nsIDOMEvent : nsISupports
 {
   // PhaseType
   /**
    * The event isn't being dispatched.
    */
   const unsigned short      NONE                           = 0;
   /**
@@ -246,86 +252,179 @@ interface nsIDOMEvent : nsISupports
   [noscript] void duplicatePrivateData();
   [noscript] void setTarget(in nsIDOMEventTarget aTarget);
   [notxpcom] boolean IsDispatchStopped();
   [notxpcom] nsEventPtr GetInternalNSEvent();
   [noscript,notxpcom] void SetTrusted(in boolean aTrusted);
   [notxpcom] void Serialize(in IPCMessagePtr aMsg,
                             in boolean aSerializeInterfaceType);
   [notxpcom] boolean Deserialize(in ConstIPCMessagePtr aMsg, out voidPtr aIter);
-  
+  [noscript,notxpcom] void SetOwner(in EventTargetPtr aOwner);
+  [notxpcom] nsDOMEventPtr InternalDOMEvent();
 };
 
 dictionary EventInit
 {
   boolean bubbles;
   boolean cancelable;
 };
 
 %{C++
+
 nsresult
-NS_NewDOMEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, nsEvent *aEvent);
+NS_NewDOMEvent(nsIDOMEvent** aInstancePtrResult,
+               mozilla::dom::EventTarget* aOwner,
+               nsPresContext* aPresContext,
+               nsEvent *aEvent);
 nsresult
-NS_NewDOMDataContainerEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, nsEvent *aEvent);
+NS_NewDOMDataContainerEvent(nsIDOMEvent** aInstancePtrResult,
+                            mozilla::dom::EventTarget* aOwner,
+                            nsPresContext* aPresContext,
+                            nsEvent* aEvent);
 nsresult
-NS_NewDOMUIEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsGUIEvent *aEvent);
+NS_NewDOMUIEvent(nsIDOMEvent** aInstancePtrResult,
+                 mozilla::dom::EventTarget* aOwner,
+                 nsPresContext* aPresContext,
+                 class nsGUIEvent* aEvent);
 nsresult
-NS_NewDOMMouseEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsInputEvent *aEvent);
+NS_NewDOMMouseEvent(nsIDOMEvent** aInstancePtrResult,
+                    mozilla::dom::EventTarget* aOwner,
+                    nsPresContext* aPresContext,
+                    class nsInputEvent* aEvent);
 nsresult
-NS_NewDOMMouseScrollEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsInputEvent *aEvent);
+NS_NewDOMMouseScrollEvent(nsIDOMEvent** aInstancePtrResult,
+                          mozilla::dom::EventTarget* aOwner,
+                          nsPresContext* aPresContext,
+                          class nsInputEvent* aEvent);
 nsresult
-NS_NewDOMWheelEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, mozilla::widget::WheelEvent *aEvent);
+NS_NewDOMWheelEvent(nsIDOMEvent** aInstancePtrResult,
+                    mozilla::dom::EventTarget* aOwner,
+                    nsPresContext* aPresContext,
+                    mozilla::widget::WheelEvent* aEvent);
 nsresult
-NS_NewDOMDragEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsDragEvent *aEvent);
+NS_NewDOMDragEvent(nsIDOMEvent** aInstancePtrResult,
+                   mozilla::dom::EventTarget* aOwner,
+                   nsPresContext* aPresContext,
+                   class nsDragEvent* aEvent);
 nsresult
-NS_NewDOMKeyboardEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsKeyEvent *aEvent);
+NS_NewDOMClipboardEvent(nsIDOMEvent** aInstancePtrResult,
+                        mozilla::dom::EventTarget* aOwner,
+                        nsPresContext* aPresContext,
+                        class nsClipboardEvent *aEvent);
+
 nsresult
-NS_NewDOMCompositionEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsCompositionEvent *aEvent);
+NS_NewDOMKeyboardEvent(nsIDOMEvent** aInstancePtrResult,
+                       mozilla::dom::EventTarget* aOwner,
+                       nsPresContext* aPresContext,
+                       class nsKeyEvent* aEvent);
 nsresult
-NS_NewDOMMutationEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, class nsMutationEvent* aEvent);
+NS_NewDOMCompositionEvent(nsIDOMEvent** aInstancePtrResult,
+                          mozilla::dom::EventTarget* aOwner,
+                          nsPresContext* aPresContext,
+                          class nsCompositionEvent* aEvent);
 nsresult
-NS_NewDOMDeviceMotionEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, nsEvent* aEvent);
+NS_NewDOMMutationEvent(nsIDOMEvent** aResult,
+                       mozilla::dom::EventTarget* aOwner,
+                       nsPresContext* aPresContext,
+                       class nsMutationEvent* aEvent);
 nsresult
-NS_NewDOMTextEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, class nsTextEvent* aEvent);
+NS_NewDOMDeviceMotionEvent(nsIDOMEvent** aResult,
+                           mozilla::dom::EventTarget* aOwner,
+                           nsPresContext* aPresContext,
+                           nsEvent* aEvent);
 nsresult
-NS_NewDOMBeforeUnloadEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, nsEvent* aEvent);
+NS_NewDOMTextEvent(nsIDOMEvent** aResult,
+                   mozilla::dom::EventTarget* aOwner,
+                   nsPresContext* aPresContext,
+                   class nsTextEvent* aEvent);
 nsresult
-NS_NewDOMSVGEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, class nsEvent* aEvent);
+NS_NewDOMBeforeUnloadEvent(nsIDOMEvent** aResult,
+                           mozilla::dom::EventTarget* aOwner,
+                           nsPresContext* aPresContext,
+                           nsEvent* aEvent);
 nsresult
-NS_NewDOMSVGZoomEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, class nsGUIEvent* aEvent);
+NS_NewDOMSVGEvent(nsIDOMEvent** aResult,
+                  mozilla::dom::EventTarget* aOwner,
+                  nsPresContext* aPresContext,
+                  class nsEvent* aEvent);
 nsresult
-NS_NewDOMTimeEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, class nsEvent* aEvent);
+NS_NewDOMSVGZoomEvent(nsIDOMEvent** aResult,
+                      mozilla::dom::EventTarget* aOwner,
+                      nsPresContext* aPresContext,
+                      class nsGUIEvent* aEvent);
 nsresult
-NS_NewDOMXULCommandEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext, class nsInputEvent* aEvent);
+NS_NewDOMTimeEvent(nsIDOMEvent** aResult,
+                   mozilla::dom::EventTarget* aOwner,
+                   nsPresContext* aPresContext,
+                   class nsEvent* aEvent);
 nsresult
-NS_NewDOMCommandEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, nsCommandEvent* aEvent);
+NS_NewDOMXULCommandEvent(nsIDOMEvent** aResult,
+                         mozilla::dom::EventTarget* aOwner,
+                         nsPresContext* aPresContext,
+                         class nsInputEvent* aEvent);
 nsresult
-NS_NewDOMMessageEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsEvent* aEvent);
+NS_NewDOMCommandEvent(nsIDOMEvent** aInstancePtrResult,
+                      mozilla::dom::EventTarget* aOwner,
+                      nsPresContext* aPresContext,
+                      nsCommandEvent* aEvent);
 nsresult
-NS_NewDOMProgressEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsEvent* aEvent);
+NS_NewDOMMessageEvent(nsIDOMEvent** aInstancePtrResult,
+                      mozilla::dom::EventTarget* aOwner,
+                      nsPresContext* aPresContext,
+                      class nsEvent* aEvent);
+nsresult
+NS_NewDOMProgressEvent(nsIDOMEvent** aInstancePtrResult,
+                       mozilla::dom::EventTarget* aOwner,
+                       nsPresContext* aPresContext,
+                       class nsEvent* aEvent);
 // This empties aInvalidateRequests.
 nsresult
-NS_NewDOMNotifyPaintEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext,
+NS_NewDOMNotifyPaintEvent(nsIDOMEvent** aResult,
+                          mozilla::dom::EventTarget* aOwner,
+                          nsPresContext* aPresContext,
                           nsEvent* aEvent,
                           uint32_t aEventType = 0,
                           nsInvalidateRequestList* aInvalidateRequests = nullptr);
 nsresult
-NS_NewDOMAudioAvailableEvent(nsIDOMEvent** aResult, nsPresContext* aPresContext,
+NS_NewDOMAudioAvailableEvent(nsIDOMEvent** aResult,
+                             mozilla::dom::EventTarget* aOwner,
+                             nsPresContext* aPresContext,
                              nsEvent* aEvent,
                              uint32_t aEventType = 0,
                              float* aFrameBuffer = nullptr,
                              uint32_t aFrameBufferLength = 0,
                              float aTime = 0);
 nsresult
-NS_NewDOMSimpleGestureEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsSimpleGestureEvent* aEvent);
+NS_NewDOMSimpleGestureEvent(nsIDOMEvent** aInstancePtrResult,
+                            mozilla::dom::EventTarget* aOwner,
+                            nsPresContext* aPresContext,
+                            class nsSimpleGestureEvent* aEvent);
 nsresult
-NS_NewDOMScrollAreaEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsScrollAreaEvent* aEvent);
+NS_NewDOMScrollAreaEvent(nsIDOMEvent** aInstancePtrResult,
+                         mozilla::dom::EventTarget* aOwner,
+                         nsPresContext* aPresContext,
+                         class nsScrollAreaEvent* aEvent);
 nsresult
-NS_NewDOMTransitionEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsTransitionEvent* aEvent);
+NS_NewDOMTransitionEvent(nsIDOMEvent** aInstancePtrResult,
+                         mozilla::dom::EventTarget* aOwner,
+                         nsPresContext* aPresContext,
+                         class nsTransitionEvent* aEvent);
 nsresult
-NS_NewDOMAnimationEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsAnimationEvent* aEvent);
+NS_NewDOMAnimationEvent(nsIDOMEvent** aInstancePtrResult,
+                        mozilla::dom::EventTarget* aOwner,
+                        nsPresContext* aPresContext,
+                        class nsAnimationEvent* aEvent);
 nsresult
-NS_NewDOMTouchEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, class nsTouchEvent *aEvent);
+NS_NewDOMTouchEvent(nsIDOMEvent** aInstancePtrResult,
+                    mozilla::dom::EventTarget* aOwner,
+                    nsPresContext* aPresContext,
+                    class nsTouchEvent* aEvent);
 nsresult
-NS_NewDOMMozSettingsEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, nsEvent* aEvent);
+NS_NewDOMMozSettingsEvent(nsIDOMEvent** aInstancePtrResult,
+                          mozilla::dom::EventTarget* aOwner,
+                          nsPresContext* aPresContext,
+                          nsEvent* aEvent);
 nsresult
-NS_NewDOMMozApplicationEvent(nsIDOMEvent** aInstancePtrResult, nsPresContext* aPresContext, nsEvent* aEvent);
+NS_NewDOMMozApplicationEvent(nsIDOMEvent** aInstancePtrResult,
+                             mozilla::dom::EventTarget* aOwner,
+                             nsPresContext* aPresContext,
+                             nsEvent* aEvent);
 %}
diff --git a/dom/interfaces/events/nsIDOMEventTarget.idl b/dom/interfaces/events/nsIDOMEventTarget.idl
--- a/dom/interfaces/events/nsIDOMEventTarget.idl
+++ b/dom/interfaces/events/nsIDOMEventTarget.idl
@@ -6,16 +6,22 @@
 #include "domstubs.idl"
 
 %{C++
 #include "nsEvent.h"
 #include "mozilla/dom/Nullable.h"
 
 using mozilla::dom::Nullable;
 
+namespace mozilla {
+namespace dom {
+class EventTarget;
+} // namespace dom
+} // namespace mozilla
+
 class nsPresContext;
 class nsEventChainPreVisitor;
 class nsEventChainPostVisitor;
 struct JSContext;
 class nsEventListenerManager;
 %}
 
 /**
@@ -28,22 +34,23 @@ class nsEventListenerManager;
 
 [ref] native nsEventChainPreVisitorRef(nsEventChainPreVisitor);
 [ref] native nsEventChainPostVisitorRef(nsEventChainPostVisitor);
 [ptr] native nsEventPtr(nsEvent);
 [ptr] native nsPresContextPtr(nsPresContext);
 [ptr] native nsEventStatusPtr(nsEventStatus);
 [ptr] native JSContextPtr(JSContext);
 [ptr] native nsEventListenerManagerPtr(nsEventListenerManager);
+[ptr] native EventTargetPtr(mozilla::dom::EventTarget);
 
 interface nsIScriptContext;
 interface nsIDOMEventListener;
 interface nsIDOMEvent;
 
-[scriptable, builtinclass, uuid(8e375931-298d-4d0a-9cb4-5668f0cdc5a8)]
+[scriptable, builtinclass, uuid(31e92e56-4d23-4a4a-9cfe-a6d12cf434bc)]
 interface nsIDOMEventTarget : nsISupports
 {
   /**
    * This method allows the registration of event listeners on the event target.
    * If an EventListener is added to an EventTarget while it is processing an
    * event, it will not be triggered by the current actions but may be 
    * triggered during a later stage of event flow, such as the bubbling phase.
    * 
@@ -186,25 +193,25 @@ interface nsIDOMEventTarget : nsISupport
                                                raises(DOMException);
 
   /**
    * Returns the nsIDOMEventTarget object which should be used as the target
    * of DOMEvents.
    * Usually |this| is returned, but for example global object returns
    * the outer object.
    */
-   [notxpcom, nostdcall] nsIDOMEventTarget GetTargetForDOMEvent();
+   [notxpcom, nostdcall] EventTargetPtr GetTargetForDOMEvent();
 
   /**
    * Returns the nsIDOMEventTarget object which should be used as the target
    * of the event and when constructing event target chain.
    * Usually |this| is returned, but for example global object returns
    * the inner object.
    */
-   [notxpcom, nostdcall] nsIDOMEventTarget GetTargetForEventTargetChain();
+   [notxpcom, nostdcall] EventTargetPtr GetTargetForEventTargetChain();
 
   /**
    * Called before the capture phase of the event flow.
    * This is used to create the event target chain and implementations
    * should set the necessary members of nsEventChainPreVisitor.
    * At least aVisitor.mCanHandle must be set,
    * usually also aVisitor.mParentTarget if mCanHandle is PR_TRUE.
    * First one tells that this object can handle the aVisitor.mEvent event and
@@ -282,18 +289,18 @@ interface nsIDOMEventTarget : nsISupport
    * is called.
    */
   [notxpcom, nostdcall] JSContextPtr GetJSContextForEventHandlers();
 };
 
 %{C++
 
 #define NS_IMPL_DOMTARGET_DEFAULTS(_class) \
-nsIDOMEventTarget* _class::GetTargetForDOMEvent() { return this; } \
-nsIDOMEventTarget* _class::GetTargetForEventTargetChain() { return this; } \
+mozilla::dom::EventTarget* _class::GetTargetForDOMEvent() { return this; } \
+mozilla::dom::EventTarget* _class::GetTargetForEventTargetChain() { return this; } \
 nsresult _class::WillHandleEvent(nsEventChainPostVisitor& aVisitor) { return NS_OK; } \
 JSContext* _class::GetJSContextForEventHandlers() { return nullptr; }
 
 #define NS_IMPL_REMOVE_SYSTEM_EVENT_LISTENER(aClass) \
 NS_IMETHODIMP \
 aClass::RemoveSystemEventListener(const nsAString& aType, \
                                   nsIDOMEventListener *aListener, \
                                   bool aUseCapture) \
diff --git a/dom/interfaces/events/nsIDOMGamepadAxisMoveEvent.idl b/dom/interfaces/events/nsIDOMGamepadAxisMoveEvent.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/events/nsIDOMGamepadAxisMoveEvent.idl
@@ -0,0 +1,33 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIDOMGamepadEvent.idl"
+
+[builtinclass, scriptable, uuid(bd09eef8-8e07-4baf-8d39-4f92003dbca8)]
+interface nsIDOMGamepadAxisMoveEvent : nsIDOMGamepadEvent
+{
+  /**
+   * Index in gamepad.axes of the axis that was moved.
+   */
+  readonly attribute unsigned long axis;
+
+  /**
+   * Position of the axis in the range -1.0...1.0.
+   */
+  readonly attribute double value;
+
+  [noscript]
+  void initGamepadAxisMoveEvent(in DOMString typeArg,
+                                in boolean canBubbleArg,
+                                in boolean cancelableArg,
+                                in nsIDOMGamepad gamepad,
+                                in unsigned long axis,
+                                in double value);
+};
+
+dictionary GamepadAxisMoveEventInit : GamepadEventInit
+{
+  unsigned long axis;
+  double value;
+};
diff --git a/dom/interfaces/events/nsIDOMGamepadButtonEvent.idl b/dom/interfaces/events/nsIDOMGamepadButtonEvent.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/events/nsIDOMGamepadButtonEvent.idl
@@ -0,0 +1,26 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIDOMGamepadEvent.idl"
+
+[builtinclass, scriptable, uuid(d75d4d2b-e7b4-4b93-ac35-2e70b57d9b28)]
+interface nsIDOMGamepadButtonEvent : nsIDOMGamepadEvent
+{
+  /**
+   * Index in gamepad.buttons of the button that was pressed or released.
+   */
+  readonly attribute unsigned long button;
+
+  [noscript]
+  void initGamepadButtonEvent(in DOMString typeArg,
+                              in boolean canBubbleArg,
+                              in boolean cancelableArg,
+                              in nsIDOMGamepad gamepad,
+                              in unsigned long button);
+};
+
+dictionary GamepadButtonEventInit : GamepadEventInit
+{
+  unsigned long button;
+};
diff --git a/dom/interfaces/events/nsIDOMGamepadEvent.idl b/dom/interfaces/events/nsIDOMGamepadEvent.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/events/nsIDOMGamepadEvent.idl
@@ -0,0 +1,27 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIDOMEvent.idl"
+
+interface nsIDOMGamepad;
+
+[builtinclass, scriptable, uuid(93b048d6-2aef-46a9-b0f4-06d7f00d8ef2)]
+interface nsIDOMGamepadEvent : nsIDOMEvent
+{
+  /**
+   * The device that generated this event.
+   */
+  readonly attribute nsIDOMGamepad gamepad;
+
+  [noscript]
+  void initGamepadEvent(in DOMString typeArg,
+                        in boolean canBubbleArg,
+                        in boolean cancelableArg,
+                        in nsIDOMGamepad gamepad);
+};
+
+dictionary GamepadEventInit : EventInit
+{
+  nsIDOMGamepad gamepad;
+};
diff --git a/dom/interfaces/events/nsIDOMProgressEvent.idl b/dom/interfaces/events/nsIDOMProgressEvent.idl
--- a/dom/interfaces/events/nsIDOMProgressEvent.idl
+++ b/dom/interfaces/events/nsIDOMProgressEvent.idl
@@ -11,16 +11,17 @@
  */
 
 [scriptable, builtinclass, uuid(e0682338-4c3f-4d3a-9487-d7492ea76335)]
 interface nsIDOMProgressEvent : nsIDOMEvent
 {
   readonly attribute boolean lengthComputable;
   readonly attribute unsigned long long loaded;
   readonly attribute unsigned long long total;
+  [noscript]
   void initProgressEvent(in DOMString typeArg,
                          in boolean canBubbleArg,
                          in boolean cancelableArg,
                          in boolean lengthComputableArg,
                          in unsigned long long loadedArg,
                          in unsigned long long totalArg);
 };
 
diff --git a/dom/interfaces/gamepad/nsIDOMGamepad.idl b/dom/interfaces/gamepad/nsIDOMGamepad.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/gamepad/nsIDOMGamepad.idl
@@ -0,0 +1,39 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIVariant;
+
+[builtinclass, scriptable, uuid(ff13acd9-11da-4817-8f2a-4a5700dfd13e)]
+interface nsIDOMGamepad : nsISupports
+{
+  /**
+   * An identifier, unique per type of device.
+   */
+  readonly attribute DOMString id;
+
+  /**
+   * The game port index for the device. Unique per device
+   * attached to this system.
+   */
+  readonly attribute unsigned long index;
+
+  /**
+   * true if this gamepad is currently connected to the system.
+   */
+  readonly attribute boolean connected;
+
+  /**
+   * The current state of all buttons on the device, an
+   * array of doubles.
+   */
+  readonly attribute nsIVariant buttons;
+
+  /**
+   * The current position of all axes on the device, an
+   * array of doubles.
+   */
+  readonly attribute nsIVariant axes;
+};
diff --git a/dom/interfaces/gamepad/nsIGamepadServiceTest.idl b/dom/interfaces/gamepad/nsIGamepadServiceTest.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/gamepad/nsIGamepadServiceTest.idl
@@ -0,0 +1,22 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIVariant;
+
+/*
+ * This interface is intended only for use in tests.
+ */
+[scriptable, uuid(7edf77a2-6b3e-4bbb-9100-4452d425feaa)]
+interface nsIGamepadServiceTest : nsISupports
+{
+  unsigned long addGamepad(in string id, in unsigned long numButtons,
+			   in unsigned long numAxes);
+  void removeGamepad(in unsigned long index);
+  void newButtonEvent(in unsigned long index, in unsigned long button,
+		      in boolean pressed);
+  void newAxisMoveEvent(in unsigned long index, in unsigned long axis,
+			in double value);
+};
diff --git a/dom/interfaces/geolocation/nsIGeolocation.idl b/dom/interfaces/geolocation/nsIGeolocation.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/geolocation/nsIGeolocation.idl
@@ -0,0 +1,29 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "domstubs.idl"
+
+interface nsIDOMGeoPositionCallback;
+interface nsIDOMGeoPositionErrorCallback;
+[ptr] native GeoPositionOptions(mozilla::idl::GeoPositionOptions);
+
+%{C++
+namespace mozilla {
+namespace idl {
+class GeoPositionOptions;
+}
+}
+%}
+
+[scriptable, builtinclass, uuid(d8e6449f-92c8-4c6a-aa9f-fef70157ec29)]
+interface nsIGeolocation : nsISupports
+{
+  // Versions of the DOM APIs that don't require JS option values
+  int32_t watchPosition(in nsIDOMGeoPositionCallback callback,
+                        in nsIDOMGeoPositionErrorCallback errorCallback,
+                        in GeoPositionOptions options);
+  void getCurrentPosition(in nsIDOMGeoPositionCallback callback,
+                          in nsIDOMGeoPositionErrorCallback errorCallback,
+                          in GeoPositionOptions options);
+};
diff --git a/dom/interfaces/html/nsIDOMHTMLAnchorElement.idl b/dom/interfaces/html/nsIDOMHTMLAnchorElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLAnchorElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLAnchorElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(1339c36e-23ad-4047-a04c-1702e27c7c83)]
+[scriptable, uuid(c75e7bb1-cc7a-4169-9467-9513a95e3b94)]
 interface nsIDOMHTMLAnchorElement : nsIDOMHTMLElement
 {
            attribute DOMString        href;
            attribute DOMString        target;
 
            attribute DOMString        ping;
            attribute DOMString        download;
 
diff --git a/dom/interfaces/html/nsIDOMHTMLAppletElement.idl b/dom/interfaces/html/nsIDOMHTMLAppletElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLAppletElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLAppletElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(F3D34247-A6E9-416A-AE37-761E26A3881E)]
+[scriptable, uuid(351dd451-0077-4298-b569-a41529baca32)]
 interface nsIDOMHTMLAppletElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
            attribute DOMString        alt;
            attribute DOMString        archive;
            attribute DOMString        code;
            attribute DOMString        codeBase;
            attribute DOMString        height;
diff --git a/dom/interfaces/html/nsIDOMHTMLAreaElement.idl b/dom/interfaces/html/nsIDOMHTMLAreaElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLAreaElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLAreaElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(69c5ce45-108a-442e-91c5-8c874e384ed7)]
+[scriptable, uuid(6ab5b382-c19d-4a4e-98b7-2f4e14dbecdf)]
 interface nsIDOMHTMLAreaElement : nsIDOMHTMLElement
 {
            attribute DOMString        alt;
            attribute DOMString        coords;
            attribute DOMString        shape;
            attribute DOMString        href;
            attribute DOMString        target;
 
diff --git a/dom/interfaces/html/nsIDOMHTMLAudioElement.idl b/dom/interfaces/html/nsIDOMHTMLAudioElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLAudioElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLAudioElement.idl
@@ -15,17 +15,17 @@
  * <audio> element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#audio
  *
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(ee5df17c-3928-11e2-8808-10bf48d64bd4)]
+[scriptable, uuid(8e3fb6a1-490d-4772-90fd-3e3763958b74)]
 interface nsIDOMHTMLAudioElement : nsIDOMHTMLMediaElement
 {
   // Setup the audio stream for writing
   void mozSetup(in uint32_t channels, in uint32_t rate);
 
   // Write audio to the audio stream
   [implicit_jscontext]
   unsigned long mozWriteAudio(in jsval data);
diff --git a/dom/interfaces/html/nsIDOMHTMLBRElement.idl b/dom/interfaces/html/nsIDOMHTMLBRElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLBRElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLBRElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(11D1C93A-9538-4BE3-8E90-372E25AB9D61)]
+[scriptable, uuid(8e69e7c2-2c32-4176-aec7-3ec9b518f4d7)]
 interface nsIDOMHTMLBRElement : nsIDOMHTMLElement
 {
            attribute DOMString        clear;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLBaseElement.idl b/dom/interfaces/html/nsIDOMHTMLBaseElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLBaseElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLBaseElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(CC18F6D7-560F-485E-BC37-23354B2384F4)]
+[scriptable, uuid(a07d89f2-c923-4632-901c-47b61c2b5f72)]
 interface nsIDOMHTMLBaseElement : nsIDOMHTMLElement
 {
            attribute DOMString        href;
            attribute DOMString        target;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLBodyElement.idl b/dom/interfaces/html/nsIDOMHTMLBodyElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLBodyElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLBodyElement.idl
@@ -15,17 +15,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(D8F00C8B-D317-4DF2-A9BF-4A1E6F19F945)]
+[scriptable, uuid(4df676f2-7da1-4b88-843c-67d6c3f151df)]
 interface nsIDOMHTMLBodyElement : nsIDOMHTMLElement
 {
            attribute DOMString        aLink;
            attribute DOMString        background;
            attribute DOMString        bgColor;
            attribute DOMString        link;
            attribute DOMString        text;
            attribute DOMString        vLink;
diff --git a/dom/interfaces/html/nsIDOMHTMLButtonElement.idl b/dom/interfaces/html/nsIDOMHTMLButtonElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLButtonElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLButtonElement.idl
@@ -13,17 +13,17 @@
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
 interface nsIDOMValidityState;
 
-[scriptable, uuid(8E40D4D7-C204-4192-802A-0B5602E9C669)]
+[scriptable, uuid(1b5905c5-cc98-4446-9700-a90b96e4e2f4)]
 interface nsIDOMHTMLButtonElement : nsIDOMHTMLElement
 {
            attribute boolean               autofocus;
            attribute boolean               disabled;
   readonly attribute nsIDOMHTMLFormElement form;
            attribute DOMString             formAction;
            attribute DOMString             formEnctype;
            attribute DOMString             formMethod;
diff --git a/dom/interfaces/html/nsIDOMHTMLCanvasElement.idl b/dom/interfaces/html/nsIDOMHTMLCanvasElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLCanvasElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLCanvasElement.idl
@@ -41,17 +41,17 @@ interface nsIPrintCallback : nsISupports
   void render(in nsIDOMMozCanvasPrintState ctx);
 };
 
 [scriptable, function, uuid(6e9ffb59-2067-4aef-a51c-65e65a3e0d81)]
 interface nsIFileCallback : nsISupports {
   void receive(in nsIDOMBlob file);
 };
 
-[scriptable, uuid(a7062fca-41c6-4520-b777-3bb30fd77273)]
+[scriptable, uuid(1cfacc53-ab73-4ceb-9f5f-22387dcd1aae)]
 interface nsIDOMHTMLCanvasElement : nsIDOMHTMLElement
 {
   attribute unsigned long width;
   attribute unsigned long height;
   attribute boolean mozOpaque;
 
   nsISupports getContext(in DOMString contextId,
                          [optional] in jsval contextOptions);
diff --git a/dom/interfaces/html/nsIDOMHTMLCommandElement.idl b/dom/interfaces/html/nsIDOMHTMLCommandElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLCommandElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLCommandElement.idl
@@ -10,17 +10,17 @@
  * <command> element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#the-command-element
  *
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(A6963C8F-6475-4631-B7E0-41DD7DC8F388)]
+[scriptable, uuid(97efa08f-8b7f-41bd-8be6-b806eb48b08c)]
 interface nsIDOMHTMLCommandElement : nsIDOMHTMLElement
 {
            attribute DOMString        type;
            attribute DOMString        label;
            attribute DOMString        icon;
            attribute boolean          disabled;
            attribute boolean          defaultChecked;
            attribute boolean          checked;
diff --git a/dom/interfaces/html/nsIDOMHTMLDListElement.idl b/dom/interfaces/html/nsIDOMHTMLDListElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLDListElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLDListElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(957E223E-217A-4BBF-B6D8-D723ACFB9168)]
+[scriptable, uuid(e611c0c1-d5ea-4d25-b9e5-08d4cafd0151)]
 interface nsIDOMHTMLDListElement : nsIDOMHTMLElement
 {
            attribute boolean          compact;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLDataListElement.idl b/dom/interfaces/html/nsIDOMHTMLDataListElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLDataListElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLDataListElement.idl
@@ -12,14 +12,14 @@
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#the-datalist-element
  *
  * @status UNDER_DEVELOPMENT
  */
 
 interface nsIDOMHTMLCollection;
 
-[scriptable, uuid(EEB039A1-FD4E-41A3-805A-B367BA235DC2)]
+[scriptable, uuid(87ea361b-fe0f-486b-a891-7686dadd6372)]
 interface nsIDOMHTMLDataListElement : nsIDOMHTMLElement
 {
   readonly attribute nsIDOMHTMLCollection options;
 };
 
diff --git a/dom/interfaces/html/nsIDOMHTMLDirectoryElement.idl b/dom/interfaces/html/nsIDOMHTMLDirectoryElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLDirectoryElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLDirectoryElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(2C83A5C4-67AB-4DC5-A133-CFDAF260963C)]
+[scriptable, uuid(15b161c4-f471-4681-9368-1114f5d7a129)]
 interface nsIDOMHTMLDirectoryElement : nsIDOMHTMLElement
 {
            attribute boolean          compact;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLDivElement.idl b/dom/interfaces/html/nsIDOMHTMLDivElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLDivElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLDivElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(A9651DAE-DBD8-4CBE-B42B-A20124C2FE6D)]
+[scriptable, uuid(a4f021dd-9e3b-4a78-a9a0-bae60f9a4cc4)]
 interface nsIDOMHTMLDivElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLDocument.idl b/dom/interfaces/html/nsIDOMHTMLDocument.idl
--- a/dom/interfaces/html/nsIDOMHTMLDocument.idl
+++ b/dom/interfaces/html/nsIDOMHTMLDocument.idl
@@ -8,17 +8,17 @@
 /**
  * The nsIDOMHTMLDocument interface is the interface to a [X]HTML
  * document object.
  *
  * @see <http://www.whatwg.org/html/>
  */
 interface nsISelection;
 
-[scriptable, uuid(3f8666a9-76f0-4733-ae11-4aea8753062d)]
+[scriptable, uuid(fd76e045-8d97-4a97-ad75-eac5ae2f3ea4)]
 interface nsIDOMHTMLDocument : nsIDOMDocument
 {
            attribute DOMString            domain;
            attribute DOMString            cookie;
 
   readonly attribute nsIDOMHTMLHeadElement head;
            attribute nsIDOMHTMLElement    body;
 
diff --git a/dom/interfaces/html/nsIDOMHTMLElement.idl b/dom/interfaces/html/nsIDOMHTMLElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLElement.idl
@@ -14,17 +14,17 @@ interface nsIDOMHTMLMenuElement;
  * tree.
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
-[scriptable, uuid(9a677a5b-e6f7-4e2e-9ef9-22c2ac9967b3)]
+[scriptable, uuid(56d50046-31af-4cdc-af51-217fb2fd0a4d)]
 interface nsIDOMHTMLElement : nsIDOMElement
 {
   // metadata attributes
            attribute DOMString        id;
            attribute DOMString        title;
            attribute DOMString        lang;
            attribute DOMString        dir;
            attribute DOMString        className;
diff --git a/dom/interfaces/html/nsIDOMHTMLEmbedElement.idl b/dom/interfaces/html/nsIDOMHTMLEmbedElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLEmbedElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLEmbedElement.idl
@@ -8,17 +8,17 @@
 /**
  * The nsIDOMHTMLEmbedElement interface is the interface to a [X]HTML
  * embed element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#the-embed-element
  */
 
-[scriptable, uuid(BF234467-1F2E-4A6A-A5AA-74EC86299150)]
+[scriptable, uuid(ca0de9c2-e230-4acb-aa6d-65fc0283bf06)]
 interface nsIDOMHTMLEmbedElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
            attribute DOMString        height;
            attribute DOMString        name;
            attribute DOMString        src;
            attribute DOMString        type;
            attribute DOMString        width;
diff --git a/dom/interfaces/html/nsIDOMHTMLFieldSetElement.idl b/dom/interfaces/html/nsIDOMHTMLFieldSetElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLFieldSetElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLFieldSetElement.idl
@@ -13,17 +13,17 @@
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
 interface nsIDOMValidityState;
 
-[scriptable, uuid(AB2F9E30-1217-4172-9A95-262480FEC534)]
+[scriptable, uuid(a3e19d5b-aa7c-46bd-8bca-7135b250260a)]
 interface nsIDOMHTMLFieldSetElement : nsIDOMHTMLElement
 {
            attribute boolean                disabled;
   readonly attribute nsIDOMHTMLFormElement  form;
            attribute DOMString              name;
 
   readonly attribute DOMString              type;
 
diff --git a/dom/interfaces/html/nsIDOMHTMLFontElement.idl b/dom/interfaces/html/nsIDOMHTMLFontElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLFontElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLFontElement.idl
@@ -11,15 +11,15 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(EFF9CEAC-BE69-4A94-9DD4-0C023DEF00B3)]
+[scriptable, uuid(3ab61e70-7aac-4d9b-99fd-1c5ec5228463)]
 interface nsIDOMHTMLFontElement : nsIDOMHTMLElement
 {
            attribute DOMString        color;
            attribute DOMString        face;
            attribute DOMString        size;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLFormElement.idl b/dom/interfaces/html/nsIDOMHTMLFormElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLFormElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLFormElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(59C0DC07-D784-410B-8B5E-C26BAF7CB8A6)]
+[scriptable, uuid(6c79f4b0-3d55-45ca-8bf3-68a236e90e97)]
 interface nsIDOMHTMLFormElement : nsIDOMHTMLElement
 {
            attribute DOMString            acceptCharset;
            attribute DOMString            action;
            attribute DOMString            autocomplete;
            attribute DOMString            enctype;
            attribute DOMString            encoding;
            attribute DOMString            method;
diff --git a/dom/interfaces/html/nsIDOMHTMLFrameElement.idl b/dom/interfaces/html/nsIDOMHTMLFrameElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLFrameElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLFrameElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(2AA7855A-0667-47C3-AF1E-9101002816C1)]
+[scriptable, uuid(912423ad-00c2-4948-8f8e-4950169e516d)]
 interface nsIDOMHTMLFrameElement : nsIDOMHTMLElement
 {
            attribute DOMString        frameBorder;
            attribute DOMString        longDesc;
            attribute DOMString        marginHeight;
            attribute DOMString        marginWidth;
            attribute DOMString        name;
            attribute boolean          noResize;
diff --git a/dom/interfaces/html/nsIDOMHTMLFrameSetElement.idl b/dom/interfaces/html/nsIDOMHTMLFrameSetElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLFrameSetElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLFrameSetElement.idl
@@ -15,17 +15,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(B4D06FF4-877A-4FA3-9EFB-A75D2C843520)]
+[scriptable, uuid(e62b41c0-eaec-49bc-bf0c-be3a50b175d1)]
 interface nsIDOMHTMLFrameSetElement : nsIDOMHTMLElement
 {
            attribute DOMString        cols;
            attribute DOMString        rows;
 
            [implicit_jscontext] attribute jsval            onafterprint;
            [implicit_jscontext] attribute jsval            onbeforeprint;
            [implicit_jscontext] attribute jsval            onbeforeunload;
diff --git a/dom/interfaces/html/nsIDOMHTMLHRElement.idl b/dom/interfaces/html/nsIDOMHTMLHRElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLHRElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLHRElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(739078CD-3251-44C9-B5F9-128C0AF23707)]
+[scriptable, uuid(adf811c1-eece-4cd2-9632-ea39bc0e20e7)]
 interface nsIDOMHTMLHRElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
            attribute boolean          noShade;
            attribute DOMString        size;
            attribute DOMString        width;
            attribute DOMString        color;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLHeadElement.idl b/dom/interfaces/html/nsIDOMHTMLHeadElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLHeadElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLHeadElement.idl
@@ -11,12 +11,12 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(8B38545F-7FA5-47D5-A902-C8EA8E78FB0D)]
+[scriptable, uuid(2baa2206-1ce6-4208-aead-d1f6b18e97fb)]
 interface nsIDOMHTMLHeadElement : nsIDOMHTMLElement
 {
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLHeadingElement.idl b/dom/interfaces/html/nsIDOMHTMLHeadingElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLHeadingElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLHeadingElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(B302D445-7B7B-4B6D-9C6D-AEC30CE4F2E0)]
+[scriptable, uuid(39a59521-2e03-436b-b87b-6405396e1a24)]
 interface nsIDOMHTMLHeadingElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLHtmlElement.idl b/dom/interfaces/html/nsIDOMHTMLHtmlElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLHtmlElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLHtmlElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(73706343-BA89-4C80-932E-E636E5E8D8E2)]
+[scriptable, uuid(e7720912-1fb4-4c00-ae78-faddba690b45)]
 interface nsIDOMHTMLHtmlElement : nsIDOMHTMLElement
 {
            attribute DOMString        version;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLIFrameElement.idl b/dom/interfaces/html/nsIDOMHTMLIFrameElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLIFrameElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLIFrameElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(a7bd1e34-3969-47ae-8c1d-2970132ba925)]
+[scriptable, uuid(87d6e8db-4ae2-4a9d-a546-510836611038)]
 interface nsIDOMHTMLIFrameElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
            attribute DOMString        frameBorder;
            attribute DOMString        height;
            attribute DOMString        longDesc;
            attribute DOMString        marginHeight;
            attribute DOMString        marginWidth;
@@ -29,14 +29,11 @@ interface nsIDOMHTMLIFrameElement : nsID
            attribute DOMString        scrolling;
            attribute DOMString        src;
            attribute DOMString        width;
   // Introduced in DOM Level 2:
   readonly attribute nsIDOMDocument   contentDocument;
   readonly attribute nsIDOMWindow     contentWindow;
 
            attribute DOMString        sandbox;
-  // Mozilla extensions
-  // iframe elements require the allowfullscreen attribute to be present
-  // if they're to allow content in the sub document to go into DOM full-screen
-  // mode. See https://wiki.mozilla.org/index.php?title=Gecko:FullScreenAPI
-           attribute boolean          allowfullscreen;
+
+           attribute boolean          allowFullscreen;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLImageElement.idl b/dom/interfaces/html/nsIDOMHTMLImageElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLImageElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLImageElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(76cf0381-19fd-442d-bb18-c794fd8b5c25)]
+[scriptable, uuid(0e2ffdcb-b881-436b-a450-4790f47b60fe)]
 interface nsIDOMHTMLImageElement : nsIDOMHTMLElement
 {
            attribute DOMString        alt;
            attribute DOMString        src;
            attribute DOMString        crossOrigin;
            attribute DOMString        useMap;
            attribute boolean          isMap;
            attribute unsigned long    width;
diff --git a/dom/interfaces/html/nsIDOMHTMLInputElement.idl b/dom/interfaces/html/nsIDOMHTMLInputElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLInputElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLInputElement.idl
@@ -15,17 +15,17 @@ interface nsIDOMValidityState;
   *
   * This interface is trying to follow the DOM Level 2 HTML specification:
   * http://www.w3.org/TR/DOM-Level-2-HTML/
   *
   * with changes from the work-in-progress WHATWG HTML specification:
   * http://www.whatwg.org/specs/web-apps/current-work/
   */
 
-[scriptable, uuid(83984fd0-b0b2-11e1-afa6-0800200c9a66)]
+[scriptable, uuid(3f51d301-be0e-4e19-b056-ea98c03eedfd)]
 interface nsIDOMHTMLInputElement : nsIDOMHTMLElement
 {
            attribute DOMString             accept;
            attribute DOMString             alt;
 
            attribute DOMString             autocomplete;
            attribute boolean               autofocus;
            attribute boolean               defaultChecked;
@@ -38,17 +38,17 @@ interface nsIDOMHTMLInputElement : nsIDO
            attribute boolean               formNoValidate;
            attribute DOMString             formTarget;
 
   readonly attribute nsIDOMFileList        files;
 
            attribute unsigned long height;
            attribute boolean               indeterminate;
 
-           attribute DOMString             inputmode;
+           attribute DOMString             inputMode;
 
   readonly attribute nsIDOMHTMLElement     list;
            attribute DOMString             max;
            attribute long                  maxLength;
            attribute DOMString             min;
 
            attribute boolean               multiple;
            attribute DOMString             name;
diff --git a/dom/interfaces/html/nsIDOMHTMLLIElement.idl b/dom/interfaces/html/nsIDOMHTMLLIElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLLIElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLLIElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(C233D9D0-F0ED-4322-B3DB-C075711B816C)]
+[scriptable, uuid(8be7060b-66fe-47f4-99f0-44fe65cf9cd6)]
 interface nsIDOMHTMLLIElement : nsIDOMHTMLElement
 {
            attribute DOMString           type;
            attribute long                value;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLLabelElement.idl b/dom/interfaces/html/nsIDOMHTMLLabelElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLLabelElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLLabelElement.idl
@@ -11,15 +11,15 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(479F4997-6551-4F8F-AEE5-5FF6F176B0ED)]
+[scriptable, uuid(02024255-6b9e-445f-971e-ac71ed091a64)]
 interface nsIDOMHTMLLabelElement : nsIDOMHTMLElement
 {
   readonly attribute nsIDOMHTMLFormElement form;
            attribute DOMString             htmlFor;
   readonly attribute nsIDOMHTMLElement     control;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLLegendElement.idl b/dom/interfaces/html/nsIDOMHTMLLegendElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLLegendElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLLegendElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(457A1606-1FDA-4C2B-869E-050C58D9C32E)]
+[scriptable, uuid(42f1c264-d2b1-4f50-95cf-929ae2ea4c52)]
 interface nsIDOMHTMLLegendElement : nsIDOMHTMLElement
 {
   readonly attribute nsIDOMHTMLFormElement form;
            attribute DOMString             align;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLLinkElement.idl b/dom/interfaces/html/nsIDOMHTMLLinkElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLLinkElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLLinkElement.idl
@@ -11,19 +11,20 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(5b639ece-7b49-4507-9d38-550beb71955b)]
+[scriptable, uuid(ca856a0b-6786-4123-90fe-dc9c7600274e)]
 interface nsIDOMHTMLLinkElement : nsIDOMHTMLElement
 {
+           [binaryname(MozDisabled)]
            attribute boolean          disabled;
            attribute DOMString        charset;
            attribute DOMString        href;
            attribute DOMString        hreflang;
            attribute DOMString        media;
            attribute DOMString        rel;
            attribute DOMString        rev;
            attribute DOMString        target;
diff --git a/dom/interfaces/html/nsIDOMHTMLMapElement.idl b/dom/interfaces/html/nsIDOMHTMLMapElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLMapElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLMapElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(34CD4620-62BA-4264-8D29-E5007F2641A6)]
+[scriptable, uuid(4b2136a3-f296-479a-88dc-ed4421eb3a22)]
 interface nsIDOMHTMLMapElement : nsIDOMHTMLElement
 {
   readonly attribute nsIDOMHTMLCollection areas;
            attribute DOMString            name;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLMediaElement.idl b/dom/interfaces/html/nsIDOMHTMLMediaElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLMediaElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLMediaElement.idl
@@ -22,27 +22,27 @@ interface nsIDOMMediaStream;
 
 // undef the GetCurrentTime macro defined in WinBase.h from the MS Platform SDK
 %{C++
 #ifdef GetCurrentTime
 #undef GetCurrentTime
 #endif
 %}
 
-[scriptable, uuid(d9331886-3928-11e2-b0e1-10bf48d64bd4)]
+[scriptable, uuid(047e6eb5-54d8-4f2d-8319-d01d7d62b44f)]
 interface nsIDOMHTMLMediaElement : nsIDOMHTMLElement
 {
   // error state
   readonly attribute nsIDOMMediaError error;
 
   // network state
            attribute DOMString src;
-  [implicit_jscontext] attribute jsval mozSrcObject;
+           attribute nsIDOMMediaStream mozSrcObject;
   readonly attribute DOMString currentSrc;
-           attribute DOMString crossorigin;
+           attribute DOMString crossOrigin;
   const unsigned short NETWORK_EMPTY = 0;
   const unsigned short NETWORK_IDLE = 1;
   const unsigned short NETWORK_LOADING = 2;
   const unsigned short NETWORK_NO_SOURCE = 3;
   readonly attribute unsigned short networkState;
            attribute DOMString preload;
   readonly attribute nsIDOMTimeRanges buffered;
   void load();
diff --git a/dom/interfaces/html/nsIDOMHTMLMenuElement.idl b/dom/interfaces/html/nsIDOMHTMLMenuElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLMenuElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLMenuElement.idl
@@ -11,16 +11,16 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(8A3975C9-729A-45A5-AB20-DD2B47EE9508)]
+[scriptable, uuid(6790c2f5-01ac-43ba-9145-dd2052e3b0c7)]
 interface nsIDOMHTMLMenuElement : nsIDOMHTMLElement
 {
            attribute boolean          compact;
 
            attribute DOMString        type;
            attribute DOMString        label;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLMenuItemElement.idl b/dom/interfaces/html/nsIDOMHTMLMenuItemElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLMenuItemElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLMenuItemElement.idl
@@ -7,12 +7,12 @@
 
 /**
  * The nsIDOMHTMLMenuItemElement interface is the interface to a HTML
  * <menuitem> element.
  *
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(685E02FF-8148-4414-A0D6-319E817F3B56)]
+[scriptable, uuid(79a4ca67-bca8-4044-bc69-629e8961137a)]
 interface nsIDOMHTMLMenuItemElement : nsIDOMHTMLCommandElement
 {
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLMetaElement.idl b/dom/interfaces/html/nsIDOMHTMLMetaElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLMetaElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLMetaElement.idl
@@ -11,16 +11,16 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(AA3B1280-669C-43ED-8815-B60B395A8D66)]
+[scriptable, uuid(1aeebf8a-577e-433a-ae40-339426b52e96)]
 interface nsIDOMHTMLMetaElement : nsIDOMHTMLElement
 {
            attribute DOMString        content;
            attribute DOMString        httpEquiv;
            attribute DOMString        name;
            attribute DOMString        scheme;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLMeterElement.idl b/dom/interfaces/html/nsIDOMHTMLMeterElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLMeterElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLMeterElement.idl
@@ -8,17 +8,17 @@
 /**
  * The nsIDOMHTMLMeterElement interface is the interface to a HTML
  * <meter> element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-meter-element
  */
 
-[scriptable, uuid(d4466510-8143-11e0-b278-0800200c9a66)]
+[scriptable, uuid(53b55f04-fd1a-47e5-8181-d059114a3bc9)]
 interface nsIDOMHTMLMeterElement : nsIDOMHTMLElement
 {
            attribute double value;
            attribute double min;
            attribute double max;
            attribute double low;
            attribute double high;
            attribute double optimum;
diff --git a/dom/interfaces/html/nsIDOMHTMLModElement.idl b/dom/interfaces/html/nsIDOMHTMLModElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLModElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLModElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(4564C9EF-795B-4080-AE48-C4527855390C)]
+[scriptable, uuid(c8ce2f75-2bbf-4c30-8627-0ea1a7b2ebf7)]
 interface nsIDOMHTMLModElement : nsIDOMHTMLElement
 {
            attribute DOMString        cite;
            attribute DOMString        dateTime;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLOListElement.idl b/dom/interfaces/html/nsIDOMHTMLOListElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLOListElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLOListElement.idl
@@ -11,16 +11,16 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(8A2BA7C5-B3F2-4A57-86F9-0E87C291A591)]
+[scriptable, uuid(d94ba4eb-a154-4abf-9868-105905e995e4)]
 interface nsIDOMHTMLOListElement : nsIDOMHTMLElement
 {
            attribute boolean          compact;
            attribute boolean          reversed;
            attribute long             start;
            attribute DOMString        type;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLObjectElement.idl b/dom/interfaces/html/nsIDOMHTMLObjectElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLObjectElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLObjectElement.idl
@@ -13,17 +13,17 @@
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
 interface nsIDOMValidityState;
 
-[scriptable, uuid(A70595DD-68A5-41F5-AB52-73A47D98BD78)]
+[scriptable, uuid(2481afa7-9ca3-448b-80d7-0138c47b5b33)]
 interface nsIDOMHTMLObjectElement : nsIDOMHTMLElement
 {
   readonly attribute nsIDOMHTMLFormElement form;
            attribute DOMString             code;
            attribute DOMString             align;
            attribute DOMString             archive;
            attribute DOMString             border;
            attribute DOMString             codeBase;
diff --git a/dom/interfaces/html/nsIDOMHTMLOptGroupElement.idl b/dom/interfaces/html/nsIDOMHTMLOptGroupElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLOptGroupElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLOptGroupElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(BEDB0D8D-030E-409A-B3B5-28DC0E0D9C34)]
+[scriptable, uuid(cc9fe8ad-908b-40c4-b007-254e15d783bb)]
 interface nsIDOMHTMLOptGroupElement : nsIDOMHTMLElement
 {
            attribute boolean          disabled;
            attribute DOMString        label;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLOptionElement.idl b/dom/interfaces/html/nsIDOMHTMLOptionElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLOptionElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLOptionElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(68A5D794-39BF-4B00-AEFE-754B9E8F7EC6)]
+[scriptable, uuid(d4c53417-e746-451a-8b8a-0fa3fcda95b3)]
 interface nsIDOMHTMLOptionElement : nsIDOMHTMLElement
 {
            attribute boolean               disabled;
   readonly attribute nsIDOMHTMLFormElement form;
            attribute DOMString             label;
            attribute boolean               defaultSelected;
            attribute boolean               selected;
            attribute DOMString             value;
diff --git a/dom/interfaces/html/nsIDOMHTMLOutputElement.idl b/dom/interfaces/html/nsIDOMHTMLOutputElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLOutputElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLOutputElement.idl
@@ -12,17 +12,17 @@
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#the-output-element
  *
  * @status UNDER_DEVELOPMENT
  */
 
 interface nsIDOMValidityState;
 
-[scriptable, uuid(01542000-CD00-4E8A-841C-9BAAD6BA0368)]
+[scriptable, uuid(6d6bf653-3eb4-420f-b1b0-6ad919a06926)]
 interface nsIDOMHTMLOutputElement : nsIDOMHTMLElement
 {
   // DOMSettableTokenList
   readonly attribute nsISupports                htmlFor;
   readonly attribute nsIDOMHTMLFormElement      form;
            attribute DOMString                  name;
 
   readonly attribute DOMString                  type;
diff --git a/dom/interfaces/html/nsIDOMHTMLParagraphElement.idl b/dom/interfaces/html/nsIDOMHTMLParagraphElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLParagraphElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLParagraphElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(32840748-F8A8-414C-B0DE-DD947E5B0BD0)]
+[scriptable, uuid(ccc50b61-8e2e-4e0a-be5e-0b30923051b0)]
 interface nsIDOMHTMLParagraphElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLParamElement.idl b/dom/interfaces/html/nsIDOMHTMLParamElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLParamElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLParamElement.idl
@@ -11,16 +11,16 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(1FBEC0F8-C7CF-4DC8-84BE-247985A65E07)]
+[scriptable, uuid(9cb0d681-1d1c-4c5d-b165-579cafcdf897)]
 interface nsIDOMHTMLParamElement : nsIDOMHTMLElement
 {
            attribute DOMString        name;
            attribute DOMString        type;
            attribute DOMString        value;
            attribute DOMString        valueType;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLPreElement.idl b/dom/interfaces/html/nsIDOMHTMLPreElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLPreElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLPreElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(FDAF779F-BCCA-4653-91AE-CD4D23E4CC69)]
+[scriptable, uuid(128840c4-0973-4c7a-b71a-81e23071f1f6)]
 interface nsIDOMHTMLPreElement : nsIDOMHTMLElement
 {
            attribute long             width;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLProgressElement.idl b/dom/interfaces/html/nsIDOMHTMLProgressElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLProgressElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLProgressElement.idl
@@ -10,17 +10,17 @@
  * <progress> element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#the-progress-element
  *
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(275851c9-c3e2-4427-a770-3d2aaad6c546)]
+[scriptable, uuid(e5ba151c-0772-4849-8021-fb30f341fff9)]
 interface nsIDOMHTMLProgressElement : nsIDOMHTMLElement
 {
            attribute double value;
            attribute double max;
   readonly attribute double position;
   /**
    * The labels attribute will be done with bug 567740.
    */
diff --git a/dom/interfaces/html/nsIDOMHTMLQuoteElement.idl b/dom/interfaces/html/nsIDOMHTMLQuoteElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLQuoteElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLQuoteElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(38409533-9A85-4542-B734-BB2012966480)]
+[scriptable, uuid(fa9731da-fa8a-48a4-95a3-cba2623bcc59)]
 interface nsIDOMHTMLQuoteElement : nsIDOMHTMLElement
 {
            attribute DOMString        cite;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLScriptElement.idl b/dom/interfaces/html/nsIDOMHTMLScriptElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLScriptElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLScriptElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(E2F548F6-9955-4820-A9E6-3A9FD43C7111)]
+[scriptable, uuid(e445db32-0116-4cf5-b73e-7073ccf3d259)]
 interface nsIDOMHTMLScriptElement : nsIDOMHTMLElement
 {
            attribute DOMString        src;
            attribute boolean          async;
            attribute boolean          defer;
            attribute DOMString        type;
            attribute DOMString        charset;
            attribute DOMString        text;
diff --git a/dom/interfaces/html/nsIDOMHTMLSelectElement.idl b/dom/interfaces/html/nsIDOMHTMLSelectElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLSelectElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLSelectElement.idl
@@ -14,17 +14,17 @@
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
 interface nsIDOMValidityState;
 
-[scriptable, uuid(e85194cf-56e6-44a6-92d9-0096c9d2536e)]
+[scriptable, uuid(d959feb0-a7e8-44d6-9346-b48253ad8ba4)]
 interface nsIDOMHTMLSelectElement : nsIDOMHTMLElement
 {
            attribute boolean                     autofocus;
            attribute boolean                     disabled;
   readonly attribute nsIDOMHTMLFormElement       form;
            attribute boolean                     multiple;
            attribute DOMString                   name;
            attribute unsigned long               size;
diff --git a/dom/interfaces/html/nsIDOMHTMLSourceElement.idl b/dom/interfaces/html/nsIDOMHTMLSourceElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLSourceElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLSourceElement.idl
@@ -11,15 +11,15 @@
  * <source> element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#source
  *
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(af4b7ca2-2694-4672-a182-8a63be79c826)]
+[scriptable, uuid(333faeb7-93dc-439e-a50e-a9df705b8ba6)]
 interface nsIDOMHTMLSourceElement : nsIDOMHTMLElement
 {
            attribute DOMString src;
            attribute DOMString type;
            attribute DOMString media;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLStyleElement.idl b/dom/interfaces/html/nsIDOMHTMLStyleElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLStyleElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLStyleElement.idl
@@ -11,16 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(f9db1001-faae-46e1-b85f-0a0afb80c5b2)]
+[scriptable, uuid(5e6c9cac-5594-4006-ae3f-ad82fb28cee9)]
 interface nsIDOMHTMLStyleElement : nsIDOMHTMLElement
 {
+           [binaryname(MozDisabled)]
            attribute boolean          disabled;
            attribute DOMString        media;
            attribute DOMString        type;
            attribute boolean          scoped;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLTableCaptionElem.idl b/dom/interfaces/html/nsIDOMHTMLTableCaptionElem.idl
--- a/dom/interfaces/html/nsIDOMHTMLTableCaptionElem.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTableCaptionElem.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, builtinclass, uuid(526C4DC4-25CD-46DE-A9B2-1501D624F7DF)]
+[scriptable, builtinclass, uuid(310ebe52-7377-4fc4-9546-a6f4dcaafa1f)]
 interface nsIDOMHTMLTableCaptionElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLTableCellElement.idl b/dom/interfaces/html/nsIDOMHTMLTableCellElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTableCellElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTableCellElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(8434C7E8-5E4E-4AB5-9192-3F1C00815920)]
+[scriptable, uuid(2c008303-f082-434b-b47e-4c8dea659ea0)]
 interface nsIDOMHTMLTableCellElement : nsIDOMHTMLElement
 {
   readonly attribute long             cellIndex;
            attribute DOMString        abbr;
            attribute DOMString        align;
            attribute DOMString        axis;
            attribute DOMString        bgColor;
            attribute DOMString        ch;
diff --git a/dom/interfaces/html/nsIDOMHTMLTableColElement.idl b/dom/interfaces/html/nsIDOMHTMLTableColElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTableColElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTableColElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(8F98865C-1600-4282-A553-838D87CC9F1F)]
+[scriptable, uuid(f38fe6c8-9dfd-4c24-aeab-352459383d67)]
 interface nsIDOMHTMLTableColElement : nsIDOMHTMLElement
 {
            attribute DOMString        align;
            attribute DOMString        ch;
            attribute DOMString        chOff;
            attribute long             span;
            attribute DOMString        vAlign;
            attribute DOMString        width;
diff --git a/dom/interfaces/html/nsIDOMHTMLTableElement.idl b/dom/interfaces/html/nsIDOMHTMLTableElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTableElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTableElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(AE50DE74-BC26-402E-85DC-A980F506B655)]
+[scriptable, uuid(cee6898b-621f-4e94-b9d1-53e7f42dbd3a)]
 interface nsIDOMHTMLTableElement : nsIDOMHTMLElement
 {
   // Modified in DOM Level 2:
            attribute nsIDOMHTMLTableCaptionElement caption;
                                              // raises(DOMException) on setting
 
   // Modified in DOM Level 2:
            attribute nsIDOMHTMLTableSectionElement tHead;
diff --git a/dom/interfaces/html/nsIDOMHTMLTableRowElement.idl b/dom/interfaces/html/nsIDOMHTMLTableRowElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTableRowElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTableRowElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(0AC4A382-4F97-4143-A3B3-DE0A54978C67)]
+[scriptable, uuid(ccbaf4d5-1c2d-4edb-9faf-094e357da044)]
 interface nsIDOMHTMLTableRowElement : nsIDOMHTMLElement
 {
   // Modified in DOM Level 2:
   readonly attribute long                 rowIndex;
   // Modified in DOM Level 2:
   readonly attribute long                 sectionRowIndex;
   // Modified in DOM Level 2:
   readonly attribute nsIDOMHTMLCollection cells;
diff --git a/dom/interfaces/html/nsIDOMHTMLTableSectionElement.idl b/dom/interfaces/html/nsIDOMHTMLTableSectionElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTableSectionElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTableSectionElement.idl
@@ -11,17 +11,17 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, builtinclass, uuid(006D2482-0B89-401B-9A16-EDE4D9971F02)]
+[scriptable, builtinclass, uuid(233c3242-5379-4977-81c5-58bf90743a09)]
 interface nsIDOMHTMLTableSectionElement : nsIDOMHTMLElement
 {
            attribute DOMString            align;
            attribute DOMString            ch;
            attribute DOMString            chOff;
            attribute DOMString            vAlign;
   readonly attribute nsIDOMHTMLCollection rows;
   // Modified in DOM Level 2:
diff --git a/dom/interfaces/html/nsIDOMHTMLTextAreaElement.idl b/dom/interfaces/html/nsIDOMHTMLTextAreaElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTextAreaElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTextAreaElement.idl
@@ -14,17 +14,17 @@ interface nsIDOMValidityState;
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(2A395065-2D92-48C1-AC00-643DE9CA681B)]
+[scriptable, uuid(c888f597-b77e-4ba6-b7bc-09cfc7d58f4a)]
 interface nsIDOMHTMLTextAreaElement : nsIDOMHTMLElement
 {
            attribute boolean               autofocus;
            attribute unsigned long         cols;
            attribute boolean               disabled;
   readonly attribute nsIDOMHTMLFormElement form;
            attribute long                  maxLength;
            attribute DOMString             name;
@@ -55,10 +55,12 @@ interface nsIDOMHTMLTextAreaElement : ns
   void select();
            attribute long                  selectionStart;
            attribute long                  selectionEnd;
   void setSelectionRange(in long selectionStart, in long selectionEnd, [optional] in DOMString direction);
            attribute DOMString             selectionDirection;
 
 
   // Mozilla extensions
+  // Please make sure to update the HTMLTextAreaElement Web IDL interface to
+  // mirror the list of Mozilla extensions here when changing it.
   readonly attribute nsIControllers   controllers;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLTitleElement.idl b/dom/interfaces/html/nsIDOMHTMLTitleElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLTitleElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLTitleElement.idl
@@ -11,13 +11,13 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(DB0440CC-FB98-4FB0-84E8-6ADD4764A48F)]
+[scriptable, uuid(5da56fa3-1a87-4931-8411-3f6be1a43178)]
 interface nsIDOMHTMLTitleElement : nsIDOMHTMLElement
 {
            attribute DOMString        text;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLUListElement.idl b/dom/interfaces/html/nsIDOMHTMLUListElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLUListElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLUListElement.idl
@@ -11,14 +11,14 @@
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */
 
-[scriptable, uuid(7DFD92D6-4DC3-4C52-8384-BA35E0AE4B8B)]
+[scriptable, uuid(edb972d4-82b0-4be6-9145-caeb5d99a4ae)]
 interface nsIDOMHTMLUListElement : nsIDOMHTMLElement
 {
            attribute boolean          compact;
            attribute DOMString        type;
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLUnknownElement.idl b/dom/interfaces/html/nsIDOMHTMLUnknownElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLUnknownElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLUnknownElement.idl
@@ -6,12 +6,12 @@
 #include "nsIDOMHTMLElement.idl"
 
 /**
  * The nsIDOMHTMLUnknownElement interface is the interface to an unknown HTML
  * element.
  *
  * @see <http://www.whatwg.org/html/#htmlunknownelement>
  */
-[scriptable, uuid(74ACC5C9-A18D-4AEC-AEFC-A719EF69499C)]
+[scriptable, uuid(3f4be98b-c6e5-41b4-bc0d-f659f7d109e0)]
 interface nsIDOMHTMLUnknownElement : nsIDOMHTMLElement
 {
 };
diff --git a/dom/interfaces/html/nsIDOMHTMLVideoElement.idl b/dom/interfaces/html/nsIDOMHTMLVideoElement.idl
--- a/dom/interfaces/html/nsIDOMHTMLVideoElement.idl
+++ b/dom/interfaces/html/nsIDOMHTMLVideoElement.idl
@@ -11,17 +11,17 @@
  * <video> element.
  *
  * For more information on this interface, please see
  * http://www.whatwg.org/specs/web-apps/current-work/#video
  *
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(fe914e4a-3928-11e2-bea2-10bf48d64bd4)]
+[scriptable, uuid(4582aec0-8627-4a45-9aa4-22ec64ae9309)]
 interface nsIDOMHTMLVideoElement : nsIDOMHTMLMediaElement
 {
            attribute long width; 
            attribute long height;
   readonly attribute unsigned long videoWidth;
   readonly attribute unsigned long videoHeight;
            attribute DOMString poster;
            
diff --git a/dom/interfaces/load-save/nsIDOMLSProgressEvent.idl b/dom/interfaces/load-save/nsIDOMLSProgressEvent.idl
deleted file mode 100644
--- a/dom/interfaces/load-save/nsIDOMLSProgressEvent.idl
+++ /dev/null
@@ -1,16 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsIDOMEvent.idl"
-
-interface nsIDOMLSInput;
-
-[scriptable, builtinclass, uuid(5343c259-78c1-4f20-a81f-5ddce4f0188e)]
-interface nsIDOMLSProgressEvent : nsIDOMEvent
-{
-  readonly attribute nsIDOMLSInput   input;
-  readonly attribute unsigned long   position;
-  readonly attribute unsigned long   totalSize;
-};
diff --git a/dom/interfaces/push/nsIDOMPushManager.idl b/dom/interfaces/push/nsIDOMPushManager.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/push/nsIDOMPushManager.idl
@@ -0,0 +1,45 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "domstubs.idl"
+interface nsIDOMDOMRequest;
+
+/**
+ * Client API for SimplePush.
+ *
+ * The SimplePush API allows web applications to use push notifications and be
+ * woken up when something of interest has changed. This frees web applications
+ * from implementing polling, giving better responsiveness and conserving the
+ * device's battery life.
+ */
+[scriptable,uuid(c7ad4f42-faae-4e8b-9879-780a72349945)]
+interface nsIDOMPushManager : nsISupports
+{
+  /**
+   * Register for a new push endpoint.
+   *
+   * On success, the DOMRequest's result field will be a string URL.  This URL
+   * is the endpoint that can be contacted to wake up the application.
+   */
+  nsIDOMDOMRequest register();
+  
+  /**
+   * Unregister a push endpoint.
+   *
+   * On success, the DOMRequest's result field will be the endpoint that was
+   * passed in.
+   *
+   * Stops watching for changes to this URL.
+   */
+  nsIDOMDOMRequest unregister(in ACString endpoint);
+
+  /**
+   * Get a list of active registrations for this web app.
+   *
+   * On success, the DOMRequest's result field is an array of endpoints.
+   * For example:
+   *   ["https://example.com/notify/1", "https://example.com/notify/2"]
+   */
+  nsIDOMDOMRequest registrations();
+};
diff --git a/dom/interfaces/storage/nsIDOMStorageIndexedDB.idl b/dom/interfaces/storage/nsIDOMStorageIndexedDB.idl
--- a/dom/interfaces/storage/nsIDOMStorageIndexedDB.idl
+++ b/dom/interfaces/storage/nsIDOMStorageIndexedDB.idl
@@ -8,19 +8,17 @@
 /**
  * Interface for a client side storage. See
  * http://www.whatwg.org/specs/web-apps/current-work/#scs-client-side and
  * http://www.w3.org/TR/IndexedDB/ for more information.
  *
  * Allows access to contextual storage areas.
  */
 
-interface nsIIDBFactory;
-
-[scriptable, uuid(94ca74e8-9cff-456e-a7a4-a4071a32ff58)]
+[scriptable, uuid(f4deeef5-32d3-4048-bb56-883330fd8f35)]
 interface nsIDOMStorageIndexedDB : nsISupports
 {
   /**
    * Indexed Databases for the current browsing context.
    */
-  readonly attribute nsIIDBFactory indexedDB;
-  readonly attribute nsIIDBFactory mozIndexedDB;
+  readonly attribute nsISupports indexedDB;
+  readonly attribute nsISupports mozIndexedDB;
 };
diff --git a/dom/interfaces/svg/nsIDOMSVGDocument.idl b/dom/interfaces/svg/nsIDOMSVGDocument.idl
--- a/dom/interfaces/svg/nsIDOMSVGDocument.idl
+++ b/dom/interfaces/svg/nsIDOMSVGDocument.idl
@@ -2,14 +2,14 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMDocument.idl"
 
 interface nsIDOMSVGElement;
 
-[scriptable, uuid(8fe506e4-5563-4b16-9228-182071e3f8f8)]
+[scriptable, uuid(72d201c7-159c-4b64-886f-ed3920dd9462)]
 interface nsIDOMSVGDocument : nsIDOMDocument
 {
   readonly attribute DOMString domain;
   readonly attribute nsIDOMSVGElement rootElement;
 };
diff --git a/dom/interfaces/svg/nsIDOMSVGElement.idl b/dom/interfaces/svg/nsIDOMSVGElement.idl
--- a/dom/interfaces/svg/nsIDOMSVGElement.idl
+++ b/dom/interfaces/svg/nsIDOMSVGElement.idl
@@ -5,17 +5,17 @@
 
 #include "nsIDOMElement.idl"
 
 interface nsIDOMSVGAnimatedString;
 interface nsIDOMCSSStyleDeclaration;
 interface nsIDOMCSSValue;
 
 
-[scriptable, uuid(7ccf8faf-29b4-4113-bb23-bc187bac27cf)]
+[scriptable, uuid(b0d2bcfa-9aac-4c23-9a8b-b88f7c4b93a5)]
 interface nsIDOMSVGElement : nsIDOMElement
 {
   attribute DOMString id;
             // raises DOMException on setting
   readonly attribute nsIDOMSVGElement    ownerSVGElement;
   readonly attribute nsIDOMSVGElement    viewportElement;
 
   readonly attribute nsIDOMSVGAnimatedString   className;
diff --git a/dom/interfaces/svg/nsIDOMSVGEvent.idl b/dom/interfaces/svg/nsIDOMSVGEvent.idl
deleted file mode 100644
--- a/dom/interfaces/svg/nsIDOMSVGEvent.idl
+++ /dev/null
@@ -1,16 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsIDOMEvent.idl"
-
-/**
- * For more information on this interface please see
- * http://www.w3.org/TR/SVG11/script.html#InterfaceSVGEvent
- */
-
-[scriptable, builtinclass, uuid(d6a2c07c-8a67-4a6e-adde-f668edb4a852)]
-interface nsIDOMSVGEvent : nsIDOMEvent
-{
-};
diff --git a/dom/interfaces/svg/nsIDOMSVGFilters.idl b/dom/interfaces/svg/nsIDOMSVGFilters.idl
deleted file mode 100644
--- a/dom/interfaces/svg/nsIDOMSVGFilters.idl
+++ /dev/null
@@ -1,295 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsIDOMSVGElement.idl"
-
-interface nsIDOMSVGAnimatedLength;
-interface nsIDOMSVGAnimatedString;
-interface nsIDOMSVGAnimatedNumber;
-interface nsIDOMSVGAnimatedEnumeration;
-interface nsIDOMSVGAnimatedInteger;
-
-[scriptable, uuid(117CFA4C-B0EB-4C0F-A590-F77FBF42E76D)]
-interface nsIDOMSVGFilterPrimitiveStandardAttributes : nsIDOMSVGElement
-{ 
-    readonly attribute nsIDOMSVGAnimatedLength      x;
-    readonly attribute nsIDOMSVGAnimatedLength      y;
-    readonly attribute nsIDOMSVGAnimatedLength      width;
-    readonly attribute nsIDOMSVGAnimatedLength      height;
-    readonly attribute nsIDOMSVGAnimatedString      result;
-};
-
-[scriptable, uuid(02DB0A51-087B-4EA4-ABC4-3DCAB65BFE83)]
-interface nsIDOMSVGFEBlendElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-    const unsigned short SVG_MODE_UNKNOWN   = 0;
-    const unsigned short SVG_MODE_NORMAL    = 1;
-    const unsigned short SVG_MODE_MULTIPLY  = 2;
-    const unsigned short SVG_MODE_SCREEN    = 3;
-    const unsigned short SVG_MODE_DARKEN    = 4;
-    const unsigned short SVG_MODE_LIGHTEN   = 5;
-
-    readonly attribute nsIDOMSVGAnimatedString        in1;
-    readonly attribute nsIDOMSVGAnimatedString        in2;
-    readonly attribute nsIDOMSVGAnimatedEnumeration   mode;
-};
-
-[scriptable, uuid(BB966D00-CF60-4696-9954-43525401E209)]
-interface nsIDOMSVGFEColorMatrixElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-    // Color Matrix Types
-    const unsigned short SVG_FECOLORMATRIX_TYPE_UNKNOWN            = 0;
-    const unsigned short SVG_FECOLORMATRIX_TYPE_MATRIX             = 1;
-    const unsigned short SVG_FECOLORMATRIX_TYPE_SATURATE           = 2;
-    const unsigned short SVG_FECOLORMATRIX_TYPE_HUE_ROTATE         = 3;
-    const unsigned short SVG_FECOLORMATRIX_TYPE_LUMINANCE_TO_ALPHA = 4;
-
-    readonly attribute nsIDOMSVGAnimatedString in1;
-    readonly attribute nsIDOMSVGAnimatedEnumeration type;
-    // SVGAnimatedNumberList
-    readonly attribute nsISupports  values;
-};
-
-[scriptable, uuid(539000B3-2272-4F1A-BF24-23340DD408AF)]
-interface nsIDOMSVGFEComponentTransferElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-    readonly attribute nsIDOMSVGAnimatedString in1;
-};
-
-[scriptable, uuid(75FAB13E-9D34-4653-B992-BF7DF78BA379)]
-interface nsIDOMSVGComponentTransferFunctionElement : nsIDOMSVGElement
-{
-    // Component Transfer Types
-    const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN  = 0;
-    const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1;
-    const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_TABLE    = 2;
-    const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3;
-    const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_LINEAR   = 4;
-    const unsigned short SVG_FECOMPONENTTRANSFER_TYPE_GAMMA    = 5;
-
-    readonly attribute nsIDOMSVGAnimatedEnumeration type;
-    // SVGAnimatedNumberList
-    readonly attribute nsISupports                  tableValues;
-    readonly attribute nsIDOMSVGAnimatedNumber      slope;
-    readonly attribute nsIDOMSVGAnimatedNumber      intercept;
-    readonly attribute nsIDOMSVGAnimatedNumber      amplitude;
-    readonly attribute nsIDOMSVGAnimatedNumber      exponent;
-    readonly attribute nsIDOMSVGAnimatedNumber      offset;
-};
-
-[scriptable, uuid(32887E8E-A5DE-4FBB-84F2-842743FEE02B)]
-interface nsIDOMSVGFECompositeElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-    // Operator Types
-    const unsigned short SVG_OPERATOR_UNKNOWN    = 0;
-    const unsigned short SVG_OPERATOR_OVER       = 1;
-    const unsigned short SVG_OPERATOR_IN         = 2;
-    const unsigned short SVG_OPERATOR_OUT        = 3;
-    const unsigned short SVG_OPERATOR_ATOP       = 4;
-    const unsigned short SVG_OPERATOR_XOR        = 5;
-    const unsigned short SVG_OPERATOR_ARITHMETIC = 6;
-
-    readonly attribute nsIDOMSVGAnimatedString  in1;
-    readonly attribute nsIDOMSVGAnimatedString  in2;
-    readonly attribute nsIDOMSVGAnimatedNumber  k1;
-    readonly attribute nsIDOMSVGAnimatedNumber  k2;
-    readonly attribute nsIDOMSVGAnimatedNumber  k3;
-    readonly attribute nsIDOMSVGAnimatedNumber  k4;
-    readonly attribute nsIDOMSVGAnimatedEnumeration operator;
-    
-    void setK ( in float k1, in float k2, in float k3, in float k4 );
-
-};
-
-[scriptable, uuid(B0FDBC88-ACE2-4EA1-A37B-A3D49A49C014)]
-interface nsIDOMSVGFEFuncRElement : nsIDOMSVGComponentTransferFunctionElement
-{
-};
-
-[scriptable, uuid(7F03F95A-5C78-4872-9CF6-856F66C76F8B)]
-interface nsIDOMSVGFEFuncGElement : nsIDOMSVGComponentTransferFunctionElement
-{
-};
-
-[scriptable, uuid(1AE3374C-1F60-4DD0-BC08-3B16FF9A63B0)]
-interface nsIDOMSVGFEFuncBElement : nsIDOMSVGComponentTransferFunctionElement
-{
-};
-
-[scriptable, uuid(EF68B840-E84F-45B6-89A6-B716D6A0BFEC)]
-interface nsIDOMSVGFEFuncAElement : nsIDOMSVGComponentTransferFunctionElement
-{
-};
-
-[scriptable, uuid(32741F93-2AC4-4173-96AE-B1E65634C1EF)]
-interface nsIDOMSVGFEGaussianBlurElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{ 
-    readonly attribute nsIDOMSVGAnimatedString in1;
-    readonly attribute nsIDOMSVGAnimatedNumber stdDeviationX;
-    readonly attribute nsIDOMSVGAnimatedNumber stdDeviationY;
-
-    void setStdDeviation ( in float stdDeviationX, in float stdDeviationY );
-};
-
-[scriptable, uuid(F698E5A2-DA0E-4D6F-9F45-C57D6464ECF1)]
-interface nsIDOMSVGFEMergeElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-};
-
-[scriptable, uuid(517828DE-69F7-4FAB-915E-862E4F77493D)]
-interface nsIDOMSVGFEMergeNodeElement : nsIDOMSVGElement { 
-    readonly attribute nsIDOMSVGAnimatedString in1;
-};
-
-[scriptable, uuid(0BAE928A-92FE-4C5F-A8CB-DAED171FA6A2)]
-interface nsIDOMSVGFEOffsetElement : nsIDOMSVGFilterPrimitiveStandardAttributes { 
-    readonly attribute nsIDOMSVGAnimatedString in1;
-    readonly attribute nsIDOMSVGAnimatedNumber dx;
-    readonly attribute nsIDOMSVGAnimatedNumber dy;
-};
-
-[scriptable, uuid(F1635489-F34F-4554-8284-C848500FE0DD)]
-interface nsIDOMSVGFEFloodElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-};
-
-[scriptable, uuid(C587EFE9-0A22-44E6-9964-B68DA564804A)]
-interface nsIDOMSVGFETileElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-    readonly attribute nsIDOMSVGAnimatedString in1;
-};
-
-[scriptable, uuid(15BB448A-B589-4769-AA92-7C680A919F76)]
-interface nsIDOMSVGFETurbulenceElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{ 
-    // Turbulence Types
-    const unsigned short SVG_TURBULENCE_TYPE_UNKNOWN      = 0;
-    const unsigned short SVG_TURBULENCE_TYPE_FRACTALNOISE = 1;
-    const unsigned short SVG_TURBULENCE_TYPE_TURBULENCE   = 2;
-    // Stitch Options
-    const unsigned short SVG_STITCHTYPE_UNKNOWN  = 0;
-    const unsigned short SVG_STITCHTYPE_STITCH   = 1;
-    const unsigned short SVG_STITCHTYPE_NOSTITCH = 2;
-
-    readonly attribute nsIDOMSVGAnimatedNumber      baseFrequencyX;
-    readonly attribute nsIDOMSVGAnimatedNumber      baseFrequencyY;
-    readonly attribute nsIDOMSVGAnimatedInteger     numOctaves;
-    readonly attribute nsIDOMSVGAnimatedNumber      seed;
-    readonly attribute nsIDOMSVGAnimatedEnumeration stitchTiles;
-    readonly attribute nsIDOMSVGAnimatedEnumeration type;
-};
-
-[scriptable, uuid(645DEF2E-C176-47CC-A2C4-C9CC49D0AFC8)]
-interface nsIDOMSVGFEMorphologyElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{ 
-    // Operator Types
-    const unsigned short SVG_OPERATOR_UNKNOWN  = 0;
-    const unsigned short SVG_OPERATOR_ERODE    = 1;
-    const unsigned short SVG_OPERATOR_DILATE   = 2;
-
-    readonly attribute nsIDOMSVGAnimatedString      in1;
-    readonly attribute nsIDOMSVGAnimatedNumber      radiusX;
-    readonly attribute nsIDOMSVGAnimatedNumber      radiusY;
-    readonly attribute nsIDOMSVGAnimatedEnumeration operator;
-    
-    void setRadius ( in float rx, in float ry );
-};
-
-[scriptable, uuid(42A1FB88-DCD7-4211-9DD7-431460708D12)]
-interface nsIDOMSVGFEConvolveMatrixElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{ 
-    // Edge Mode Values
-    const unsigned short SVG_EDGEMODE_UNKNOWN   = 0;
-    const unsigned short SVG_EDGEMODE_DUPLICATE = 1;
-    const unsigned short SVG_EDGEMODE_WRAP      = 2;
-    const unsigned short SVG_EDGEMODE_NONE      = 3;
-
-    readonly attribute nsIDOMSVGAnimatedString      in1;
-    readonly attribute nsIDOMSVGAnimatedInteger     orderX;
-    readonly attribute nsIDOMSVGAnimatedInteger     orderY;
-    // SVGAnimatedNumberList
-    readonly attribute nsISupports                  kernelMatrix;
-    readonly attribute nsIDOMSVGAnimatedNumber      divisor;
-    readonly attribute nsIDOMSVGAnimatedNumber      bias;
-    readonly attribute nsIDOMSVGAnimatedInteger     targetX;
-    readonly attribute nsIDOMSVGAnimatedInteger     targetY;
-    readonly attribute nsIDOMSVGAnimatedEnumeration edgeMode;
-    readonly attribute nsIDOMSVGAnimatedNumber      kernelUnitLengthX;
-    readonly attribute nsIDOMSVGAnimatedNumber      kernelUnitLengthY;
-    readonly attribute nsISupports                  preserveAlpha;
-};
-
-[scriptable, uuid(43662657-4DA9-4B64-8891-033B08DBD11B)]
-interface nsIDOMSVGFEDiffuseLightingElement :  nsIDOMSVGFilterPrimitiveStandardAttributes
-{ 
-  readonly attribute nsIDOMSVGAnimatedString in1;
-  readonly attribute nsIDOMSVGAnimatedNumber surfaceScale;
-  readonly attribute nsIDOMSVGAnimatedNumber diffuseConstant;
-  readonly attribute nsIDOMSVGAnimatedNumber kernelUnitLengthX;
-  readonly attribute nsIDOMSVGAnimatedNumber kernelUnitLengthY;
-};
-
-[scriptable, uuid(473A96B5-E644-4BAC-93B8-8C923F6568F7)]
-interface nsIDOMSVGFESpecularLightingElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{ 
-  readonly attribute nsIDOMSVGAnimatedString in1;
-  readonly attribute nsIDOMSVGAnimatedNumber surfaceScale;
-  readonly attribute nsIDOMSVGAnimatedNumber specularConstant;
-  readonly attribute nsIDOMSVGAnimatedNumber specularExponent;
-  readonly attribute nsIDOMSVGAnimatedNumber kernelUnitLengthX;
-  readonly attribute nsIDOMSVGAnimatedNumber kernelUnitLengthY;
-};
-
-[scriptable, uuid(3C166FDD-A486-4089-9247-DEAC33001BD3)]
-interface nsIDOMSVGFEDistantLightElement : nsIDOMSVGElement { 
-  readonly attribute nsIDOMSVGAnimatedNumber azimuth;
-  readonly attribute nsIDOMSVGAnimatedNumber elevation;
-};
-
-[scriptable, uuid(88C14474-3B95-454C-A62E-7FBE05DBD4A9)]
-interface nsIDOMSVGFEPointLightElement : nsIDOMSVGElement { 
-  readonly attribute nsIDOMSVGAnimatedNumber x;
-  readonly attribute nsIDOMSVGAnimatedNumber y;
-  readonly attribute nsIDOMSVGAnimatedNumber z;
-};
-
-[scriptable, uuid(CDF0A4CD-99A0-4B8D-9E17-9EA7513A34B9)]
-interface nsIDOMSVGFESpotLightElement : nsIDOMSVGElement { 
-  readonly attribute nsIDOMSVGAnimatedNumber x;
-  readonly attribute nsIDOMSVGAnimatedNumber y;
-  readonly attribute nsIDOMSVGAnimatedNumber z;
-  readonly attribute nsIDOMSVGAnimatedNumber pointsAtX;
-  readonly attribute nsIDOMSVGAnimatedNumber pointsAtY;
-  readonly attribute nsIDOMSVGAnimatedNumber pointsAtZ;
-  readonly attribute nsIDOMSVGAnimatedNumber specularExponent;
-  readonly attribute nsIDOMSVGAnimatedNumber limitingConeAngle;
-};
-
-[scriptable, uuid(6457A423-0686-486F-AB12-846B9542DFCF)]
-interface nsIDOMSVGFEImageElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-/*
-  nsIDOMSVGURIReference,
-  nsIDOMSVGLangSpace,
-  nsIDOMSVGExternalResourcesRequired
-*/
-{
-};
-
-[scriptable, uuid(9B82CB0B-004D-4F26-BF3C-4E2BD4E1E82C)]
-interface nsIDOMSVGFEDisplacementMapElement : nsIDOMSVGFilterPrimitiveStandardAttributes
-{
-  // Channel Selectors
-  const unsigned short SVG_CHANNEL_UNKNOWN = 0;
-  const unsigned short SVG_CHANNEL_R       = 1;
-  const unsigned short SVG_CHANNEL_G       = 2;
-  const unsigned short SVG_CHANNEL_B       = 3;
-  const unsigned short SVG_CHANNEL_A       = 4;
-
-  readonly attribute nsIDOMSVGAnimatedString      in1;
-  readonly attribute nsIDOMSVGAnimatedString      in2;
-  readonly attribute nsIDOMSVGAnimatedNumber      scale;
-  readonly attribute nsIDOMSVGAnimatedEnumeration xChannelSelector;
-  readonly attribute nsIDOMSVGAnimatedEnumeration yChannelSelector;
-};
diff --git a/dom/interfaces/svg/nsIDOMSVGURIReference.idl b/dom/interfaces/svg/nsIDOMSVGURIReference.idl
deleted file mode 100644
--- a/dom/interfaces/svg/nsIDOMSVGURIReference.idl
+++ /dev/null
@@ -1,15 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-interface nsIDOMSVGAnimatedString;
-
-[scriptable, uuid(8092b5f3-dc8a-459c-94f1-92f8011f2438)]
-interface nsIDOMSVGURIReference
-  : nsISupports
-{
-  readonly attribute nsIDOMSVGAnimatedString href;
-};
diff --git a/dom/interfaces/svg/nsIDOMSVGUnitTypes.idl b/dom/interfaces/svg/nsIDOMSVGUnitTypes.idl
deleted file mode 100644
--- a/dom/interfaces/svg/nsIDOMSVGUnitTypes.idl
+++ /dev/null
@@ -1,23 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "domstubs.idl"
-
-/**
- * The nsIDOMSVGUnitTypes interface is the interface to SVG unit types.
- *
- * For more information on this interface please see
- * http://www.w3.org/TR/SVG11/types.html
- *
- */
-
-[scriptable, uuid(154b572f-3d0b-49c0-8b5d-8864d05bd3d1)]
-interface nsIDOMSVGUnitTypes : nsISupports
-{
-  // Unit Types
-  const unsigned short SVG_UNIT_TYPE_UNKNOWN           = 0;
-  const unsigned short SVG_UNIT_TYPE_USERSPACEONUSE    = 1;
-  const unsigned short SVG_UNIT_TYPE_OBJECTBOUNDINGBOX = 2;
-};
diff --git a/dom/interfaces/xpath/nsIDOMXPathNamespace.idl b/dom/interfaces/xpath/nsIDOMXPathNamespace.idl
--- a/dom/interfaces/xpath/nsIDOMXPathNamespace.idl
+++ b/dom/interfaces/xpath/nsIDOMXPathNamespace.idl
@@ -4,16 +4,16 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /**
  * Corresponds to http://www.w3.org/TR/2002/WD-DOM-Level-3-XPath-20020208
  */
 
 #include "nsIDOMNode.idl"
 
-[scriptable, uuid(47836446-3c3d-440f-99f6-984d8a2f2e04)]
+[scriptable, uuid(558c2ab9-513e-43c2-afea-4930024b15b3)]
 interface nsIDOMXPathNamespace : nsIDOMNode
 {
   // XPathNodeType
   const unsigned short      XPATH_NAMESPACE_NODE           = 13;
 
   readonly attribute nsIDOMElement          ownerElement;
 };
diff --git a/dom/interfaces/xul/nsIDOMXULButtonElement.idl b/dom/interfaces/xul/nsIDOMXULButtonElement.idl
--- a/dom/interfaces/xul/nsIDOMXULButtonElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULButtonElement.idl
@@ -1,16 +1,16 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULLabeledControlEl.idl"
 
-[scriptable, uuid(A0308BD1-A6D7-4352-86F9-2BD4AEE2EAFC)]
+[scriptable, uuid(8eec22e8-91f4-44fc-9142-b4cd0f623076)]
 interface nsIDOMXULButtonElement : nsIDOMXULLabeledControlElement {
   const short CHECKSTATE_UNCHECKED = 0;
   const short CHECKSTATE_CHECKED = 1;
   const short CHECKSTATE_MIXED = 2;
 
   attribute DOMString type;
   attribute DOMString dlgType;
 
diff --git a/dom/interfaces/xul/nsIDOMXULCheckboxElement.idl b/dom/interfaces/xul/nsIDOMXULCheckboxElement.idl
--- a/dom/interfaces/xul/nsIDOMXULCheckboxElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULCheckboxElement.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMElement.idl"
 #include "nsIDOMXULLabeledControlEl.idl"
 
-[scriptable, uuid(A275393E-8402-46E1-8229-F1CE5B2E926C)]
+[scriptable, uuid(b0539219-67c8-47c1-934c-08040701b33b)]
 interface nsIDOMXULCheckboxElement : nsIDOMXULLabeledControlElement {
   const short CHECKSTATE_UNCHECKED = 0;
   const short CHECKSTATE_CHECKED = 1;
   const short CHECKSTATE_MIXED = 2;
 
   attribute boolean checked;
   attribute long checkState;
   attribute boolean autoCheck;
diff --git a/dom/interfaces/xul/nsIDOMXULContainerElement.idl b/dom/interfaces/xul/nsIDOMXULContainerElement.idl
--- a/dom/interfaces/xul/nsIDOMXULContainerElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULContainerElement.idl
@@ -1,26 +1,26 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULElement.idl"
 interface nsIDOMXULContainerElement;
 
-[scriptable, uuid(6B94FBAB-5171-432C-8E7A-6183C535E344)]
+[scriptable, uuid(0cedc92f-a0ab-4c4c-83e9-582607b8d7e2)]
 interface nsIDOMXULContainerItemElement : nsIDOMXULElement
 {
   /**
    * Returns the parent container if any.
    */
   readonly attribute nsIDOMXULContainerElement parentContainer;
 };
 
-[scriptable, uuid(40211F96-98A5-4DE5-BE0C-8CBF4CA4D615)]
+[scriptable, uuid(c0b1bfdd-6199-412d-af79-8d6524865a5b)]
 interface nsIDOMXULContainerElement : nsIDOMXULContainerItemElement
 {
   /**
    * Creates an item for the given label and value and appends it to the
    * container.
    *
    * @param aLabel - the label for the new item
    * @param aValue - the value of the new item
diff --git a/dom/interfaces/xul/nsIDOMXULControlElement.idl b/dom/interfaces/xul/nsIDOMXULControlElement.idl
--- a/dom/interfaces/xul/nsIDOMXULControlElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULControlElement.idl
@@ -3,17 +3,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMElement.idl"
 #include "nsIDOMXULElement.idl"
 
 interface nsIControllers;
 
-[scriptable, uuid(6E4ADF19-92D9-4866-8F09-9C71FD4AF430)]
+[scriptable, uuid(3b1bce24-c3ad-4568-8e10-85922b521e8b)]
 interface nsIDOMXULControlElement : nsIDOMXULElement {
   attribute boolean disabled;
   attribute long tabIndex;
   
 // XXX defined in XULElement, but should be defined here
 //  readonly attribute nsIControllers controllers;
   
 //  void focus();
diff --git a/dom/interfaces/xul/nsIDOMXULDescriptionElement.idl b/dom/interfaces/xul/nsIDOMXULDescriptionElement.idl
--- a/dom/interfaces/xul/nsIDOMXULDescriptionElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULDescriptionElement.idl
@@ -1,15 +1,15 @@
 
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULElement.idl"
 
-[scriptable, uuid(31063E54-678C-442C-B487-D87F4C3E4751)]
+[scriptable, uuid(c5e2a24f-3c35-40c0-baf1-c92ecd09d232)]
 interface nsIDOMXULDescriptionElement : nsIDOMXULElement {
   attribute boolean disabled;
   attribute boolean crop;
   attribute DOMString value;
 };
 
diff --git a/dom/interfaces/xul/nsIDOMXULDocument.idl b/dom/interfaces/xul/nsIDOMXULDocument.idl
--- a/dom/interfaces/xul/nsIDOMXULDocument.idl
+++ b/dom/interfaces/xul/nsIDOMXULDocument.idl
@@ -5,17 +5,17 @@
 
 #include "domstubs.idl"
 #include "nsIDOMDocument.idl"
 
 interface nsIDOMXULCommandDispatcher;
 interface nsIObserver;
 interface nsIBoxObject;
 
-[scriptable, uuid(9230f88f-a61f-4fc2-b0a3-79e65d58f94f)]
+[scriptable, uuid(7b188822-f3fc-42f2-93a9-7eee445e0108)]
 interface nsIDOMXULDocument : nsIDOMDocument
 {
   attribute nsIDOMNode                          popupNode;
 
   /**
    * These attributes correspond to trustedGetPopupNode().rangeOffset and
    * rangeParent. They will help you find where in the DOM the popup is
    * happening. Can be accessed from chrome only, and only during a popup
diff --git a/dom/interfaces/xul/nsIDOMXULElement.idl b/dom/interfaces/xul/nsIDOMXULElement.idl
--- a/dom/interfaces/xul/nsIDOMXULElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULElement.idl
@@ -7,17 +7,17 @@
 
 interface nsIRDFCompositeDataSource;
 interface nsIXULTemplateBuilder;
 interface nsIRDFResource;
 interface nsIControllers;
 interface nsIBoxObject;
 
 
-[scriptable, uuid(bece5b0b-6e59-4de5-98d0-088adfd1cadc)]
+[scriptable, uuid(5d9d2e4f-a748-44f0-99d1-406384efdc5c)]
 interface nsIDOMXULElement : nsIDOMElement
 {
   attribute DOMString                 className;
 
   // Layout properties
   attribute DOMString align;
   attribute DOMString dir;
   attribute DOMString flex;
diff --git a/dom/interfaces/xul/nsIDOMXULImageElement.idl b/dom/interfaces/xul/nsIDOMXULImageElement.idl
--- a/dom/interfaces/xul/nsIDOMXULImageElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULImageElement.idl
@@ -1,12 +1,12 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMElement.idl"
 #include "nsIDOMXULElement.idl"
 
-[scriptable, uuid(A21944EA-FB11-4B37-80ED-38C8D12D0649)]
+[scriptable, uuid(d7967c4e-60e1-486d-a730-c25b285f0ffa)]
 interface nsIDOMXULImageElement : nsIDOMXULElement {
   attribute DOMString src;
 };
 
diff --git a/dom/interfaces/xul/nsIDOMXULLabelElement.idl b/dom/interfaces/xul/nsIDOMXULLabelElement.idl
--- a/dom/interfaces/xul/nsIDOMXULLabelElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULLabelElement.idl
@@ -1,13 +1,13 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULDescriptionElement.idl"
 
-[scriptable, uuid(042FB07F-AFEB-454E-809C-532A5A8557D0)]
+[scriptable, uuid(6fe7161c-bab0-4232-9145-76d82480c1b0)]
 interface nsIDOMXULLabelElement : nsIDOMXULDescriptionElement {
   attribute DOMString accessKey;
   attribute DOMString control;
 };
 
diff --git a/dom/interfaces/xul/nsIDOMXULLabeledControlEl.idl b/dom/interfaces/xul/nsIDOMXULLabeledControlEl.idl
--- a/dom/interfaces/xul/nsIDOMXULLabeledControlEl.idl
+++ b/dom/interfaces/xul/nsIDOMXULLabeledControlEl.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMElement.idl"
 #include "nsIDOMXULControlElement.idl"
 
-[scriptable, uuid(DD80E029-5535-4418-B3A0-13CF6BD2AA6B)]
+[scriptable, uuid(eecd5462-3ead-4caa-9651-0c2b88b39a65)]
 interface nsIDOMXULLabeledControlElement : nsIDOMXULControlElement {
   attribute DOMString crop;
   attribute DOMString image;
   attribute DOMString label;
   attribute DOMString accessKey;
   attribute DOMString command;
 
 //  void doCommand();
diff --git a/dom/interfaces/xul/nsIDOMXULMenuListElement.idl b/dom/interfaces/xul/nsIDOMXULMenuListElement.idl
--- a/dom/interfaces/xul/nsIDOMXULMenuListElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULMenuListElement.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULSelectCntrlEl.idl"
 interface nsIDOMXULTextBoxElement;
 
-[scriptable, uuid(510561F2-7772-4DE3-934E-F4619509398B)]
+[scriptable, uuid(df76f885-717a-484b-81f9-76700a04b51d)]
 interface nsIDOMXULMenuListElement : nsIDOMXULSelectControlElement {
   attribute boolean editable;
   attribute boolean open;
   
   // label of selected option or value of textfield for editable menu lists
   readonly attribute DOMString label;
 
   attribute DOMString crop;
diff --git a/dom/interfaces/xul/nsIDOMXULMultSelectCntrlEl.idl b/dom/interfaces/xul/nsIDOMXULMultSelectCntrlEl.idl
--- a/dom/interfaces/xul/nsIDOMXULMultSelectCntrlEl.idl
+++ b/dom/interfaces/xul/nsIDOMXULMultSelectCntrlEl.idl
@@ -1,16 +1,16 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULSelectCntrlEl.idl"
 
-[scriptable, uuid(E3CD8269-9502-4E70-910C-0D6D71B22253)]
+[scriptable, uuid(16a38e07-405b-42a3-b45d-c78037757c01)]
 interface nsIDOMXULMultiSelectControlElement : nsIDOMXULSelectControlElement
 {
   attribute DOMString selType;
 
   attribute nsIDOMXULSelectControlItemElement currentItem;
   attribute long currentIndex;
 
   readonly attribute nsIDOMNodeList selectedItems;
diff --git a/dom/interfaces/xul/nsIDOMXULPopupElement.idl b/dom/interfaces/xul/nsIDOMXULPopupElement.idl
--- a/dom/interfaces/xul/nsIDOMXULPopupElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULPopupElement.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMElement.idl"
 #include "nsIDOMXULElement.idl"
 
-[scriptable, uuid(53E3087D-0D16-4F29-9412-EE9EC3F4AD25)]
+[scriptable, uuid(0037e541-09f8-475d-8274-ceff62332e6b)]
 interface nsIDOMXULPopupElement : nsIDOMXULElement {
   const unsigned short      BEFORE_START                   = 1;
   const unsigned short      BEFORE_END                     = 2;
   const unsigned short      AFTER_START                    = 3;
   const unsigned short      AFTER_END                      = 4;
   const unsigned short      START_BEFORE                   = 5;
   const unsigned short      START_AFTER                    = 6;
   const unsigned short      END_BEFORE                     = 7;
diff --git a/dom/interfaces/xul/nsIDOMXULSelectCntrlEl.idl b/dom/interfaces/xul/nsIDOMXULSelectCntrlEl.idl
--- a/dom/interfaces/xul/nsIDOMXULSelectCntrlEl.idl
+++ b/dom/interfaces/xul/nsIDOMXULSelectCntrlEl.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULControlElement.idl"
 interface nsIDOMXULSelectControlItemElement;
 
-[scriptable, uuid(5775F3E3-B6C1-4047-B59A-5775937D87F2)]
+[scriptable, uuid(f9cbf59c-0cdd-416e-a809-40da4a7a8cb5)]
 interface nsIDOMXULSelectControlElement : nsIDOMXULControlElement {
   attribute nsIDOMXULSelectControlItemElement selectedItem;
   attribute long selectedIndex;
 
   attribute DOMString value;
   
   nsIDOMXULSelectControlItemElement appendItem(in DOMString label, in DOMString value);
   nsIDOMXULSelectControlItemElement insertItemAt(in long index, in DOMString label, in DOMString value);
diff --git a/dom/interfaces/xul/nsIDOMXULSelectCntrlItemEl.idl b/dom/interfaces/xul/nsIDOMXULSelectCntrlItemEl.idl
--- a/dom/interfaces/xul/nsIDOMXULSelectCntrlItemEl.idl
+++ b/dom/interfaces/xul/nsIDOMXULSelectCntrlItemEl.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULElement.idl"
 interface nsIDOMXULSelectControlElement;
 
-[scriptable, uuid(6EFA5B50-4197-4015-BC0C-A61762FBDAF1)]
+[scriptable, uuid(85fa64de-91d9-4b2f-b9fb-28eb718ea436)]
 interface nsIDOMXULSelectControlItemElement : nsIDOMXULElement {
   attribute boolean disabled;
   attribute DOMString crop;
   attribute DOMString image;
   attribute DOMString label;
   attribute DOMString accessKey;
   attribute DOMString command;
   
diff --git a/dom/interfaces/xul/nsIDOMXULTextboxElement.idl b/dom/interfaces/xul/nsIDOMXULTextboxElement.idl
--- a/dom/interfaces/xul/nsIDOMXULTextboxElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULTextboxElement.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMXULLabeledControlEl.idl"
 interface nsIDOMHTMLInputElement;
 
-[scriptable, uuid(1CDD14AC-6707-43D8-86DE-791D21CDAFED)]
+[scriptable, uuid(5bab7935-6219-45f8-9f7c-54ac8e9b023b)]
 interface nsIDOMXULTextBoxElement : nsIDOMXULControlElement
 {
   // inputField may be any type of editable field, such as an
   // HTML <input type="text"> or <textarea>
   readonly attribute nsIDOMNode inputField;
 
   readonly attribute long textLength;
   attribute long maxLength;
diff --git a/dom/interfaces/xul/nsIDOMXULTreeElement.idl b/dom/interfaces/xul/nsIDOMXULTreeElement.idl
--- a/dom/interfaces/xul/nsIDOMXULTreeElement.idl
+++ b/dom/interfaces/xul/nsIDOMXULTreeElement.idl
@@ -9,17 +9,17 @@
 interface nsITreeColumns;
 interface nsITreeView;
 interface nsIDOMXULTextBoxElement;
 
 /**
  * @status UNDER_DEVELOPMENT
  */
 
-[scriptable, uuid(cba7143b-73fc-4974-b93d-7e3f6b18d645)]
+[scriptable, uuid(a3c573b8-8fb8-4cde-a47a-dca921eee94c)]
 interface nsIDOMXULTreeElement : nsIDOMXULElement
 {
 
   readonly attribute nsITreeColumns columns;
 
   attribute nsITreeView view;
 
   readonly attribute nsIDOMElement body;
diff --git a/dom/media/bridge/IPeerConnection.idl b/dom/media/bridge/IPeerConnection.idl
--- a/dom/media/bridge/IPeerConnection.idl
+++ b/dom/media/bridge/IPeerConnection.idl
@@ -19,36 +19,36 @@ interface IPeerConnectionManager : nsISu
 %}
 
 /* Do not confuse with nsIDOMRTCPeerConnection. This interface is purely for
  * communication between the PeerConnection JS DOM binding and the C++
  * implementation in SIPCC.
  *
  * See media/webrtc/signaling/include/PeerConnectionImpl.h
  */
-[scriptable, uuid(e61821ba-7772-4973-b583-1715e4bbaeed)]
+[scriptable, uuid(85ba28da-53d0-401d-afed-9cad69f727ff)]
 interface IPeerConnectionObserver : nsISupports
 {
   /* Constants */
   const long kReadyState = 0x1;
   const long kIceState = 0x2;
   const long kSdpState = 0x3;
   const long kSipccState = 0x4;
 
   /* JSEP callbacks */
   void onCreateOfferSuccess(in string offer);
-  void onCreateOfferError(in unsigned long code);
+  void onCreateOfferError(in unsigned long name, in string message);
   void onCreateAnswerSuccess(in string answer);
-  void onCreateAnswerError(in unsigned long code);
-  void onSetLocalDescriptionSuccess(in unsigned long code);
-  void onSetRemoteDescriptionSuccess(in unsigned long code);
-  void onSetLocalDescriptionError(in unsigned long code);
-  void onSetRemoteDescriptionError(in unsigned long code);
-  void onAddIceCandidateSuccess(in unsigned long code);
-  void onAddIceCandidateError(in unsigned long code);
+  void onCreateAnswerError(in unsigned long name, in string message);
+  void onSetLocalDescriptionSuccess();
+  void onSetRemoteDescriptionSuccess();
+  void onSetLocalDescriptionError(in unsigned long name, in string message);
+  void onSetRemoteDescriptionError(in unsigned long name, in string message);
+  void onAddIceCandidateSuccess();
+  void onAddIceCandidateError(in unsigned long name, in string message);
 
   /* Data channel callbacks */
   void notifyDataChannel(in nsIDOMDataChannel channel);
   void notifyConnection();
   void notifyClosedConnection();
 
   /* Notification of one of several types of state changed */
   void onStateChange(in unsigned long state);
@@ -62,38 +62,58 @@ interface IPeerConnectionObserver : nsIS
   /* When SDP is parsed and a candidate line is found this method is called.
    * It should hook back into the media transport to notify it of ICE candidates
    * listed in the SDP PeerConnectionImpl does not parse ICE candidates, just
    * pulls them out of the SDP.
    */
   void foundIceCandidate(in string candidate);
 };
 
-[scriptable, uuid(cc8327f5-66f4-42f4-820d-9a9db0474b6e)]
+[scriptable, uuid(121ff773-949b-48b9-83b2-9a4ef908833c)]
 interface IPeerConnection : nsISupports
 {
   const unsigned long kHintAudio = 0x00000001;
   const unsigned long kHintVideo = 0x00000002;
 
   const long kActionNone = -1;
   const long kActionOffer = 0;
   const long kActionAnswer = 1;
   const long kActionPRAnswer = 2;
 
   const long kIceGathering = 0;
   const long kIceWaiting = 1;
   const long kIceChecking = 2;
   const long kIceConnected = 3;
   const long kIceFailed = 4;
 
+  /* for readyState on Peer Connection */
+  const long kNew = 0;
+  const long kNegotiating = 1;
+  const long kActive = 2;
+  const long kClosing = 3;
+  const long kClosed = 4;
+
   /* for 'type' in DataChannelInit dictionary */
   const unsigned short kDataChannelReliable = 0;
   const unsigned short kDataChannelPartialReliableRexmit = 1;
   const unsigned short kDataChannelPartialReliableTimed = 2;
 
+  /* Constants for 'name' in error callbacks */
+  const unsigned long kNoError                          = 0; // Test driver only
+  const unsigned long kInvalidConstraintsType           = 1;
+  const unsigned long kInvalidCandidateType             = 2;
+  const unsigned long kInvalidMediastreamTrack          = 3;
+  const unsigned long kInvalidState                     = 4;
+  const unsigned long kInvalidSessionDescription        = 5;
+  const unsigned long kIncompatibleSessionDescription   = 6;
+  const unsigned long kIncompatibleConstraints          = 7;
+  const unsigned long kIncompatibleMediaStreamTrack     = 8;
+  const unsigned long kInternalError                    = 9;
+  const unsigned long kMaxErrorType                     = 9; // Same as final error
+
   /* Must be called first. Observer events will be dispatched on the thread provided */
   [implicit_jscontext] void initialize(in IPeerConnectionObserver observer, in nsIDOMWindow window,
                   [optional] in jsval iceServers,
                   [optional] in nsIThread thread);
 
   /* JSEP calls */
   [implicit_jscontext] void createOffer(in jsval constraints);
   [implicit_jscontext] void createAnswer(in jsval constraints);
@@ -122,14 +142,15 @@ interface IPeerConnection : nsISupports
   readonly attribute string localDescription;
   readonly attribute string remoteDescription;
 
   readonly attribute unsigned long iceState;
   readonly attribute unsigned long readyState;
   readonly attribute unsigned long sipccState;
 
   /* Data channels */
-  nsIDOMDataChannel createDataChannel(in ACString label,
+  nsIDOMDataChannel createDataChannel(in ACString label, in ACString protocol,
     in unsigned short type, in boolean outOfOrderAllowed,
-    in unsigned short maxTime, in unsigned short maxNum);
+    in unsigned short maxTime, in unsigned short maxNum,
+    in boolean externalNegotiated, in unsigned short stream);
   void connectDataConnection(in unsigned short localport,
     in unsigned short remoteport, in unsigned short numstreams);
 };
diff --git a/dom/media/nsIDOMRTCPeerConnection.idl b/dom/media/nsIDOMRTCPeerConnection.idl
--- a/dom/media/nsIDOMRTCPeerConnection.idl
+++ b/dom/media/nsIDOMRTCPeerConnection.idl
@@ -30,42 +30,42 @@ interface nsIDOMRTCSessionDescription : 
 interface nsIDOMRTCIceCandidate : nsISupports
 {
   attribute DOMString candidate;
   attribute DOMString sdpMid;
   attribute unsigned short sdpMLineIndex;
 };
 
 /* See http://dev.w3.org/2011/webrtc/editor/webrtc.html */
-[scriptable, uuid(f888648c-5e6b-4af9-91ad-a911e53d7a39)]
+[scriptable, uuid(474074ab-11f9-4933-a200-8ea1a5f84e4c)]
 interface nsIDOMRTCPeerConnection : nsISupports
 {
   void createOffer(in RTCPeerConnectionCallback successCallback,
     [optional] in RTCPeerConnectionCallback failureCallback,
     [optional] in jsval constraints);
 
   void createAnswer(in RTCPeerConnectionCallback successCallback,
     [optional] in RTCPeerConnectionCallback failureCallback,
     [optional] in jsval constraints,
     [optional] in bool createProvisionalAnswer);
 
   void setLocalDescription(in nsIDOMRTCSessionDescription desc,
-    [optional] in RTCPeerConnectionCallback successCallback,
+    [optional] in RTCPeerConnectionCallbackVoid successCallback,
     [optional] in RTCPeerConnectionCallback failureCallback);
 
   void setRemoteDescription(in nsIDOMRTCSessionDescription desc,
-    [optional] in RTCPeerConnectionCallback successCallback,
+    [optional] in RTCPeerConnectionCallbackVoid successCallback,
     [optional] in RTCPeerConnectionCallback failureCallback);
 
   void updateIce([optional] in jsval configuration,
     [optional] in jsval constraints,
     [optional] in bool restart);
 
   void addIceCandidate(in nsIDOMRTCIceCandidate candidate,
-    [optional] in RTCPeerConnectionCallback successCallback,
+    [optional] in RTCPeerConnectionCallbackVoid successCallback,
     [optional] in RTCPeerConnectionCallback failureCallback);
 
   void addStream(in nsIDOMMediaStream stream,
     [optional] in jsval constraints);
 
   void removeStream(in nsIDOMMediaStream stream);
   void close();
 
diff --git a/dom/mms/interfaces/nsIMmsService.idl b/dom/mms/interfaces/nsIMmsService.idl
--- a/dom/mms/interfaces/nsIMmsService.idl
+++ b/dom/mms/interfaces/nsIMmsService.idl
@@ -1,11 +1,18 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
+interface nsIMobileMessageCallback;
+interface nsIDOMBlob;
 
-[scriptable, uuid(217ddd76-75db-4210-955d-8806cd8d87f9)]
+%{C++
+#define RIL_MMSSERVICE_CONTRACTID "@mozilla.org/mms/rilmmsservice;1"
+%}
+
+[scriptable, uuid(3ec33286-8559-11e2-9f38-e76b58650568)]
 interface nsIMmsService : nsISupports
 {
-  boolean        hasSupport();
+  void send(in jsval parameters /* MmsParameters */,
+            in nsIMobileMessageCallback request);
 };
diff --git a/dom/sms/interfaces/nsIDOMSmsManager.idl b/dom/mobilemessage/interfaces/nsIDOMMobileMessageManager.idl
rename from dom/sms/interfaces/nsIDOMSmsManager.idl
rename to dom/mobilemessage/interfaces/nsIDOMMobileMessageManager.idl
--- a/dom/sms/interfaces/nsIDOMSmsManager.idl
+++ b/dom/mobilemessage/interfaces/nsIDOMMobileMessageManager.idl
@@ -3,37 +3,49 @@
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMEventListener;
 interface nsIDOMMozSmsRequest;
 interface nsIDOMMozSmsFilter;
 interface nsIDOMMozSmsSegmentInfo;
+interface nsIDOMDOMRequest;
+interface nsIDOMBlob;
 
-[scriptable, builtinclass, uuid(2bdb02e7-ec3a-47a9-885c-0ab514566801)]
-interface nsIDOMMozSmsManager : nsIDOMEventTarget
+dictionary MmsParameters
+{
+  jsval      receivers; // DOMString[]
+  DOMString? subject;
+  DOMString? smil;
+  jsval      attachments; // MmsAttachment[]
+};
+
+[scriptable, builtinclass, uuid(645161ca-b009-461b-bd13-45c3075cdfba)]
+interface nsIDOMMozMobileMessageManager : nsIDOMEventTarget
 {
   nsIDOMMozSmsSegmentInfo getSegmentInfoForText(in DOMString text);
 
   // The first parameter can be either a DOMString (only one number) or an array
   // of DOMStrings.
   // The method returns a SmsRequest object if one number has been passed.
   // An array of SmsRequest objects otherwise.
   jsval send(in jsval number, in DOMString message);
 
+  nsIDOMDOMRequest sendMMS(in jsval parameters /* MmsParameters */);
+
   [binaryname(GetMessageMoz)]
-  nsIDOMMozSmsRequest getMessage(in long id);
+  nsIDOMDOMRequest getMessage(in long id);
 
-  // The parameter can be either a message id or a SmsMessage.
-  nsIDOMMozSmsRequest delete(in jsval param);
+  // The parameter can be either a message id or a nsIDOMMoz{Mms,Sms}Message.
+  nsIDOMDOMRequest delete(in jsval param);
 
   nsIDOMMozSmsRequest getMessages(in nsIDOMMozSmsFilter filter, in boolean reverse);
 
-  nsIDOMMozSmsRequest markMessageRead(in long id, in boolean aValue);
+  nsIDOMDOMRequest markMessageRead(in long id, in boolean aValue);
 
   nsIDOMMozSmsRequest getThreadList();
 
   [implicit_jscontext] attribute jsval onreceived;
   [implicit_jscontext] attribute jsval onsending;
   [implicit_jscontext] attribute jsval onsent;
   [implicit_jscontext] attribute jsval onfailed;
   [implicit_jscontext] attribute jsval ondeliverysuccess;
diff --git a/dom/mobilemessage/interfaces/nsIDOMMozMmsEvent.idl b/dom/mobilemessage/interfaces/nsIDOMMozMmsEvent.idl
new file mode 100644
--- /dev/null
+++ b/dom/mobilemessage/interfaces/nsIDOMMozMmsEvent.idl
@@ -0,0 +1,23 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsIDOMEvent.idl"
+
+interface nsIDOMMozMmsMessage;
+
+[scriptable, builtinclass, uuid(b33cc0f2-8886-11e2-9433-eff9a8af9a70)]
+interface nsIDOMMozMmsEvent : nsIDOMEvent
+{
+  readonly attribute nsIDOMMozMmsMessage message;
+
+  [noscript] void initMozMmsEvent(in DOMString aType,
+                                  in boolean aCanBubble,
+                                  in boolean aCancelable,
+                                  in nsIDOMMozMmsMessage aMessage);
+};
+
+dictionary MozMmsEventInit : EventInit
+{
+  nsIDOMMozMmsMessage message;
+};
diff --git a/dom/mobilemessage/interfaces/nsIDOMMozMmsMessage.idl b/dom/mobilemessage/interfaces/nsIDOMMozMmsMessage.idl
new file mode 100644
--- /dev/null
+++ b/dom/mobilemessage/interfaces/nsIDOMMozMmsMessage.idl
@@ -0,0 +1,48 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIDOMBlob;
+
+dictionary MmsAttachment
+{
+  DOMString? id;
+  DOMString? location;
+  nsIDOMBlob content;
+};
+
+[scriptable, builtinclass, uuid(c9683d00-88a6-11e2-85cc-57a33dfbea3b)]
+interface nsIDOMMozMmsMessage : nsISupports
+{
+  /**
+   * |type| is always "mms".
+   */
+  readonly attribute DOMString type;
+
+  readonly attribute long      id;
+
+  /**
+   * Should be "not-downloaded", "received", "sending", "sent" or "error".
+   */
+  readonly attribute DOMString delivery;
+
+  [implicit_jscontext]
+  readonly attribute jsval     deliveryStatus; // DOMString[]
+
+  readonly attribute DOMString sender;
+
+  [implicit_jscontext]
+  readonly attribute jsval     receivers;      // DOMString[]
+
+  [implicit_jscontext]
+  readonly attribute jsval     timestamp;      // Date
+
+  readonly attribute boolean   read;
+  readonly attribute DOMString subject;
+  readonly attribute DOMString smil;
+
+  [implicit_jscontext]
+  readonly attribute jsval     attachments;    // MmsAttachment[]
+};
\ No newline at end of file
diff --git a/dom/sms/interfaces/nsIDOMMozSmsEvent.idl b/dom/mobilemessage/interfaces/nsIDOMMozSmsEvent.idl
rename from dom/sms/interfaces/nsIDOMMozSmsEvent.idl
rename to dom/mobilemessage/interfaces/nsIDOMMozSmsEvent.idl
diff --git a/dom/sms/interfaces/nsIDOMMozSmsMessage.idl b/dom/mobilemessage/interfaces/nsIDOMMozSmsMessage.idl
rename from dom/sms/interfaces/nsIDOMMozSmsMessage.idl
rename to dom/mobilemessage/interfaces/nsIDOMMozSmsMessage.idl
--- a/dom/sms/interfaces/nsIDOMMozSmsMessage.idl
+++ b/dom/mobilemessage/interfaces/nsIDOMMozSmsMessage.idl
@@ -1,17 +1,22 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
-[scriptable, builtinclass, uuid(59fc5ea8-33fe-40ba-890b-b9abaeb5ac26)]
+[scriptable, builtinclass, uuid(d4d848c4-88a6-11e2-b6da-6f252cbfa716)]
 interface nsIDOMMozSmsMessage : nsISupports
 {
+  /**
+   * |type| is always "sms".
+   */
+  readonly attribute DOMString type;
+
   readonly attribute long      id;
 
   /**
    * Should be "received", "sending", "sent" or "error".
    */
   readonly attribute DOMString delivery;
 
   /**
diff --git a/dom/sms/interfaces/nsIDOMNavigatorSms.idl b/dom/mobilemessage/interfaces/nsIDOMNavigatorMobileMessage.idl
rename from dom/sms/interfaces/nsIDOMNavigatorSms.idl
rename to dom/mobilemessage/interfaces/nsIDOMNavigatorMobileMessage.idl
--- a/dom/sms/interfaces/nsIDOMNavigatorSms.idl
+++ b/dom/mobilemessage/interfaces/nsIDOMNavigatorMobileMessage.idl
@@ -1,13 +1,13 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
-interface nsIDOMMozSmsManager;
+interface nsIDOMMozMobileMessageManager;
 
-[scriptable, uuid(7752e51c-68ba-48c7-9fb6-32e5fbdb4599)]
-interface nsIDOMMozNavigatorSms : nsISupports
+[scriptable, uuid(baefbb1a-7fe4-11e2-abff-cf1a90f9139f)]
+interface nsIDOMMozNavigatorMobileMessage : nsISupports
 {
-  readonly attribute nsIDOMMozSmsManager mozSms;
+  readonly attribute nsIDOMMozMobileMessageManager mozMobileMessage;
 };
diff --git a/dom/sms/interfaces/nsIDOMNavigatorSms.idl b/dom/mobilemessage/interfaces/nsIDOMNavigatorSms.idl
copy from dom/sms/interfaces/nsIDOMNavigatorSms.idl
copy to dom/mobilemessage/interfaces/nsIDOMNavigatorSms.idl
diff --git a/dom/sms/interfaces/nsIDOMSmsCursor.idl b/dom/mobilemessage/interfaces/nsIDOMSmsCursor.idl
rename from dom/sms/interfaces/nsIDOMSmsCursor.idl
rename to dom/mobilemessage/interfaces/nsIDOMSmsCursor.idl
diff --git a/dom/sms/interfaces/nsIDOMSmsFilter.idl b/dom/mobilemessage/interfaces/nsIDOMSmsFilter.idl
rename from dom/sms/interfaces/nsIDOMSmsFilter.idl
rename to dom/mobilemessage/interfaces/nsIDOMSmsFilter.idl
diff --git a/dom/sms/interfaces/nsIDOMSmsManager.idl b/dom/mobilemessage/interfaces/nsIDOMSmsManager.idl
copy from dom/sms/interfaces/nsIDOMSmsManager.idl
copy to dom/mobilemessage/interfaces/nsIDOMSmsManager.idl
--- a/dom/sms/interfaces/nsIDOMSmsManager.idl
+++ b/dom/mobilemessage/interfaces/nsIDOMSmsManager.idl
@@ -4,17 +4,17 @@
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMEventListener;
 interface nsIDOMMozSmsRequest;
 interface nsIDOMMozSmsFilter;
 interface nsIDOMMozSmsSegmentInfo;
 
-[scriptable, builtinclass, uuid(2bdb02e7-ec3a-47a9-885c-0ab514566801)]
+[scriptable, builtinclass, uuid(9bc1d6fc-6b53-48f6-99e8-793e746e5dbb)]
 interface nsIDOMMozSmsManager : nsIDOMEventTarget
 {
   nsIDOMMozSmsSegmentInfo getSegmentInfoForText(in DOMString text);
 
   // The first parameter can be either a DOMString (only one number) or an array
   // of DOMStrings.
   // The method returns a SmsRequest object if one number has been passed.
   // An array of SmsRequest objects otherwise.
diff --git a/dom/sms/interfaces/nsIDOMSmsRequest.idl b/dom/mobilemessage/interfaces/nsIDOMSmsRequest.idl
rename from dom/sms/interfaces/nsIDOMSmsRequest.idl
rename to dom/mobilemessage/interfaces/nsIDOMSmsRequest.idl
--- a/dom/sms/interfaces/nsIDOMSmsRequest.idl
+++ b/dom/mobilemessage/interfaces/nsIDOMSmsRequest.idl
@@ -1,10 +1,10 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMDOMRequest.idl"
 
-[scriptable, builtinclass, uuid(ae6acad4-3174-44d6-a491-9ff94ab847c2)]
+[scriptable, builtinclass, uuid(d77cafb5-7a91-4631-9597-5e4dcc9d90a5)]
 interface nsIDOMMozSmsRequest : nsIDOMDOMRequest
 {
 };
diff --git a/dom/sms/interfaces/nsIDOMSmsSegmentInfo.idl b/dom/mobilemessage/interfaces/nsIDOMSmsSegmentInfo.idl
rename from dom/sms/interfaces/nsIDOMSmsSegmentInfo.idl
rename to dom/mobilemessage/interfaces/nsIDOMSmsSegmentInfo.idl
diff --git a/dom/sms/interfaces/nsISmsRequest.idl b/dom/mobilemessage/interfaces/nsIMobileMessageCallback.idl
rename from dom/sms/interfaces/nsISmsRequest.idl
rename to dom/mobilemessage/interfaces/nsIMobileMessageCallback.idl
--- a/dom/sms/interfaces/nsISmsRequest.idl
+++ b/dom/mobilemessage/interfaces/nsIMobileMessageCallback.idl
@@ -1,51 +1,58 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
-interface nsIDOMMozSmsMessage;
-
 dictionary SmsThreadListItem
 {
   DOMString senderOrReceiver;
   unsigned long long timestamp;
   DOMString body;
   unsigned long long unreadCount;
 };
 
-[scriptable, builtinclass, uuid(82a6d16d-cf33-4745-8662-8b5d441f512f)]
-interface nsISmsRequest : nsISupports
+[scriptable, builtinclass, uuid(edb1de12-8d58-11e2-b382-7bf132b20cb2)]
+interface nsIMobileMessageCallback : nsISupports
 {
   /**
    * All SMS related errors that could apply to SmsRequest objects.
    * Make sure to keep this list in sync with the list in:
-   * embedding/android/GeckoSmsManager.java
+   * mobile/android/GeckoSmsManager.java
    */
   const unsigned short SUCCESS_NO_ERROR = 0;
   const unsigned short NO_SIGNAL_ERROR  = 1;
   const unsigned short NOT_FOUND_ERROR  = 2;
   const unsigned short UNKNOWN_ERROR    = 3;
   const unsigned short INTERNAL_ERROR   = 4;
 
-  void notifyMessageSent(in nsIDOMMozSmsMessage message);
+  /**
+   * |message| can be nsIDOMMoz{Mms,Sms}Message.
+   */
+  void notifyMessageSent(in nsISupports message);
   void notifySendMessageFailed(in long error);
 
-  void notifyMessageGot(in nsIDOMMozSmsMessage message);
+  /**
+   * |message| can be nsIDOMMoz{Mms,Sms}Message.
+   */
+  void notifyMessageGot(in nsISupports message);
   void notifyGetMessageFailed(in long error);
 
   void notifyMessageDeleted(in boolean deleted);
   void notifyDeleteMessageFailed(in long error);
 
+  /**
+   * |message| can be nsIDOMMoz{Mms,Sms}Message.
+   */
   void notifyMessageListCreated(in long listId,
-                                in nsIDOMMozSmsMessage message);
+                                in nsISupports message);
   void notifyReadMessageListFailed(in long error);
-  void notifyNextMessageInListGot(in nsIDOMMozSmsMessage message);
+  void notifyNextMessageInListGot(in nsISupports message);
   void notifyNoMessageInList();
 
   void notifyMessageMarkedRead(in boolean read);
   void notifyMarkMessageReadFailed(in long error);
 
   [implicit_jscontext]
   void notifyThreadList(in jsval threadList);
   void notifyThreadListFailed(in long error);
diff --git a/dom/mobilemessage/interfaces/nsIMobileMessageDatabaseService.idl b/dom/mobilemessage/interfaces/nsIMobileMessageDatabaseService.idl
--- a/dom/mobilemessage/interfaces/nsIMobileMessageDatabaseService.idl
+++ b/dom/mobilemessage/interfaces/nsIMobileMessageDatabaseService.idl
@@ -7,23 +7,35 @@
 %{C++
 #define MOBILE_MESSAGE_DATABASE_SERVICE_CID \
 { 0x0d84b9c2, 0x8f76, 0x4ba4,    \
 { 0xa5, 0xcd, 0xdb, 0xfb, 0x01, 0xdf, 0xda, 0x99 } }
 #define MOBILE_MESSAGE_DATABASE_SERVICE_CONTRACTID "@mozilla.org/mobilemessage/mobilemessagedatabaseservice;1"
 %}
 
 interface nsIDOMMozSmsFilter;
-interface nsISmsRequest;
+interface nsIMobileMessageCallback;
 
-[scriptable, uuid(ce9232ca-6a08-11e2-b971-c795004622e7)]
+[scriptable, uuid(4000064a-86d2-11e2-b4a6-ef0f30bd1e59)]
 interface nsIMobileMessageDatabaseService : nsISupports
 {
   [binaryname(GetMessageMoz)]
-  void getMessage(in long messageId, in nsISmsRequest request);
-  void deleteMessage(in long messageId, in nsISmsRequest request);
-  void createMessageList(in nsIDOMMozSmsFilter filter, in boolean reverse, in nsISmsRequest request);
-  void getNextMessageInList(in long listId, in nsISmsRequest request);
+  void getMessage(in long messageId,
+                  in nsIMobileMessageCallback request);
+
+  void deleteMessage(in long messageId,
+                     in nsIMobileMessageCallback request);
+
+  void createMessageList(in nsIDOMMozSmsFilter filter,
+                         in boolean reverse,
+                         in nsIMobileMessageCallback request);
+
+  void getNextMessageInList(in long listId,
+                            in nsIMobileMessageCallback request);
+
   void clearMessageList(in long listId);
-  void markMessageRead(in long messageId, in boolean value, in nsISmsRequest request);
 
-  void getThreadList(in nsISmsRequest request);
+  void markMessageRead(in long messageId,
+                       in boolean value,
+                       in nsIMobileMessageCallback request);
+
+  void getThreadList(in nsIMobileMessageCallback request);
 };
diff --git a/dom/mobilemessage/interfaces/nsIMobileMessageService.idl b/dom/mobilemessage/interfaces/nsIMobileMessageService.idl
new file mode 100644
--- /dev/null
+++ b/dom/mobilemessage/interfaces/nsIMobileMessageService.idl
@@ -0,0 +1,45 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIDOMMozSmsMessage;
+interface nsIDOMMozMmsMessage;
+interface nsIDOMMozSmsSegmentInfo;
+
+%{C++
+#define MOBILE_MESSAGE_SERVICE_CID { 0x829c1dd6, 0x0466, 0x4591, { 0x83, 0x6f, 0xb8, 0xf6, 0xfd, 0x1f, 0x7b, 0xa5 } }
+#define MOBILE_MESSAGE_SERVICE_CONTRACTID "@mozilla.org/mobilemessage/mobilemessageservice;1"
+%}
+
+[scriptable, builtinclass, uuid(4cbc9594-84c3-11e2-a274-ebada93fa6cd)]
+interface nsIMobileMessageService : nsISupports
+{
+  [implicit_jscontext]
+  nsIDOMMozSmsMessage createSmsMessage(in long      id,
+                                       in DOMString delivery,
+                                       in DOMString deliveryStatus,
+                                       in DOMString sender,
+                                       in DOMString receiver,
+                                       in DOMString body,
+                                       in DOMString messageClass,
+                                       in jsval     timestamp,
+                                       in bool      read);
+
+  [implicit_jscontext]
+  nsIDOMMozMmsMessage createMmsMessage(in long      id,
+                                       in DOMString delivery,
+                                       in jsval     deliveryStatus,
+                                       in DOMString sender,
+                                       in jsval     receivers,
+                                       in jsval     timestamp,
+                                       in boolean   read,
+                                       in DOMString subject,
+                                       in DOMString smil,
+                                       in jsval     attachments);
+
+  nsIDOMMozSmsSegmentInfo createSmsSegmentInfo(in long segments,
+                                               in long charsPerSegment,
+                                               in long charsAvailableInLastSegment);
+};
diff --git a/dom/mobilemessage/interfaces/nsIRilMobileMessageDatabaseService.idl b/dom/mobilemessage/interfaces/nsIRilMobileMessageDatabaseService.idl
--- a/dom/mobilemessage/interfaces/nsIRilMobileMessageDatabaseService.idl
+++ b/dom/mobilemessage/interfaces/nsIRilMobileMessageDatabaseService.idl
@@ -1,33 +1,68 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
+#include "domstubs.idl"
 #include "nsISupports.idl"
 #include "nsIMobileMessageDatabaseService.idl"
 
-interface nsIDOMMozSmsMessage;
-
-[scriptable, function, uuid(9cd80750-6a08-11e2-ac93-bf895e53f40e)]
+[scriptable, function, uuid(92986322-8d56-11e2-8816-73a531c493c2)]
 interface nsIRilMobileMessageDatabaseCallback : nsISupports
 {
-  void notify(in nsresult aRv, in nsIDOMMozSmsMessage aSms);
+  /**
+   * |aDomMessage|: the nsIDOMMoz{Mms,Sms}Message
+   */
+  void notify(in nsresult aRv, in nsISupports aDomMessage);
 };
 
-[scriptable, uuid(89528354-6a08-11e2-8243-af4cf90404a9)]
+[scriptable, uuid(a31b1716-8631-11e2-afaa-2fbd087f426e)]
 interface nsIRilMobileMessageDatabaseService : nsIMobileMessageDatabaseService
 {
-  long saveReceivedMessage(in DOMString aSender,
-                           in DOMString aBody,
-                           in DOMString aMessageClass,
-                           in unsigned long long aDate,
+  /**
+   * |aMessage| Object: should contain the following properties for internal use:
+   *   - |type| DOMString: "sms" or "mms"
+   *   - |sender| DOMString: the phone number of sender
+   *   - |timestamp| Number: the timestamp of received message
+   *
+   *   - If |type| == "sms", we also need:
+   *     - |messageClass| DOMString: the message class of received message
+   *
+   *   - If |type| == "mms", we also need:
+   *     - |delivery| DOMString: the delivery state of received message
+   *     - |deliveryStatus| DOMString Array: the delivery status of received message
+   *     - |receivers| DOMString Array: the phone numbers of receivers
+   *
+   * Note: |deliveryStatus| should only contain single string to specify
+   *       the delivery status of MMS message for the phone owner self.
+   */
+  long saveReceivedMessage(in jsval aMessage,
                 [optional] in nsIRilMobileMessageDatabaseCallback aCallback);
-  long saveSendingMessage(in DOMString aReceiver,
-                          in DOMString aBody,
-                          in DOMString aDeliveryStatus,
-                          in unsigned long long aDate,
+
+  /**
+   * |aMessage| Object: should contain the following properties for internal use:
+   *   - |type| DOMString: "sms" or "mms"
+   *   - |timestamp| Number: the timestamp of sending message
+   *   - |deliveryStatusRequested| Bool: true when the delivery report is requested.
+   *
+   *   - If |type| == "sms", we also need:
+   *     - |receiver| DOMString: the phone number of receiver
+   *
+   *   - If |type| == "mms", we also need:
+   *     - |receivers| DOMString Array: the phone numbers of receivers
+   */
+  long saveSendingMessage(in jsval aMessage,
                [optional] in nsIRilMobileMessageDatabaseCallback aCallback);
+
+  /**
+   * |aMessageId| Number: the message's DB record ID.
+   * |aReceiver| DOMString: the phone number of receiver (for MMS; can be null).
+   * |aDelivery| DOMString: the new delivery value to update (can be null).
+   * |aDeliveryStatus| DOMString: the new delivery status to update (can be null).
+   * |aCallback| nsIRilMobileMessageDatabaseCallback: an optional callback.
+   */
   void setMessageDelivery(in long aMessageId,
+                          in DOMString aReceiver,
                           in DOMString aDelivery,
                           in DOMString aDeliveryStatus,
                [optional] in nsIRilMobileMessageDatabaseCallback aCallback);
 };
diff --git a/dom/sms/interfaces/nsISmsService.idl b/dom/mobilemessage/interfaces/nsISmsService.idl
rename from dom/sms/interfaces/nsISmsService.idl
rename to dom/mobilemessage/interfaces/nsISmsService.idl
--- a/dom/sms/interfaces/nsISmsService.idl
+++ b/dom/mobilemessage/interfaces/nsISmsService.idl
@@ -1,41 +1,26 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIDOMMozSmsMessage;
 interface nsIDOMMozSmsSegmentInfo;
-interface nsISmsRequest;
+interface nsIMobileMessageCallback;
 
 %{C++
 #define SMS_SERVICE_CID { 0xbada3cb8, 0xa568, 0x4dff, { 0xb5, 0x43, 0x52, 0xbb, 0xb3, 0x14, 0x31, 0x21 } }
 #define SMS_SERVICE_CONTRACTID "@mozilla.org/sms/smsservice;1"
 %}
 
-[scriptable, builtinclass, uuid(4310bdb5-eefa-4f70-965a-74041228ab26)]
+[scriptable, builtinclass, uuid(c4b2ed2a-8714-11e2-bd2b-13f1a0759342)]
 interface nsISmsService : nsISupports
 {
   boolean hasSupport();
 
   nsIDOMMozSmsSegmentInfo getSegmentInfoForText(in DOMString text);
 
   void send(in DOMString number,
             in DOMString message,
-            in nsISmsRequest request);
-
-  [implicit_jscontext]
-  nsIDOMMozSmsMessage createSmsMessage(in long      id,
-                                       in DOMString delivery,
-                                       in DOMString deliveryStatus,
-                                       in DOMString sender,
-                                       in DOMString receiver,
-                                       in DOMString body,
-                                       in DOMString messageClass,
-                                       in jsval     timestamp,
-                                       in bool      read);
-
-  nsIDOMMozSmsSegmentInfo createSmsSegmentInfo(in long segments,
-                                               in long charsPerSegment,
-                                               in long charsAvailableInLastSegment);
+            in nsIMobileMessageCallback request);
 };
diff --git a/dom/network/interfaces/nsIDOMMobileConnection.idl b/dom/network/interfaces/nsIDOMMobileConnection.idl
--- a/dom/network/interfaces/nsIDOMMobileConnection.idl
+++ b/dom/network/interfaces/nsIDOMMobileConnection.idl
@@ -8,34 +8,34 @@ interface nsIDOMEventListener;
 interface nsIDOMDOMRequest;
 interface nsIDOMMozMobileICCInfo;
 interface nsIDOMMozMobileConnectionInfo;
 interface nsIDOMMozMobileNetworkInfo;
 interface nsIDOMMozMobileCellInfo;
 interface nsIDOMMozIccManager;
 interface nsIDOMMozMobileCFInfo;
 
-[scriptable, builtinclass, uuid(4175a903-61e6-4fa7-af0d-1e41632ee2dd)]
+[scriptable, builtinclass, uuid(2065b3c3-e876-4be1-b373-428ee254a63e)]
 interface nsIDOMMozMobileConnection : nsIDOMEventTarget
 {
   const long ICC_SERVICE_CLASS_VOICE = (1 << 0);
   const long ICC_SERVICE_CLASS_DATA = (1 << 1);
   const long ICC_SERVICE_CLASS_FAX = (1 << 2);
   const long ICC_SERVICE_CLASS_SMS = (1 << 3);
   const long ICC_SERVICE_CLASS_DATA_SYNC = (1 << 4);
   const long ICC_SERVICE_CLASS_DATA_ASYNC = (1 << 5);
   const long ICC_SERVICE_CLASS_PACKET = (1 << 6);
   const long ICC_SERVICE_CLASS_PAD = (1 << 7);
   const long ICC_SERVICE_CLASS_MAX = (1 << 7);
 
   /**
    * Indicates the state of the device's ICC card.
    *
    * Possible values: null, 'unknown', 'absent', 'pinRequired', 'pukRequired',
-   * 'networkLocked', 'ready'.
+   * 'networkLocked', 'corporateLocked', 'serviceProviderLocked', 'ready'.
    */
   readonly attribute DOMString cardState;
 
   /**
    * Information stored in the device's ICC card.
    */
   readonly attribute nsIDOMMozMobileICCInfo iccInfo;
 
@@ -99,17 +99,18 @@ interface nsIDOMMozMobileConnection : ns
    * 'IllegalSIMorME', or 'GenericFailure'
    */
   nsIDOMDOMRequest selectNetworkAutomatically();
 
   /**
    * Find out about the status of an ICC lock (e.g. the PIN lock).
    *
    * @param lockType
-   *        Identifies the lock type, e.g. "pin" for the PIN lock.
+   *        Identifies the lock type, e.g. "pin" for the PIN lock, "fdn" for
+   *        the FDN lock.
    *
    * @return a DOM Request.
    *         The request's result will be an object containing
    *         information about the specified lock's status,
    *         e.g. {lockType: "pin", enabled: true}.
    */
   nsIDOMDOMRequest getCardLock(in DOMString lockType);
 
@@ -125,93 +126,110 @@ interface nsIDOMMozMobileConnection : ns
    *
    * Examples:
    *
    * (1) Unlocking the PIN:
    *
    *   unlockCardLock({lockType: "pin",
    *                   pin: "..."});
    *
-   * (2) Network depersonalization. Unlocking the network control key (NCK).
+   * (2) Unlocking the PUK and supplying a new PIN:
+   *
+   *   unlockCardLock({lockType: "puk",
+   *                   puk: "...",
+   *                   newPin: "..."});
+   *
+   * (3) Network depersonalization. Unlocking the network control key (NCK).
    *
    *   unlockCardLock({lockType: "nck",
    *                   pin: "..."});
    *
-   * (3) Unlocking the PUK and supplying a new PIN:
+   * (4) Corporate depersonalization. Unlocking the corporate control key (CCK).
    *
-   *   unlockCardLock({lockType: "puk",
-   *                   puk: "...",
-   *                   newPin: "..."});
+   *   unlockCardLock({lockType: "cck",
+   *                   pin: "..."});
+   *
+   * (5) Service Provider depersonalization. Unlocking the service provider
+   *     control key (SPCK).
+   *
+   *   unlockCardLock({lockType: "spck",
+   *                   pin: "..."});
    *
    * @return a nsIDOMDOMRequest.
    *         The request's result will be an object containing
    *         information about the unlock operation.
    *
    * Examples:
    *
    * (1) Unlocking failed:
    *
    *     {
    *       lockType:   "pin",
-   *       result:     false,
+   *       success:    false,
    *       retryCount: 2
    *     }
    *
    * (2) Unlocking succeeded:
    *
    *     {
    *       lockType:  "pin",
-   *       result:    true
+   *       success:   true
    *     }
    */
   nsIDOMDOMRequest unlockCardLock(in jsval info);
 
   /**
    * Modify the state of a card lock.
    *
    * @param info
    *        An object containing information about the lock and
    *        how to modify its state. At a minimum, this object
    *        must have a "lockType" attribute which specifies the
    *        type of lock, e.g. "pin" for the PIN lock. Other
    *        attributes are dependent on the lock type.
    *
    * Examples:
    *
-   * (1) Disabling the PIN lock:
+   * (1a) Disabling the PIN lock:
    *
    *   setCardLock({lockType: "pin",
    *                pin: "...",
    *                enabled: false});
    *
+   * (1b) Disabling the FDN lock:
+   *
+   *   setCardLock({lockType: "fdn",
+   *                pin2: "...",
+   *                enabled: false});
+   *
    * (2) Changing the PIN:
    *
    *   setCardLock({lockType: "pin",
    *                pin: "...",
    *                newPin: "..."});
    *
    * @return a nsIDOMDOMRequest.
    *         The request's result will be an object containing
    *         information about the operation.
    *
    * Examples:
    *
    * (1) Enabling/Disabling card lock failed or change card lock failed.
    *
    *     {
    *       lockType: "pin",
-   *       result: false,
+   *       success: false,
    *       retryCount: 2
    *     }
    *
    * (2) Enabling/Disabling card lock succeed or change card lock succeed.
    *
    *     {
    *       lockType: "pin",
-   *       result: true
+   *       success: true
    *     }
    */
   nsIDOMDOMRequest setCardLock(in jsval info);
 
   /**
    * Send a MMI message.
    *
    * @param mmi
@@ -311,17 +329,17 @@ interface nsIDOMMozMobileConnection : ns
 
   /**
    * The 'oncfstatechange' event is notified whenever the call forwarding
    * state changes.
    */
   [implicit_jscontext] attribute jsval oncfstatechange;
 };
 
-[scriptable, uuid(21a20166-a9b4-4386-b151-49e6cfb9401b)]
+[scriptable, uuid(c9d9ff61-a2f0-41cd-b478-9cefa7b31f31)]
 interface nsIDOMMozMobileConnectionInfo : nsISupports
 {
   /**
    * State of the connection.
    *
    * Possible values: 'notSearching', 'searching', 'denied', 'registered'.
    * null if the state is unknown.
    */
@@ -349,17 +367,17 @@ interface nsIDOMMozMobileConnectionInfo 
   /**
    * Network operator
    */
   readonly attribute nsIDOMMozMobileNetworkInfo network;
 
   /**
    * Mobile Country Code (MCC) of last known network operator.
    */
-  readonly attribute unsigned short lastKnownMcc;
+  readonly attribute DOMString lastKnownMcc;
 
   /**
    * Type of connection.
    *
    * Possible values: 'gsm', 'cdma', gprs', 'edge', 'umts', 'hsdpa', 'evdo0',
    * 'evdoa', 'evdob', etc.
    */
   readonly attribute DOMString type;
@@ -377,38 +395,38 @@ interface nsIDOMMozMobileConnectionInfo 
 
   /**
    * Cell location.
    */
   readonly attribute nsIDOMMozMobileCellInfo cell;
 
 };
 
-[scriptable, uuid(3bd866c7-98a5-4ef4-a464-c22d8cc6b992)]
+[scriptable, uuid(40018fc7-4c42-47b6-8de6-3591a9c622bc)]
 interface nsIDOMMozMobileNetworkInfo: nsISupports
 {
   /**
    * Short name of the network operator
    */
   readonly attribute DOMString shortName;
 
   /**
    * Long name of the network operator
    */
   readonly attribute DOMString longName;
 
   /**
    * Mobile Country Code (MCC) of the network operator
    */
-  readonly attribute unsigned short mcc;
+  readonly attribute DOMString mcc;
 
   /**
    * Mobile Network Code (MNC) of the network operator
    */
-  readonly attribute unsigned short mnc;
+  readonly attribute DOMString mnc;
 
   /**
    * State of this network operator.
    *
    * Possible values: 'available', 'connected', 'forbidden', or null (unknown)
    */
   readonly attribute DOMString state;
 };
@@ -422,33 +440,33 @@ interface nsIDOMMozMobileCellInfo: nsISu
   readonly attribute unsigned short gsmLocationAreaCode;
 
   /**
    * Mobile Cell ID for GSM/WCDMA networks.
    */
   readonly attribute unsigned long gsmCellId;
 };
 
-[scriptable, uuid(b794bfcd-4ba4-46f2-8bf3-b4ed1b8d2b40)]
+[scriptable, uuid(10d5c5a2-d43f-4f94-8657-cf7ccabbab6e)]
 interface nsIDOMMozMobileICCInfo : nsISupports
 {
    /**
    * Integrated Circuit Card Identifier.
    */
   readonly attribute DOMString iccid;
 
   /**
    * Mobile Country Code (MCC) of the subscriber's home network.
    */
-  readonly attribute unsigned short mcc;
+  readonly attribute DOMString mcc;
 
   /**
    * Mobile Network Code (MNC) of the subscriber's home network.
    */
-  readonly attribute unsigned short mnc;
+  readonly attribute DOMString mnc;
 
   /**
    * Service Provider Name (SPN) of the subscriber's home network.
    */
   readonly attribute DOMString spn;
 
   /**
    * Network name must be a part of displayed carrier name.
diff --git a/dom/network/interfaces/nsIMobileConnectionProvider.idl b/dom/network/interfaces/nsIMobileConnectionProvider.idl
--- a/dom/network/interfaces/nsIMobileConnectionProvider.idl
+++ b/dom/network/interfaces/nsIMobileConnectionProvider.idl
@@ -6,32 +6,50 @@
 
 interface nsIDOMMozMobileICCInfo;
 interface nsIDOMMozMobileConnectionInfo;
 interface nsIDOMMozMobileNetworkInfo;
 interface nsIDOMMozMobileCFInfo;
 interface nsIDOMDOMRequest;
 interface nsIDOMWindow;
 
+[scriptable, uuid(2cb8e811-7eaf-4cb9-8aa8-581e7a245edc)]
+interface nsIMobileConnectionListener : nsISupports
+{
+  void notifyVoiceChanged();
+  void notifyDataChanged();
+  void notifyCardStateChanged();
+  void notifyIccInfoChanged();
+  void notifyUssdReceived(in DOMString message,
+                          in boolean sessionEnded);
+  void notifyDataError(in DOMString message);
+  void notifyIccCardLockError(in DOMString lockType,
+                              in unsigned long retryCount);
+  void notifyCFStateChange(in boolean success,
+                           in unsigned short action,
+                           in unsigned short reason,
+                           in DOMString number,
+                           in unsigned short timeSeconds,
+                           in unsigned short serviceClass);
+};
+
 /**
  * XPCOM component (in the content process) that provides the mobile
  * network information.
  */
-[scriptable, uuid(0fb90831-801d-4a84-a56f-7cbc77ba9d61)]
+[scriptable, uuid(152da558-c3c0-45ad-9ac5-1adaf7a83c0d)]
 interface nsIMobileConnectionProvider : nsISupports
 {
   /**
    * Called when a content process registers receiving unsolicited messages from
    * RadioInterfaceLayer in the chrome process. Only a content process that has
-   * the 'mobileconnection' permission is allowed to register. Note that content
-   * doesn't need to unregister because the chrome process will remove it from
-   * the registration list once the chrome receives a 'child-process-shutdown'
-   * message.
+   * the 'mobileconnection' permission is allowed to register.
    */
-  void registerMobileConnectionMsg();
+  void registerMobileConnectionMsg(in nsIMobileConnectionListener listener);
+  void unregisterMobileConnectionMsg(in nsIMobileConnectionListener listener);
 
   readonly attribute DOMString cardState;
   readonly attribute nsIDOMMozMobileICCInfo iccInfo;
   readonly attribute nsIDOMMozMobileConnectionInfo voiceConnectionInfo;
   readonly attribute nsIDOMMozMobileConnectionInfo dataConnectionInfo;
   readonly attribute DOMString networkSelectionMode;
 
   nsIDOMDOMRequest getNetworks(in nsIDOMWindow window);
@@ -40,24 +58,13 @@ interface nsIMobileConnectionProvider : 
 
   nsIDOMDOMRequest getCardLock(in nsIDOMWindow window, in DOMString lockType);
   nsIDOMDOMRequest unlockCardLock(in nsIDOMWindow window, in jsval info);
   nsIDOMDOMRequest setCardLock(in nsIDOMWindow window, in jsval info);
 
   nsIDOMDOMRequest sendMMI(in nsIDOMWindow window, in DOMString mmi);
   nsIDOMDOMRequest cancelMMI(in nsIDOMWindow window);
 
-  void sendStkResponse(in nsIDOMWindow window,
-                       in jsval        command,
-                       in jsval        response);
-  void sendStkMenuSelection(in nsIDOMWindow   window,
-                            in unsigned short itemIdentifier,
-                            in boolean        helpRequested);
-  void sendStkTimerExpiration(in nsIDOMWindow window,
-                              in jsval        timer);
-  void sendStkEventDownload(in nsIDOMWindow window,
-                            in jsval        event);
-
   nsIDOMDOMRequest getCallForwardingOption(in nsIDOMWindow   window,
                                            in unsigned short reason);
   nsIDOMDOMRequest setCallForwardingOption(in nsIDOMWindow          window,
                                            in nsIDOMMozMobileCFInfo CFInfo);
 };
diff --git a/dom/plugins/base/nsIPluginHost.idl b/dom/plugins/base/nsIPluginHost.idl
--- a/dom/plugins/base/nsIPluginHost.idl
+++ b/dom/plugins/base/nsIPluginHost.idl
@@ -15,27 +15,24 @@
 [scriptable, uuid(f89e7679-0adf-4a30-bda9-1afe1ee270d6)]
 interface nsIPluginPlayPreviewInfo : nsISupports
 {
   readonly attribute AUTF8String mimeType;
   readonly attribute boolean     ignoreCTP;
   readonly attribute AUTF8String redirectURL;
 };
 
-[scriptable, uuid(67ebff01-0dce-48f7-b6a5-6235fc78382b)]
+[scriptable, uuid(15f97490-7bdf-4947-885c-9258072af878)]
 interface nsIPluginHost : nsISupports
 {
   /**
    * Causes the plugins directory to be searched again for new plugin 
    * libraries.
-   *
-   * @param reloadPages - indicates whether currently visible pages should 
-   * also be reloaded
    */
-  void reloadPlugins(in boolean reloadPages);
+  void reloadPlugins();
 
   void getPluginTags([optional] out unsigned long aPluginCount,
     [retval, array, size_is(aPluginCount)] out nsIPluginTag aResults);
 
   /*
    * Flags for use with clearSiteData.
    *
    * FLAG_CLEAR_ALL: clear all data associated with a site.
diff --git a/dom/quota/nsIQuotaManager.idl b/dom/quota/nsIQuotaManager.idl
new file mode 100644
--- /dev/null
+++ b/dom/quota/nsIQuotaManager.idl
@@ -0,0 +1,44 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIQuotaRequest;
+interface nsIURI;
+interface nsIUsageCallback;
+
+[scriptable, builtinclass, uuid(8d74e6f8-81c3-4045-9bb7-70bdb7b11b25)]
+interface nsIQuotaManager : nsISupports
+{
+  /**
+   * Schedules an asynchronous callback that will return the total amount of
+   * disk space being used by storages for the given origin.
+   *
+   * @param aURI
+   *        The URI whose usage is being queried.
+   * @param aCallback
+   *        The callback that will be called when the usage is available.
+   */
+  [optional_argc]
+  nsIQuotaRequest
+  getUsageForURI(in nsIURI aURI,
+                 in nsIUsageCallback aCallback,
+                 [optional] in unsigned long aAppId,
+                 [optional] in boolean aInMozBrowserOnly);
+
+  /**
+   * Removes all storages stored for the given URI. The files may not be
+   * deleted immediately depending on prohibitive concurrent operations.
+   *
+   * @param aURI
+   *        The URI whose storages are to be cleared.
+   */
+  [optional_argc]
+  void
+  clearStoragesForURI(in nsIURI aURI,
+                      [optional] in unsigned long aAppId,
+                      [optional] in boolean aInMozBrowserOnly);
+};
diff --git a/dom/quota/nsIQuotaRequest.idl b/dom/quota/nsIQuotaRequest.idl
new file mode 100644
--- /dev/null
+++ b/dom/quota/nsIQuotaRequest.idl
@@ -0,0 +1,14 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+[scriptable, function, uuid(d96769ed-63ac-4070-ac5a-4b0e1728618a)]
+interface nsIQuotaRequest : nsISupports
+{
+  void
+  cancel();
+};
diff --git a/dom/quota/nsIUsageCallback.idl b/dom/quota/nsIUsageCallback.idl
new file mode 100644
--- /dev/null
+++ b/dom/quota/nsIUsageCallback.idl
@@ -0,0 +1,20 @@
+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* vim: set ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIURI;
+
+[scriptable, function, uuid(7b0f9928-0ddc-42c7-b9f2-6b2308b90b18)]
+interface nsIUsageCallback : nsISupports
+{
+  void
+  onUsageResult(in nsIURI aURI,
+                in unsigned long long aUsage,
+                in unsigned long long aFileUsage,
+                in unsigned long aAppId,
+                in boolean aInMozBrowserOnly);
+};
diff --git a/dom/system/gonk/nsIRadioInterfaceLayer.idl b/dom/system/gonk/nsIRadioInterfaceLayer.idl
--- a/dom/system/gonk/nsIRadioInterfaceLayer.idl
+++ b/dom/system/gonk/nsIRadioInterfaceLayer.idl
@@ -1,87 +1,18 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
-#include "nsIMobileConnectionProvider.idl"
 
 interface nsIDOMMozMobileConnectionInfo;
-interface nsIDOMDOMRequest;
-interface nsIDOMWindow;
-interface nsIDOMMozVoicemailStatus;
-interface nsISmsRequest;
+interface nsIDOMMozMobileICCInfo;
+interface nsIMobileMessageCallback;
 interface nsIDOMMozSmsSegmentInfo;
-interface nsIDOMMozCellBroadcastMessage;
-
-[scriptable, uuid(0faabc35-644d-4ed5-b109-425280ff1cdf)]
-interface nsIRILTelephonyCallback : nsISupports
-{
-  /**
-   * Notified when a telephony call changes state.
-   *
-   * @param callIndex
-   *        Call identifier assigned by the RIL.
-   * @param callState
-   *        One of the nsIRadioInterfaceLayer::CALL_STATE_* values.
-   * @param number
-   *        Number of the other party.
-   * @param isActive
-   *        Indicates whether this call is the currently active one.
-   */
-  void callStateChanged(in unsigned long callIndex,
-                        in unsigned short callState,
-                        in AString number,
-                        in boolean isActive);
-
-  /**
-   * Called when nsIRILContentHelper is asked to enumerate the current
-   * telephony call state (nsIRILContentHelper::enumerateCalls). This is
-   * called once per call that is currently managed by the RIL.
-   *
-   * @param callIndex
-   *        Call identifier assigned by the RIL.
-   * @param callState
-   *        One of the nsIRadioInterfaceLayer::CALL_STATE_* values.
-   * @param number
-   *        Number of the other party.
-   * @param isActive
-   *        Indicates whether this call is the active one.
-   *
-   * @return true to continue enumeration or false to cancel.
-   */
-  boolean enumerateCallState(in unsigned long callIndex,
-                             in unsigned short callState,
-                             in AString number,
-                             in boolean isActive);
-
-  /**
-   * Called when RIL error occurs.
-   *
-   * @param callIndex
-   *        Call identifier assigned by the RIL. -1 if no connection
-   * @param error
-   *        Error from RIL.
-   */
-  void notifyError(in long callIndex,
-                   in AString error);
-};
-
-[scriptable, uuid(521cfe4a-bf79-4134-a9fc-e2242164d657)]
-interface nsIRILVoicemailCallback : nsISupports
-{
-  /**
-   * Called when a voicemail notification has been received by the network.
-   *
-   * @param status
-   *        The new voicemail status
-   */
-  void voicemailNotification(in nsIDOMMozVoicemailStatus status);
-};
 
 [scriptable, uuid(1e602d20-d066-4399-8997-daf36b3158ef)]
 interface nsIRILDataCallInfo : nsISupports
 {
   /**
    * Current data call state, one of the
    * nsINetworkInterface::NETWORK_STATE_* constants.
    */
@@ -133,158 +64,45 @@ interface nsIRILContactCallback : nsISup
    * @param contacts
    *        Array of the ICC contacts of the specified type.
    */
   void receiveContactsList(in DOMString errorMsg,
                            in DOMString contactType,
                            in jsval contacts);
 };
 
-[scriptable, function, uuid(ab954d56-12a1-4c6b-8753-14ad5664111d)]
-interface nsIRILContactUpdateCallback : nsISupports
-{
-  /**
-   * Called when an ICC contact is updated.
-   *
-   * @param errorMsg
-   *        Error message from RIL.
-   * @param contactType
-   *        Type of the contact, i.e. ADN.
-   */
-  void onUpdated(in DOMString errorMsg,
-                 in DOMString contactType);
-};
-
-[scriptable, uuid(c5e31c2c-a6a1-44c3-a30e-7fdfb4dc1750)]
-interface nsIRILCellBroadcastCallback : nsISupports
-{
-  /**
-   * Called when a Cell Broadcast message has been received by the network.
-   *
-   * @param message
-   *        The received Cell Broadcast Message.
-   */
-  void notifyMessageReceived(in nsIDOMMozCellBroadcastMessage message);
-};
-
-/**
- * Helper that runs in the content process and exposes information
- * to the DOM.
- */
-[scriptable, uuid(8c35c286-7a84-410d-9b36-b15f2cadf78f)]
-interface nsIRILContentHelper : nsIMobileConnectionProvider
-{
-  void registerTelephonyCallback(in nsIRILTelephonyCallback callback);
-  void unregisterTelephonyCallback(in nsIRILTelephonyCallback callback);
-
-  void registerVoicemailCallback(in nsIRILVoicemailCallback callback);
-  void unregisterVoicemailCallback(in nsIRILVoicemailCallback callback);
-
-  void registerCellBroadcastCallback(in nsIRILCellBroadcastCallback callback);
-  void unregisterCellBroadcastCallback(in nsIRILCellBroadcastCallback callback);
-
-  /**
-   * Called when a content process registers receiving unsolicited messages from
-   * RadioInterfaceLayer in the chrome process. Only a content process that has
-   * the 'telephony' permission is allowed to register. Note that content
-   * doesn't need to unregister because the chrome process will remove it from
-   * the registration list once the chrome receives a 'child-process-shutdown'
-   * message.
-   */
-  void registerTelephonyMsg();
-
-  /**
-   * Called when a content process registers receiving unsolicited messages from
-   * RadioInterfaceLayer in the chrome process. Only a content process that has
-   * the 'voicemail' permission is allowed to register. Note that content
-   * doesn't need to unregister because the chrome process will remove it from
-   * the registration list once the chrome receives a 'child-process-shutdown'
-   * message.
-   */
-  void registerVoicemailMsg();
-
-  /**
-   * Called when a content process registers receiving unsolicited messages from
-   * RadioInterfaceLayer in the chrome process. Only a content process that has
-   * the 'cellbroadcast' permission is allowed to register. Note that content
-   * doesn't need to unregister because the chrome process will remove it from
-   * the registration list once the chrome receives a 'child-process-shutdown'
-   * message.
-   */
-  void registerCellBroadcastMsg();
-
-  /**
-   * Will continue calling callback.enumerateCallState until the callback
-   * returns false.
-   */
-  void enumerateCalls(in nsIRILTelephonyCallback callback);
-
-  /**
-   * Functionality for making and managing phone calls.
-   */
-  void dial(in DOMString number);
-  void dialEmergency(in DOMString number);
-  void hangUp(in unsigned long callIndex);
-
-  void startTone(in DOMString dtmfChar);
-  void stopTone();
-
-  void answerCall(in unsigned long callIndex);
-  void rejectCall(in unsigned long callIndex);
-  void holdCall(in unsigned long callIndex);
-  void resumeCall(in unsigned long callIndex);
-
-  attribute bool microphoneMuted;
-  attribute bool speakerEnabled;
-
-  readonly attribute nsIDOMMozVoicemailStatus voicemailStatus;
-  readonly attribute DOMString voicemailNumber;
-  readonly attribute DOMString voicemailDisplayName;
-};
-
 [scriptable, uuid(c0c5cb9f-6372-4b5a-b74c-baacc2da5e4f)]
 interface nsIVoicemailInfo : nsISupports
 {
   readonly attribute DOMString number;
 
   readonly attribute DOMString displayName;
 };
 
-[scriptable, uuid(a09c42c3-1063-42f6-8022-268c6a0fe5e8)]
+[scriptable, uuid(f7ff9856-5c55-4ba2-9b64-bfc0ace169e7)]
 interface nsIRilContext : nsISupports
 {
   readonly attribute DOMString radioState;
 
   readonly attribute DOMString cardState;
 
   readonly attribute DOMString imsi;
 
+  readonly attribute DOMString networkSelectionMode;
+
   readonly attribute nsIDOMMozMobileICCInfo iccInfo;
 
   readonly attribute nsIDOMMozMobileConnectionInfo voice;
 
   readonly attribute nsIDOMMozMobileConnectionInfo data;
 };
 
-[scriptable, uuid(385345ee-f78c-4be4-abd2-07d3dae4e208)]
+[scriptable, uuid(9a914550-8f7a-11e2-9e96-0800200c9a66)]
 interface nsIRadioInterfaceLayer : nsISupports
 {
-  const unsigned short CALL_STATE_UNKNOWN = 0;
-  const unsigned short CALL_STATE_DIALING = 1;
-  const unsigned short CALL_STATE_ALERTING = 2;
-  const unsigned short CALL_STATE_BUSY = 3;
-  const unsigned short CALL_STATE_CONNECTING = 4;
-  const unsigned short CALL_STATE_CONNECTED = 5;
-  const unsigned short CALL_STATE_HOLDING = 6;
-  const unsigned short CALL_STATE_HELD = 7;
-  const unsigned short CALL_STATE_RESUMING = 8;
-  const unsigned short CALL_STATE_DISCONNECTING = 9;
-  const unsigned short CALL_STATE_DISCONNECTED = 10;
-  const unsigned short CALL_STATE_INCOMING = 11;
-
   /**
    * Activates or deactivates radio power.
    */
   void setRadioEnabled(in bool value);
 
   readonly attribute nsIRilContext rilContext;
 
   readonly attribute nsIVoicemailInfo voicemailInfo;
@@ -312,44 +130,25 @@ interface nsIRadioInterfaceLayer : nsISu
 
   /**
    * SMS-related functionality.
    */
   nsIDOMMozSmsSegmentInfo getSegmentInfoForText(in DOMString text);
 
   void sendSMS(in DOMString number,
                in DOMString message,
-               in nsISmsRequest request);
+               in nsIMobileMessageCallback request);
 
   /**
    * ICC-related functionality.
    */
 
   /**
    * Get ICC Contact List.
    *
    * @param contactType One of the values below.
    *                    "ADN" (Abbreviated Dialling Numbers)
    *                    "FDN" (Fixed Dialling Numbers)
    * @param callback  A nsIRILContactCallback object.
    */
   void getICCContacts(in DOMString contactType,
                       in nsIRILContactCallback callback);
-
-  /**
-   * Update ICC Contact.
-   *
-   * This function allows two operations: update the existing contact or
-   *                                      insert a new contact.
-   * If the contact has 'recordId' property, the corresponding record will be
-   * updated. If not, the contact will be inserted.
-   *
-   * @param contactType One of the values below.
-   *                    "ADN" (Abbreviated Dialling Numbers)
-   * @param contact     The contact will be updated.
-   *                    If has 'recordId' property, updates corresponding record.
-   *                    If not, finds a free record and updates it.
-   * @param callback    A nsIRILContactUpdateCallback object.
-   */
-  void updateICCContact(in DOMString contactType,
-                        in jsval contact,
-                        in nsIRILContactUpdateCallback callback);
 };
diff --git a/dom/telephony/nsIDOMTelephony.idl b/dom/telephony/nsIDOMTelephony.idl
--- a/dom/telephony/nsIDOMTelephony.idl
+++ b/dom/telephony/nsIDOMTelephony.idl
@@ -4,17 +4,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMEventListener;
 interface nsIDOMTelephonyCall;
 
-[scriptable, builtinclass, uuid(ec253100-630d-4366-ac77-b67525167960)]
+[scriptable, builtinclass, uuid(0e7bc85e-7e88-43fa-b349-6ea348bda2df)]
 interface nsIDOMTelephony : nsIDOMEventTarget
 {
   nsIDOMTelephonyCall dial(in DOMString number);
   nsIDOMTelephonyCall dialEmergency(in DOMString number);
 
   attribute boolean muted;
   attribute boolean speakerEnabled;
 
diff --git a/dom/telephony/nsIDOMTelephonyCall.idl b/dom/telephony/nsIDOMTelephonyCall.idl
--- a/dom/telephony/nsIDOMTelephonyCall.idl
+++ b/dom/telephony/nsIDOMTelephonyCall.idl
@@ -4,17 +4,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 #include "nsIDOMDOMError.idl"
 
 interface nsIDOMEventListener;
 
-[scriptable, builtinclass, uuid(0662d161-6df7-41fc-a044-0ab0c668680c)]
+[scriptable, builtinclass, uuid(a6ac6941-866c-4e25-b616-045c817e04c8)]
 interface nsIDOMTelephonyCall : nsIDOMEventTarget
 {
   readonly attribute DOMString number;
 
   readonly attribute DOMString state;
 
   readonly attribute nsIDOMDOMError error;
 
diff --git a/dom/telephony/nsITelephonyProvider.idl b/dom/telephony/nsITelephonyProvider.idl
new file mode 100644
--- /dev/null
+++ b/dom/telephony/nsITelephonyProvider.idl
@@ -0,0 +1,111 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+[scriptable, uuid(2ab9abfe-09fb-4fea-985f-acf29fc7376a)]
+interface nsITelephonyListener : nsISupports
+{
+  /**
+   * Notified when a telephony call changes state.
+   *
+   * @param callIndex
+   *        Call identifier assigned by the RIL.
+   * @param callState
+   *        One of the nsITelephonyProvider::CALL_STATE_* values.
+   * @param number
+   *        Number of the other party.
+   * @param isActive
+   *        Indicates whether this call is the currently active one.
+   */
+  void callStateChanged(in unsigned long callIndex,
+                        in unsigned short callState,
+                        in AString number,
+                        in boolean isActive);
+
+  /**
+   * Called when nsITelephonyProvider is asked to enumerate the current
+   * telephony call state (nsITelephonyProvider::enumerateCalls). This is
+   * called once per call that is currently managed by the RIL.
+   *
+   * @param callIndex
+   *        Call identifier assigned by the RIL.
+   * @param callState
+   *        One of the nsITelephonyProvider::CALL_STATE_* values.
+   * @param number
+   *        Number of the other party.
+   * @param isActive
+   *        Indicates whether this call is the active one.
+   *
+   * @return true to continue enumeration or false to cancel.
+   */
+  boolean enumerateCallState(in unsigned long callIndex,
+                             in unsigned short callState,
+                             in AString number,
+                             in boolean isActive);
+
+  /**
+   * Called when RIL error occurs.
+   *
+   * @param callIndex
+   *        Call identifier assigned by the RIL. -1 if no connection
+   * @param error
+   *        Error from RIL.
+   */
+  void notifyError(in long callIndex,
+                   in AString error);
+};
+
+/**
+ * XPCOM component (in the content process) that provides the telephony
+ * information.
+ */
+[scriptable, uuid(099e1d81-f247-4ebb-89d8-cd89dd5f6ed4)]
+interface nsITelephonyProvider : nsISupports
+{
+  const unsigned short CALL_STATE_UNKNOWN = 0;
+  const unsigned short CALL_STATE_DIALING = 1;
+  const unsigned short CALL_STATE_ALERTING = 2;
+  const unsigned short CALL_STATE_BUSY = 3;
+  const unsigned short CALL_STATE_CONNECTING = 4;
+  const unsigned short CALL_STATE_CONNECTED = 5;
+  const unsigned short CALL_STATE_HOLDING = 6;
+  const unsigned short CALL_STATE_HELD = 7;
+  const unsigned short CALL_STATE_RESUMING = 8;
+  const unsigned short CALL_STATE_DISCONNECTING = 9;
+  const unsigned short CALL_STATE_DISCONNECTED = 10;
+  const unsigned short CALL_STATE_INCOMING = 11;
+
+  /**
+   * Called when a content process registers receiving unsolicited messages from
+   * RadioInterfaceLayer in the chrome process. Only a content process that has
+   * the 'telephony' permission is allowed to register.
+   */
+  void registerTelephonyMsg(in nsITelephonyListener listener);
+  void unregisterTelephonyMsg(in nsITelephonyListener listener);
+
+  /**
+   * Will continue calling listener.enumerateCallState until the listener
+   * returns false.
+   */
+  void enumerateCalls(in nsITelephonyListener listener);
+
+  /**
+   * Functionality for making and managing phone calls.
+   */
+  void dial(in DOMString number);
+  void dialEmergency(in DOMString number);
+  void hangUp(in unsigned long callIndex);
+
+  void startTone(in DOMString dtmfChar);
+  void stopTone();
+
+  void answerCall(in unsigned long callIndex);
+  void rejectCall(in unsigned long callIndex);
+  void holdCall(in unsigned long callIndex);
+  void resumeCall(in unsigned long callIndex);
+
+  attribute bool microphoneMuted;
+  attribute bool speakerEnabled;
+};
diff --git a/dom/voicemail/nsIDOMMozVoicemail.idl b/dom/voicemail/nsIDOMMozVoicemail.idl
--- a/dom/voicemail/nsIDOMMozVoicemail.idl
+++ b/dom/voicemail/nsIDOMMozVoicemail.idl
@@ -3,17 +3,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIDOMEventTarget.idl"
 
 interface nsIDOMMozVoicemailStatus;
 
-[scriptable, builtinclass, uuid(c343eb25-9dc8-49a8-a70f-58a0337b3f6e)]
+[scriptable, builtinclass, uuid(12e6604b-4981-4aa4-a31f-f77181f8a466)]
 interface nsIDOMMozVoicemail : nsIDOMEventTarget
 {
   /**
    * The current voicemail status, or null when the status is unknown
    */
   readonly attribute nsIDOMMozVoicemailStatus status;
 
   /**
diff --git a/dom/voicemail/nsIVoicemailProvider.idl b/dom/voicemail/nsIVoicemailProvider.idl
new file mode 100644
--- /dev/null
+++ b/dom/voicemail/nsIVoicemailProvider.idl
@@ -0,0 +1,39 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIDOMMozVoicemailStatus;
+
+[scriptable, uuid(214b0963-da48-4859-a56c-f065a90e0403)]
+interface nsIVoicemailListener : nsISupports
+{
+  /**
+   * Called when a voicemail notification has been received by the network.
+   *
+   * @param status
+   *        The new voicemail status
+   */
+  void notifyStatusChanged(in nsIDOMMozVoicemailStatus status);
+};
+
+/**
+ * XPCOM component (in the content process) that provides the voicemail
+ * information.
+ */
+[scriptable, uuid(37bc0991-21a3-4de9-b888-d667fea6c05d)]
+interface nsIVoicemailProvider : nsISupports
+{
+  /**
+   * Called when a content process registers receiving unsolicited messages from
+   * RadioInterfaceLayer in the chrome process. Only a content process that has
+   * the 'voicemail' permission is allowed to register.
+   */
+  void registerVoicemailMsg(in nsIVoicemailListener listener);
+  void unregisterVoicemailMsg(in nsIVoicemailListener listener);
+
+  readonly attribute nsIDOMMozVoicemailStatus voicemailStatus;
+  readonly attribute DOMString voicemailNumber;
+  readonly attribute DOMString voicemailDisplayName;
+};
diff --git a/extensions/pref/autoconfig/public/nsIAutoConfig.idl b/extensions/pref/autoconfig/public/nsIAutoConfig.idl
--- a/extensions/pref/autoconfig/public/nsIAutoConfig.idl
+++ b/extensions/pref/autoconfig/public/nsIAutoConfig.idl
@@ -13,16 +13,14 @@
     0x1dd1,\
     0x11b2,\
     { 0x93, 0x92, 0x9d, 0x94, 0xaa, 0x74, 0xb0, 0xc5 }\
   }
  
 #define NS_AUTOCONFIG_CONTRACTID \
   "@mozilla.org/autoconfiguration;1" 
 
-#define NS_AUTOCONFIG_CLASSNAME "AutoConfig Module"
-
 %}
 
 [uuid (80DB54AE-13F2-11d5-BE44-00108335A220)]
 interface nsIAutoConfig : nsISupports {
   attribute string configURL;
 };
diff --git a/extensions/pref/autoconfig/public/nsILDAPSyncQuery.idl b/extensions/pref/autoconfig/public/nsILDAPSyncQuery.idl
deleted file mode 100644
--- a/extensions/pref/autoconfig/public/nsILDAPSyncQuery.idl
+++ /dev/null
@@ -1,27 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-interface nsILDAPURL;
-
-
-[scriptable, uuid (0308fb36-1dd2-11b2-b16f-8510e8c5311a)]
-interface nsILDAPSyncQuery : nsISupports {
-  
-  /**
-   * getQueryResults
-   *
-   * Create a new LDAP connection do a synchronous LDAP search and return 
-   * the results.
-   * @param aServerURL - LDAP URL with parameters to a LDAP search 
-   *                     ("ldap://host/base?attributes?one/sub?filter")
-   * @param aProtocolVersion - LDAP protocol version to use for connection
-   *                           (nsILDAPConnection.idl has symbolic constants)
-   * @return results
-   */
-   wstring getQueryResults (in nsILDAPURL aServerURL,
-                            in unsigned long aProtocolVersion);
-
-};
diff --git a/extensions/pref/autoconfig/public/nsIReadConfig.idl b/extensions/pref/autoconfig/public/nsIReadConfig.idl
--- a/extensions/pref/autoconfig/public/nsIReadConfig.idl
+++ b/extensions/pref/autoconfig/public/nsIReadConfig.idl
@@ -12,15 +12,13 @@
     0x1dd1, \
     0x11b2, \
     { 0xbb, 0x89, 0xb8, 0x44, 0xc6, 0xec, 0x03, 0x39 }\
   }
  
 #define NS_READCONFIG_CONTRACTID \
   "@mozilla.org/readconfig;1" 
 
-#define NS_READCONFIG_CLASSNAME "ReadConfig Module"
-
 %}
 
 [uuid (ba5bc4c6-1dd1-11b2-bb89-b844c6ec0339)]
 interface nsIReadConfig : nsISupports {
 };
diff --git a/image/public/imgIContainer.idl b/image/public/imgIContainer.idl
--- a/image/public/imgIContainer.idl
+++ b/image/public/imgIContainer.idl
@@ -23,59 +23,75 @@ class LayerManager;
 class ImageContainer;
 }
 }
 
 class nsIFrame;
 
 namespace mozilla {
 class TimeStamp;
+class SVGImageContext;
 }
 
 %}
 
 [ptr] native gfxImageSurface(gfxImageSurface);
 [ptr] native gfxASurface(gfxASurface);
 native gfxImageFormat(gfxASurface::gfxImageFormat);
 [ptr] native gfxContext(gfxContext);
 [ref] native gfxMatrix(gfxMatrix);
 [ref] native gfxRect(gfxRect);
 native gfxGraphicsFilter(gfxPattern::GraphicsFilter);
 [ref] native nsIntRect(nsIntRect);
 [ref] native nsIntSize(nsIntSize);
+native nsSize(nsSize);
 [ptr] native nsIFrame(nsIFrame);
 [ptr] native ImageContainer(mozilla::layers::ImageContainer);
 [ptr] native LayerManager(mozilla::layers::LayerManager);
 [ref] native TimeStamp(mozilla::TimeStamp);
+[ptr] native SVGImageContext(mozilla::SVGImageContext);
 
 
 /**
  * imgIContainer is the interface that represents an image. It allows
  * access to frames as Thebes surfaces, and permits users to extract subregions
  * as other imgIContainers. It also allows drawing of images on to Thebes
  * contexts.
  *
  * Internally, imgIContainer also manages animation of images.
  */
-[scriptable, builtinclass, uuid(c7e8eed7-2be9-40b0-be7c-b682097f5b28)]
+[scriptable, builtinclass, uuid(01c4f92f-f883-4837-a127-d8f30920e374)]
 interface imgIContainer : nsISupports
 {
   /**
    * The width of the container rectangle.  In the case of any error,
    * zero is returned, and an exception will be thrown.
    */
   readonly attribute int32_t width;
 
   /**
    * The height of the container rectangle.  In the case of any error,
    * zero is returned, and an exception will be thrown.
    */
   readonly attribute int32_t height;
 
   /**
+   * The intrinsic size of this image in appunits. If the image has no intrinsic
+   * size in a dimension, -1 will be returned for that dimension. In the case of
+   * any error, an exception will be thrown.
+   */
+  [noscript] readonly attribute nsSize intrinsicSize;
+
+  /**
+   * The (dimensionless) intrinsic ratio of this image. In the case of any error,
+   * an exception will be thrown.
+   */
+  [noscript] readonly attribute nsSize intrinsicRatio;
+
+  /**
     * Enumerated values for the 'type' attribute (below).
     */
   const unsigned short TYPE_RASTER = 0;
   const unsigned short TYPE_VECTOR = 1;
 
   /**
    * The type of this image (one of the TYPE_* values above).
    */
@@ -133,17 +149,19 @@ interface imgIContainer : nsISupports
     * as it is used for ensuring that a valid value was passed in.
     */
   const unsigned long FRAME_FIRST = 0;
   const unsigned long FRAME_CURRENT = 1;
   const unsigned long FRAME_MAX_VALUE = 1;
 
   /**
    * Get a surface for the given frame. This may be a platform-native,
-   * optimized surface, so you cannot inspect its pixel data.
+   * optimized surface, so you cannot inspect its pixel data. If you
+   * need that, use gfxASurface::GetAsReadableARGB32ImageSurface or
+   * gfxASurface::CopyToARGB32ImageSurface.
    *
    * @param aWhichFrame Frame specifier of the FRAME_* variety.
    * @param aFlags Flags of the FLAG_* variety
    */
   [noscript] gfxASurface getFrame(in uint32_t aWhichFrame,
                                   in uint32_t aFlags);
 
   /**
@@ -156,40 +174,30 @@ interface imgIContainer : nsISupports
 
   /**
    * Attempts to create an ImageContainer (and Image) containing the current
    * frame. Only valid for RASTER type images.
    */
   [noscript] ImageContainer getImageContainer(in LayerManager aManager);
 
   /**
-   * Create and return a new copy of the given frame that you can write to
-   * and otherwise inspect the pixels of.
-   *
-   * @param aWhichFrame Frame specifier of the FRAME_* variety.
-   * @param aFlags Flags of the FLAG_* variety
-   */
-  [noscript] gfxImageSurface copyFrame(in uint32_t aWhichFrame,
-                                       in uint32_t aFlags);
-
-  /**
    * Create a new imgContainer that contains only a single frame, which itself
    * contains a subregion of the given frame.
    *
    * @param aWhichFrame Frame specifier of the FRAME_* variety.
    * @param aRect the area of the current frame to be duplicated in the
    *              returned imgContainer's frame.
    * @param aFlags Flags of the FLAG_* variety
    */
   [noscript] imgIContainer extractFrame(in uint32_t aWhichFrame,
                                         [const] in nsIntRect aRect,
                                         in uint32_t aFlags);
 
   /**
-   * Draw the current frame on to the context specified.
+   * Draw a frame onto the context specified.
    *
    * @param aContext The Thebes context to draw the image to.
    * @param aFilter The filter to be used if we're scaling the image.
    * @param aUserSpaceToImageSpace The transformation from user space (e.g.,
    *                               appunits) to image space.
    * @param aFill The area in the context to draw pixels to. When aFlags includes
    *              FLAG_CLAMP, the image will be extended to this area by clampling
    *              image sample coordinates. Otherwise, the image will be
@@ -198,36 +206,32 @@ interface imgIContainer : nsISupports
    *                  sample from.
    * @param aViewportSize
    *          The size (in CSS pixels) of the viewport that would be available
    *          for the full image to occupy, if we were drawing the full image.
    *          (Note that we might not actually be drawing the full image -- we
    *          might be restricted by aSubimage -- but we still need the full
    *          image's viewport-size in order for SVG images with the "viewBox"
    *          attribute to position their content correctly.)
+   * @param aSVGContext If non-null, SVG-related rendering context such as
+   *                    overridden attributes on the image document's root <svg>
+   *                    node. Ignored for raster images.
+   * @param aWhichFrame Frame specifier of the FRAME_* variety.
    * @param aFlags Flags of the FLAG_* variety
    */
   [noscript] void draw(in gfxContext aContext,
                        in gfxGraphicsFilter aFilter,
                        [const] in gfxMatrix aUserSpaceToImageSpace,
                        [const] in gfxRect aFill,
                        [const] in nsIntRect aSubimage,
                        [const] in nsIntSize aViewportSize,
+                       [const] in SVGImageContext aSVGContext,
+                       in uint32_t aWhichFrame,
                        in uint32_t aFlags);
 
-  /**
-   * If this image is TYPE_VECTOR, i.e. is really an embedded SVG document,
-   * this method returns a pointer to the root nsIFrame of that document. If
-   * not (or if the root nsIFrame isn't available for some reason), this method
-   * returns nullptr.
-   *
-   * "notxpcom" for convenience, since we have no need for nsresult return-val.
-   */
-  [notxpcom] nsIFrame GetRootLayoutFrame();
-
   /*
    * Ensures that an image is decoding. Calling this function guarantees that
    * the image will at some point fire off decode notifications. Calling draw(),
    * getFrame(), copyFrame(), or extractCurrentFrame() triggers the same
    * mechanism internally. Thus, if you want to be sure that the image will be
    * decoded but don't want to access it until then, you must call
    * requestDecode().
    */
diff --git a/image/public/imgINotificationObserver.idl b/image/public/imgINotificationObserver.idl
--- a/image/public/imgINotificationObserver.idl
+++ b/image/public/imgINotificationObserver.idl
@@ -9,21 +9,22 @@
 interface imgIRequest;
 
 %{C++
 #include "nsRect.h"
 %}
 
 [ptr] native nsIntRect(nsIntRect);
 
-[scriptable, builtinclass, uuid(90b3d21c-317d-4d96-93c0-12add64a26bf)]
+[scriptable, builtinclass, uuid(ac65c702-7771-4f6d-b18b-1c7d806ce3c1)]
 interface imgINotificationObserver : nsISupports
 {
   const long SIZE_AVAILABLE = 1;
   const long FRAME_UPDATE = 2;
   const long FRAME_COMPLETE = 3;
   const long LOAD_COMPLETE = 4;
   const long DECODE_COMPLETE = 5;
   const long DISCARD = 6;
-  const long IS_ANIMATED = 7;
+  const long UNLOCKED_DRAW = 7;
+  const long IS_ANIMATED = 8;
 
   [noscript] void notify(in imgIRequest aProxy, in long aType, [const] in nsIntRect aRect);
 };
diff --git a/image/public/imgIRequest.idl b/image/public/imgIRequest.idl
--- a/image/public/imgIRequest.idl
+++ b/image/public/imgIRequest.idl
@@ -14,17 +14,17 @@ interface nsIPrincipal;
 
 /**
  * imgIRequest interface
  *
  * @author Stuart Parmenter <stuart@mozilla.com>
  * @version 0.1
  * @see imagelib2
  */
-[scriptable, builtinclass, uuid(3ea9fc87-2e97-45bf-b373-d1dd253a0b5e)]
+[scriptable, builtinclass, uuid(9c709b50-bd1a-476d-b313-d64db874f80a)]
 interface imgIRequest : nsIRequest
 {
   /**
    * the image container...
    * @return the image object associated with the request.
    * @attention NEED DOCS
    */
   readonly attribute imgIContainer image;
@@ -50,29 +50,33 @@ interface imgIRequest : nsIRequest
    * go away or become a private state flag within imgRequest.
    * Don't rely on it.
    *
    * STATUS_LOAD_COMPLETE: The data has been fully loaded
    * to memory, but not necessarily fully decoded.
    *
    * STATUS_ERROR: An error occurred loading the image.
    *
+   * STATUS_DECODE_STARTED: The decoding process has begun, but not yet
+   * finished.
+   *
    * STATUS_FRAME_COMPLETE: The first frame has been
    * completely decoded.
    *
    * STATUS_DECODE_COMPLETE: The whole image has been decoded.
    */
   //@{
   const long STATUS_NONE             = 0x0;
   const long STATUS_SIZE_AVAILABLE   = 0x1;
   const long STATUS_LOAD_PARTIAL     = 0x2;
   const long STATUS_LOAD_COMPLETE    = 0x4;
   const long STATUS_ERROR            = 0x8;
-  const long STATUS_FRAME_COMPLETE   = 0x10;
-  const long STATUS_DECODE_COMPLETE  = 0x20;
+  const long STATUS_DECODE_STARTED   = 0x10;
+  const long STATUS_FRAME_COMPLETE   = 0x20;
+  const long STATUS_DECODE_COMPLETE  = 0x40;
   //@}
 
   /**
    * Status flags of the STATUS_* variety.
    */
   readonly attribute unsigned long imageStatus;
 
   /**
diff --git a/js/xpconnect/idl/nsIScriptError.idl b/js/xpconnect/idl/nsIScriptError.idl
--- a/js/xpconnect/idl/nsIScriptError.idl
+++ b/js/xpconnect/idl/nsIScriptError.idl
@@ -87,15 +87,13 @@ interface nsIScriptError : nsIConsoleMes
                           in uint32_t flags,
                           in string category,
                           in unsigned long long innerWindowID);
 
     AUTF8String toString();
 };
 
 %{ C++
-#define NS_SCRIPTERROR_CLASSNAME "Script Error"
-
 #define NS_SCRIPTERROR_CID \
 { 0xe38e53b9, 0x5bb0, 0x456a, { 0xb5, 0x53, 0x57, 0x93, 0x70, 0xcb, 0x15, 0x67 }}
 
 #define NS_SCRIPTERROR_CONTRACTID "@mozilla.org/scripterror;1"
 %}
diff --git a/js/xpconnect/idl/nsIXPConnect.idl b/js/xpconnect/idl/nsIXPConnect.idl
--- a/js/xpconnect/idl/nsIXPConnect.idl
+++ b/js/xpconnect/idl/nsIXPConnect.idl
@@ -39,16 +39,17 @@ class nsWrapperCache;
       native JSPropertyOp(JSPropertyOp);
       native JSEqualityOp(JSEqualityOp);
 [ptr] native JSScriptPtr(JSScript);
 [ptr] native voidPtrPtr(void*);
 [ptr] native nsScriptObjectTracerPtr(nsScriptObjectTracer);
 [ref] native nsCCTraversalCallbackRef(nsCycleCollectionTraversalCallback);
 [ptr] native nsAXPCNativeCallContextPtr(nsAXPCNativeCallContext);
 [ptr] native nsWrapperCachePtr(nsWrapperCache);
+      native ZoneSpecifier(uintptr_t);
 
 /***************************************************************************/
 
 // forward declarations...
 interface nsIXPCScriptable;
 interface nsIXPConnect;
 interface nsIXPConnectWrappedNative;
 interface nsIInterfaceInfo;
@@ -284,17 +285,17 @@ interface nsIXPCFunctionThisTranslator :
 %{ C++
 // For use with the service manager
 // {CB6593E0-F9B2-11d2-BDD6-000064657374}
 #define NS_XPCONNECT_CID \
 { 0xcb6593e0, 0xf9b2, 0x11d2, \
     { 0xbd, 0xd6, 0x0, 0x0, 0x64, 0x65, 0x73, 0x74 } }
 %}
 
-[uuid(3e825850-3a5f-11e2-81c1-0800200c9a66)]
+[uuid(7e7a9a90-4607-4e3a-8ef1-b0f4b8de1c27)]
 interface nsIXPConnect : nsISupports
 {
 %{ C++
   NS_DEFINE_STATIC_CID_ACCESSOR(NS_XPCONNECT_CID)
 %}
 
     /**
      * Initializes classes on a global object that has already been created.
@@ -317,17 +318,18 @@ interface nsIXPConnect : nsISupports
      * @param aFlags one of the flags below specifying what options this
      *               global object wants.
      */
     nsIXPConnectJSObjectHolder
     initClassesWithNewWrappedGlobal(
                   in JSContextPtr aJSContext,
                   in nsISupports  aCOMObj,
                   in nsIPrincipal aPrincipal,
-                  in uint32_t     aFlags);
+                  in uint32_t     aFlags,
+                  in ZoneSpecifier aZoneSpec);
 
     const uint32_t INIT_JS_STANDARD_CLASSES  = 1 << 0;
     // Free bit here!
     const uint32_t OMIT_COMPONENTS_OBJECT    = 1 << 2;
 
     /**
     * wrapNative will create a new JSObject or return an existing one.
     *
@@ -432,20 +434,16 @@ interface nsIXPConnect : nsISupports
     nsIXPConnectWrappedNative
     getWrappedNativeOfJSObject(in JSContextPtr aJSContext,
                                in JSObjectPtr  aJSObj);
 
     [noscript, notxpcom] nsISupports
     getNativeOfWrapper(in JSContextPtr aJSContext,
                        in JSObjectPtr  aJSObj);
 
-    JSObjectPtr
-    getJSObjectOfWrapper(in JSContextPtr aJSContext,
-                         in JSObjectPtr  aJSObj);
-
     void setSecurityManagerForJSContext(in JSContextPtr aJSContext,
                                         in nsIXPCSecurityManager aManager,
                                         in uint16_t flags);
 
     void getSecurityManagerForJSContext(in JSContextPtr aJSContext,
                                         out nsIXPCSecurityManager aManager,
                                         out uint16_t flags);
 
@@ -550,31 +548,33 @@ interface nsIXPConnect : nsISupports
     [noscript] nsIXPConnectJSObjectHolder createSandbox(in JSContextPtr cx,
                                                         in nsIPrincipal principal);
 
     /**
      * Evaluate script in a sandbox, completely isolated from all
      * other running scripts.
      *
      * @param source The source of the script to evaluate.
+     * @param filename The filename of the script. May be null.
      * @param cx The context to use when setting up the evaluation of
      *           the script. The actual evaluation will happen on a new
      *           temporary context.
      * @param sandbox The sandbox object to evaluate the script in.
      * @param returnStringOnly The only results to come out of the
      *                         computation (including exceptions) will
      *                         be coerced into strings created in the
      *                         sandbox.
      * @return The result of the evaluation as a jsval. If the caller
      *         intends to use the return value from this call the caller
      *         is responsible for rooting the jsval before making a call
      *         to this method.
      */
-    [noscript] jsval evalInSandboxObject(in AString source, in JSContextPtr cx,
-                                         in nsIXPConnectJSObjectHolder sandbox,
+    [noscript] jsval evalInSandboxObject(in AString source, in string filename,
+                                         in JSContextPtr cx,
+                                         in JSObjectPtr sandbox,
                                          in boolean returnStringOnly);
 
     /**
      * Root JS objects held by aHolder.
      * @param aHolder The object that hold the JS objects that should be rooted.
      * @param aTrace The tracer for aHolder.
      */
     [noscript,notxpcom] void addJSHolder(in voidPtr aHolder,
diff --git a/js/xpconnect/idl/xpccomponents.idl b/js/xpconnect/idl/xpccomponents.idl
--- a/js/xpconnect/idl/xpccomponents.idl
+++ b/js/xpconnect/idl/xpccomponents.idl
@@ -114,17 +114,17 @@ interface nsIXPCComponents_utils_Sandbox
 interface ScheduledGCCallback : nsISupports
 {
     void callback();
 };
 
 /**
 * interface of Components.utils
 */
-[scriptable, uuid(5b62c98f-5ff8-41f9-bcb8-a24d1b4255d4)]
+[scriptable, uuid(ab50492f-a9de-4a68-9a75-9406f1542a6c)]
 interface nsIXPCComponents_Utils : nsISupports
 {
 
     /* reportError is designed to be called from JavaScript only.
      *
      * It will report a JS Error object to the JS console, and return. It
      * is meant for use in exception handler blocks which want to "eat"
      * an exception, but still want to report it to the console.
@@ -378,19 +378,16 @@ interface nsIXPCComponents_Utils : nsISu
      */
     [implicit_jscontext]
     attribute boolean strict;
 
     [implicit_jscontext]
     attribute boolean werror;
 
     [implicit_jscontext]
-    attribute boolean atline;
-
-    [implicit_jscontext]
     attribute boolean methodjit;
 
     [implicit_jscontext]
     attribute boolean methodjit_always;
 
     [implicit_jscontext]
     attribute boolean strict_mode;
 
diff --git a/layout/forms/nsICapturePicker.idl b/layout/forms/nsICapturePicker.idl
deleted file mode 100644
--- a/layout/forms/nsICapturePicker.idl
+++ /dev/null
@@ -1,62 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-interface nsIDOMWindow;
-interface nsIDOMFile;
-
-[scriptable, uuid(a4e2b2de-5712-4f80-aabb-7de3a747f227)]
-interface nsICapturePicker : nsISupports
-{
-  const long MODE_STILL = 1;               // Capture a still (image)
-  const long MODE_AUDIO_CLIP = 2;          // Capture a clip of audio
-  const long MODE_VIDEO_CLIP = 3;          // Capture a clip of video
-  const long MODE_VIDEO_NO_SOUND_CLIP = 4; // Capture a clip of video (no sound)
-
-  // Return codes from the dialog
-  const long RETURN_OK = 0;
-  const long RETURN_CANCEL = 1;
-
-  /**
-   * Initialize the camera picker widget.  The camera picker is not valid until this
-   * method is called.
-   *
-   * @param      parent     nsIDOMWindow parent.  This dialog will be dependent
-   *                        on this parent.  This must not be null.
-   * @param      title      The title for the file widget
-   * @param      flags      Mode and type flags for what to capture
-   *
-   */
-  void init(in nsIDOMWindow parent, in AString title, in unsigned long mode);
-
-  /**
-   * Show file dialog.  The dialog is displayed modally.
-   *
-   * @return returnOK if the user captures the requested content, returnCancel if
-   *         the user cancels the capture process
-   */
-  unsigned long show();
-
-  /**
-   * Determine if the given mode might be available.  Consumers should take a
-   * true value to be a hint of what might be available, not a guarantee.
-   *
-   * @param      mode       Mode to examine
-   *
-   * @return false if the requested mode can definitely not be captured,
-   *         true otherwise.
-   */
-  boolean modeMayBeAvailable(in unsigned long mode);
-
-  /**
-   * Get the captured image/video/audio.  This may be a data URI, file URI,
-   * or a blob reference URI.
-   */
-  readonly attribute nsIDOMFile file;
-
-  // The MIME type of the captured content.  Cannot be set after calling show()
-  attribute AString type;
-};
diff --git a/layout/inspector/public/inIDOMUtils.idl b/layout/inspector/public/inIDOMUtils.idl
--- a/layout/inspector/public/inIDOMUtils.idl
+++ b/layout/inspector/public/inIDOMUtils.idl
@@ -11,17 +11,17 @@ interface nsIDOMElement;
 interface nsIDOMDocument;
 interface nsIDOMCSSStyleRule;
 interface nsIDOMNode;
 interface nsIDOMNodeList;
 interface nsIDOMFontFaceList;
 interface nsIDOMRange;
 interface nsIDOMCSSStyleSheet;
 
-[scriptable, uuid(dd8a9dfd-336f-4cce-8ec1-0365ede9a3a8)]
+[scriptable, uuid(1d9c29dc-230a-441e-bba9-49104ffa185e)]
 interface inIDOMUtils : nsISupports
 {
   // CSS utilities
   nsISupportsArray getCSSStyleRules(in nsIDOMElement aElement, [optional] in DOMString aPseudo);
   unsigned long getRuleLine(in nsIDOMCSSStyleRule aRule);
 
   // Utilities for working with selectors.  We don't have a JS OM representation
   // of a single selector or a selector list yet, but given a rule we can index
@@ -36,19 +36,34 @@ interface inIDOMUtils : nsISupports
   unsigned long long getSpecificity(in nsIDOMCSSStyleRule aRule,
                                     in unsigned long aSelectorIndex);
   // Note: This does not handle scoped selectors correctly, because it has no
   // idea what the right scope is.
   bool selectorMatchesElement(in nsIDOMElement aElement,
                               in nsIDOMCSSStyleRule aRule,
                               in unsigned long aSelectorIndex);
 
+  // Utilities for working with CSS properties
+  //
   // Returns true if the string names a property that is inherited by default.
   bool isInheritedProperty(in AString aPropertyName);
 
+  // Get a list of all our supported property names.  Optionally
+  // shorthands can be excluded or property aliases included.
+  const unsigned long EXCLUDE_SHORTHANDS = (1<<0);
+  const unsigned long INCLUDE_ALIASES = (1<<1);
+  void getCSSPropertyNames([optional] in unsigned long aFlags,
+			   [optional] out unsigned long aCount,
+			   [retval, array, size_is(aCount)] out wstring aProps);
+
+  // Utilities for working with CSS colors
+  [implicit_jscontext]
+  jsval colorNameToRGB(in DOMString aColorName);
+  AString rgbToColorName(in octet aR, in octet aG, in octet aB);
+
   // DOM Node utilities
   boolean isIgnorableWhitespace(in nsIDOMCharacterData aDataNode);
   // Returns the "parent" of a node.  The parent of a document node is the
   // frame/iframe containing that document.  aShowingAnonymousContent says
   // whether we are showing anonymous content.
   nsIDOMNode getParentForNode(in nsIDOMNode aNode,
                               in boolean aShowingAnonymousContent);
   nsIDOMNodeList getChildrenForNode(in nsIDOMNode aNode,
diff --git a/layout/xul/tree/nsITreeView.idl b/layout/xul/tree/nsITreeView.idl
--- a/layout/xul/tree/nsITreeView.idl
+++ b/layout/xul/tree/nsITreeView.idl
@@ -1,53 +1,56 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsITreeBoxObject.idl"
-#include "nsISupportsArray.idl"
 #include "domstubs.idl"
 
 interface nsITreeSelection;
 interface nsITreeColumn;
 interface nsIDOMDataTransfer;
 
-[scriptable, uuid(C06DC4D3-63A2-4422-A0A3-5F2EDDECA8C1)]
+[scriptable, uuid(091116f0-0bdc-4b32-b9c8-c8d5a37cb088)]
 interface nsITreeView : nsISupports
 {
   /**
    * The total number of rows in the tree (including the offscreen rows).
    */
   readonly attribute long rowCount;
 
   /**
    * The selection for this view.
    */
   attribute nsITreeSelection selection;
 
   /** 
-   * An atomized list of properties for a given row.  Each property, x, that
-   * the view gives back will cause the pseudoclass :moz-tree-row-x
-   * to be matched on the pseudoelement ::moz-tree-row.
+   * A whitespace delimited list of properties.  For each property X the view
+   * gives back will cause the pseudoclasses  ::-moz-tree-cell(x),
+   * ::-moz-tree-row(x), ::-moz-tree-twisty(x), ::-moz-tree-image(x),
+   * ::-moz-tree-cell-text(x).  to be matched on the pseudoelement
+   * ::moz-tree-row.
    */
-  void getRowProperties(in long index, in nsISupportsArray properties);
+  AString getRowProperties(in long index);
 
   /**
-   * An atomized list of properties for a given cell.  Each property, x, that
-   * the view gives back will cause the pseudoclass :moz-tree-cell-x
-   * to be matched on the ::moz-tree-cell pseudoelement.
+   * A whitespace delimited list of properties for a given cell.  Each
+   * property, x, that the view gives back will cause the pseudoclasses
+   *  ::-moz-tree-cell(x), ::-moz-tree-row(x), ::-moz-tree-twisty(x),
+   *  ::-moz-tree-image(x), ::-moz-tree-cell-text(x). to be matched on the
+   *  cell.
    */
-  void getCellProperties(in long row, in nsITreeColumn col, in nsISupportsArray properties);
+  AString getCellProperties(in long row, in nsITreeColumn col);
   
   /**
    * Called to get properties to paint a column background.  For shading the sort
    * column, etc.
    */
-  void getColumnProperties(in nsITreeColumn col, in nsISupportsArray properties);
+  AString getColumnProperties(in nsITreeColumn col);
 
   /**
    * Methods that can be used to test whether or not a twisty should be drawn,
    * and if so, whether an open or closed twisty should be used.
    */
   boolean isContainer(in long index);
   boolean isContainerOpen(in long index);
   boolean isContainerEmpty(in long index);
diff --git a/mobile/xul/components/LoginManagerPrompter.idl b/mobile/xul/components/LoginManagerPrompter.idl
deleted file mode 100644
--- a/mobile/xul/components/LoginManagerPrompter.idl
+++ /dev/null
@@ -1,67 +0,0 @@
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-
-#include "nsISupports.idl"
-
-interface nsILoginInfo;
-interface nsIFrameLoaderOwner;
-
-[scriptable, uuid(3f385080-aef5-11df-94e2-0800200c9a66)]
-
-interface nsILoginManagerPrompter : nsISupports {
-    /**
-     * Initialize the prompter. Must be called before using other interfaces.
-     *
-     * @param aBrowser
-     *        A browser element in which the user is doing some
-     *        login-related action in need to prompt them for something.
-     *        The prompt will be associated with browser.
-     */
-    void init(in nsIFrameLoaderOwner aBrowser);
-
-    /**
-     * Ask the user if they want to save a login (Yes, Never, Not Now)
-     *
-     * @param aLogin
-     *        The login to be saved.
-     */
-    void promptToSavePassword(in nsILoginInfo aLogin);
-
-    /**
-     * Ask the user if they want to change a login's password. If the
-     * user consents, modifyLogin() will be called.
-     *
-     * @param aOldLogin
-     *        The existing login (with the old password).
-     * @param aNewLogin
-     *        The new login.
-     */
-    void promptToChangePassword(in nsILoginInfo aOldLogin,
-                                in nsILoginInfo aNewLogin);
-
-    /**
-     * Ask the user if they want to change the password for one of
-     * multiple logins, when the caller can't determine exactly which
-     * login should be changed. If the user consents, modifyLogin() will
-     * be called.
-     *
-     * @param logins
-     *        An array of existing logins.
-     * @param count
-     *        (length of the array)
-     * @param aNewLogin
-     *        The new login. 
-     *
-     * Note: Because the caller does not know the username of the login
-     *       to be changed, aNewLogin.username and aNewLogin.usernameField
-     *       will be set (using the user's selection) before modifyLogin()
-     *       is called.
-     */
-    void promptToChangePasswordWithUsernames(
-            [array, size_is(count)] in nsILoginInfo logins,
-            in uint32_t count,
-            in nsILoginInfo aNewLogin);
-};
-
diff --git a/mobile/xul/components/SessionStore.idl b/mobile/xul/components/SessionStore.idl
deleted file mode 100644
--- a/mobile/xul/components/SessionStore.idl
+++ /dev/null
@@ -1,83 +0,0 @@
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-interface nsIDOMWindow;
-interface nsIDOMNode;
-
-/**
- * nsISessionStore keeps track of the current browsing state.
- *
- * The nsISessionStore API operates mostly on browser windows and the browser
- * tabs contained in them.
- */
-
-[scriptable, uuid(766a09c1-d21b-4bf8-9fe3-8b34b716251a)]
-interface nsISessionStore : nsISupports
-{
-  /**
-   * Get the current browsing state.
-   * @returns a JSON string representing the session state.
-   */
-  AString getBrowserState();
-
-  /**
-   * Get the number of restore-able tabs for a browser window
-   */
-  unsigned long getClosedTabCount(in nsIDOMWindow aWindow);
-
-  /**
-   * Get closed tab data
-   *
-   * @param aWindow is the browser window for which to get closed tab data
-   * @returns a JSON string representing the list of closed tabs.
-   */
-  AString getClosedTabData(in nsIDOMWindow aWindow);
-
-  /**
-   * @param aWindow is the browser window to reopen a closed tab in.
-   * @param aIndex  is the index of the tab to be restored (FIFO ordered).
-   * @returns a reference to the reopened tab.
-   */
-  nsIDOMNode undoCloseTab(in nsIDOMWindow aWindow, in unsigned long aIndex);
-
-  /**
-   * @param aWindow is the browser window associated with the closed tab.
-   * @param aIndex  is the index of the closed tab to be removed (FIFO ordered).
-   */
-  nsIDOMNode forgetClosedTab(in nsIDOMWindow aWindow, in unsigned long aIndex);
-
-  /**
-   * @param aTab is the browser tab to get the value for.
-   * @param aKey is the value's name.
-   * 
-   * @returns A string value or an empty string if none is set.
-   */
-  AString getTabValue(in nsIDOMNode aTab, in AString aKey);
-
-  /**
-   * @param aTab         is the browser tab to set the value for.
-   * @param aKey         is the value's name.
-   * @param aStringValue is the value itself (use JSON.stringify/parse before setting JS objects).
-   */
-  void setTabValue(in nsIDOMNode aTab, in AString aKey, in AString aStringValue);
-
-  /**
-   * @param aTab is the browser tab to get the value for.
-   * @param aKey is the value's name.
-   */
-  void deleteTabValue(in nsIDOMNode aTab, in AString aKey);
-
-  /**
-   * @returns A boolean indicating we should restore previous browser session
-   */
-  boolean shouldRestore();
-
-  /**
-   * Restores the previous browser session using a fast, lightweight strategy
-   * @param aBringToFront should a restored tab be brought to the foreground?
-   */
-  void restoreLastSession(in boolean aBringToFront);
-};
diff --git a/mobile/xul/components/build/nsIShellService.idl b/mobile/xul/components/build/nsIShellService.idl
deleted file mode 100644
--- a/mobile/xul/components/build/nsIShellService.idl
+++ /dev/null
@@ -1,26 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-[scriptable, uuid(fd2450a3-966b-44a9-a8eb-316256bb80b4)]
-interface nsIShellService : nsISupports
-{
-  /**
-   * This method displays a UI to switch to (or launch) a different task
-   */
-  void switchTask();
-
-  /**
-   * This method creates a shortcut on a desktop or homescreen that opens in
-   * the our application.
-   *
-   * @param aTitle     the user-friendly name of the shortcut.
-   * @param aURI       the URI to open.
-   * @param aIconData  a base64 encoded representation of the shortcut's icon.
-   * @param aIntent    how the URI should be opened. Examples: "default", "bookmark" and "webapp"
-   */
-  void createShortcut(in AString aTitle, in AString aURI, in AString aIconData, in AString aIntent);
-};
diff --git a/modules/libjar/nsIZipReader.idl b/modules/libjar/nsIZipReader.idl
--- a/modules/libjar/nsIZipReader.idl
+++ b/modules/libjar/nsIZipReader.idl
@@ -72,16 +72,19 @@ interface nsIZipReader : nsISupports
      * The file that represents the zip with which this zip reader was
      * initialized.
      */
     readonly attribute nsIFile file;
 
     /**
      * Closes a zip reader. Subsequent attempts to extract files or read from
      * its input stream will result in an error.
+     *
+     * Subsequent attempts to access a nsIZipEntry obtained from this zip
+     * reader will cause unspecified behavior.
      */
     void close();
 
     /**
      * Tests the integrity of the archive by performing a CRC check 
      * on each item expanded into memory.  If an entry is specified
      * the integrity of only that item is tested.  If null (javascript)
      * or EmptyCString() (c++) is passed in the integrity of all items 
diff --git a/modules/libpref/public/nsIPrefBranch.idl b/modules/libpref/public/nsIPrefBranch.idl
--- a/modules/libpref/public/nsIPrefBranch.idl
+++ b/modules/libpref/public/nsIPrefBranch.idl
@@ -405,15 +405,14 @@ interface nsIPrefBranch : nsISupports
    */
   void removeObserver(in string aDomain, in nsIObserver aObserver);
 };
 
 
 %{C++
 
 #define NS_PREFBRANCH_CONTRACTID "@mozilla.org/preferencesbranch;1"
-#define NS_PREFBRANCH_CLASSNAME "Preferences Branch"
 /**
  * Notification sent when a preference changes.
  */
 #define NS_PREFBRANCH_PREFCHANGE_TOPIC_ID "nsPref:changed"
 
 %}
diff --git a/modules/libpref/public/nsIPrefLocalizedString.idl b/modules/libpref/public/nsIPrefLocalizedString.idl
--- a/modules/libpref/public/nsIPrefLocalizedString.idl
+++ b/modules/libpref/public/nsIPrefLocalizedString.idl
@@ -58,11 +58,10 @@ interface nsIPrefLocalizedString : nsISu
   { /* {064d9cee-1dd2-11b2-83e3-d25ab0193c26} */       \
     0x064d9cee,                                        \
     0x1dd2,                                            \
     0x11b2,                                            \
     { 0x83, 0xe3, 0xd2, 0x5a, 0xb0, 0x19, 0x3c, 0x26 } \
   }
 
 #define NS_PREFLOCALIZEDSTRING_CONTRACTID "@mozilla.org/pref-localizedstring;1"
-#define NS_PREFLOCALIZEDSTRING_CLASSNAME "Pref LocalizedString"
 
 %}
diff --git a/modules/libpref/public/nsIPrefService.idl b/modules/libpref/public/nsIPrefService.idl
--- a/modules/libpref/public/nsIPrefService.idl
+++ b/modules/libpref/public/nsIPrefService.idl
@@ -133,17 +133,16 @@ interface nsIPrefService : nsISupports
   { /* {1cd91b88-1dd2-11b2-92e1-ed22ed298000} */       \
     0x91ca2441,                                        \
     0x050f,                                            \
     0x4f7c,                                            \
     { 0x9d, 0xf8, 0x75, 0xb4, 0x0e, 0xa4, 0x01, 0x56 } \
   }
 
 #define NS_PREFSERVICE_CONTRACTID "@mozilla.org/preferences-service;1"
-#define NS_PREFSERVICE_CLASSNAME "Preferences Server"
 
 /**
  * Notification sent before reading the default user preferences files.
  */
 #define NS_PREFSERVICE_READ_TOPIC_ID "prefservice:before-read-userprefs"
 
 /**
  * Notification sent when resetPrefs has been called, but before the actual
diff --git a/modules/libpref/public/nsIRelativeFilePref.idl b/modules/libpref/public/nsIRelativeFilePref.idl
--- a/modules/libpref/public/nsIRelativeFilePref.idl
+++ b/modules/libpref/public/nsIRelativeFilePref.idl
@@ -43,17 +43,16 @@ interface nsIRelativeFilePref : nsISuppo
   { /* {2f977d4f-5485-11d4-87e2-0010a4e75ef2} */       \
     0x2f977d4f,                                        \
     0x5485,                                            \
     0x11d4,                                            \
     { 0x87, 0xe2, 0x00, 0x10, 0xa4, 0xe7, 0x5e, 0xf2 } \
   }
 
 #define NS_RELATIVEFILEPREF_CONTRACTID "@mozilla.org/pref-relativefile;1"
-#define NS_RELATIVEFILEPREF_CLASSNAME "Relative File Pref"
 
 #include "nsComponentManagerUtils.h"
 
 inline nsresult
 NS_NewRelativeFilePref(nsIFile* aFile, const nsACString& relativeToKey, nsIRelativeFilePref** result)
 {
     nsresult rv;
     nsCOMPtr<nsIRelativeFilePref> local(do_CreateInstance(NS_RELATIVEFILEPREF_CONTRACTID, &rv));
diff --git a/netwerk/base/public/nsIBackgroundFileSaver.idl b/netwerk/base/public/nsIBackgroundFileSaver.idl
--- a/netwerk/base/public/nsIBackgroundFileSaver.idl
+++ b/netwerk/base/public/nsIBackgroundFileSaver.idl
@@ -29,32 +29,50 @@ interface nsIFile;
  * Components implementing both nsIBackgroundFileSaver and nsIAsyncOutputStream
  * allow data to be fed directly to the non-blocking output stream, that however
  * may return NS_BASE_STREAM_WOULD_BLOCK in case too much data is being fed.
  * Closing the output stream does not necessarily close the target file, and the
  * Finish method must be called to complete the operation.
  *
  * @remarks Implementations may require the consumer to always call Finish.  If
  *          the object reference is released without calling Finish, a memory
- *          leak may occur, and the target file might be kept locked.
+ *          leak may occur, and the target file might be kept locked. All
+ *          public methods of the interface may only be called from the main
+ *          thread.
  */
-[scriptable, uuid(f2fb4daf-0aba-4b30-9ec0-b7a83ce3b7ab)]
+[scriptable, uuid(17a2ff32-918f-11e2-8fc9-f9626188709b)]
 interface nsIBackgroundFileSaver : nsISupports
 {
   /**
    * This observer receives notifications when the target file name changes and
    * when the operation completes, successfully or not.
    *
    * @remarks A strong reference to the observer is held.  Notification events
    *          are dispatched to the thread that created the object that
    *          implements nsIBackgroundFileSaver.
    */
   attribute nsIBackgroundFileSaverObserver observer;
 
   /**
+   * The SHA256 hash in raw bytes associated with the file that was downloaded.
+   *
+   * @remarks Reading this will throw NS_ERROR_NOT_AVAILABLE unless
+   *          sha256enabled is true and onSaveComplete has been called.
+   */
+  readonly attribute ACString sha256Hash;
+
+  /**
+   * Compute SHA256.
+   *
+   * @remarks This must be set on the main thread before the first call to
+   *          setTarget.
+   */
+  void enableSha256();
+
+  /**
    * Sets the name of the output file to be written.  The output file may
    * already exist, in which case it will be overwritten.  The target can be
    * changed after data has already been fed, in which case the existing file
    * will be moved to the new destination.
    *
    * No file will be written until this function is called at least once.  It's
    * recommended not to feed any data until the output file is set.
    *
diff --git a/netwerk/base/public/nsICryptoFIPSInfo.idl b/netwerk/base/public/nsICryptoFIPSInfo.idl
--- a/netwerk/base/public/nsICryptoFIPSInfo.idl
+++ b/netwerk/base/public/nsICryptoFIPSInfo.idl
@@ -7,10 +7,9 @@
 [scriptable, uuid(99e81922-7318-4431-b3aa-78b3cb4119bb)]
 interface nsICryptoFIPSInfo : nsISupports
 {
     readonly attribute boolean isFIPSModeActive;
 };
 
 %{C++
 #define NS_CRYPTO_FIPSINFO_SERVICE_CONTRACTID "@mozilla.org/crypto/fips-info-service;1"
-#define NS_CRYPTO_FIPSINFO_SERVICE_CLASSNAME "Mozilla Crypto FIPS Info Service"
 %}
diff --git a/netwerk/base/public/nsILoadGroupChild.idl b/netwerk/base/public/nsILoadGroupChild.idl
new file mode 100644
--- /dev/null
+++ b/netwerk/base/public/nsILoadGroupChild.idl
@@ -0,0 +1,40 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsILoadGroup.idl"
+
+/**
+ * nsILoadGroupChild provides a hierarchy of load groups so that the
+ * root load group can be used to conceptually tie a series of loading
+ * operations into a logical whole while still leaving them separate
+ * for the purposes of cancellation and status events.
+ */
+
+[scriptable, uuid(02efe8e2-fbbc-4718-a299-b8a09c60bf6b)]
+interface nsILoadGroupChild : nsISupports
+{
+    /**
+     * The parent of this load group. It is stored with
+     * a nsIWeakReference/nsWeakPtr so there is no requirement for the
+     * parentLoadGroup to out live the child, nor will the child keep a
+     * reference count on the parent.
+     */
+    attribute nsILoadGroup parentLoadGroup;
+
+    /**
+     * The nsILoadGroup associated with this nsILoadGroupChild
+     */
+    readonly attribute nsILoadGroup childLoadGroup;
+
+    /**
+     * The rootLoadGroup is the recursive parent of this
+     * load group where parent is defined as parentlLoadGroup if set
+     * or childLoadGroup.loadGroup as a backup. (i.e. parentLoadGroup takes
+     * precedence.) The nsILoadGroup child is the root if neither parent
+     * nor loadgroup attribute is specified.
+     */
+    readonly attribute nsILoadGroup rootLoadGroup;
+};
+
diff --git a/netwerk/base/public/nsIPrivateBrowsingServiceObsolete.idl b/netwerk/base/public/nsIPrivateBrowsingServiceObsolete.idl
deleted file mode 100644
--- a/netwerk/base/public/nsIPrivateBrowsingServiceObsolete.idl
+++ /dev/null
@@ -1,16 +0,0 @@
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-[scriptable, uuid(7ad4b7f1-5a88-41aa-9b40-713009bc57b3)]
-interface nsIPrivateBrowsingService : nsISupports
-{
-  // This space is intentionally left blank!
-
-  // This is a remnant from the old dying global private browsing service.
-  // You should fix your code to not rely on this interface, as it will
-  // be removed completely soon.
-};
-
diff --git a/netwerk/base/public/nsIRequestObserverProxy.idl b/netwerk/base/public/nsIRequestObserverProxy.idl
--- a/netwerk/base/public/nsIRequestObserverProxy.idl
+++ b/netwerk/base/public/nsIRequestObserverProxy.idl
@@ -10,20 +10,22 @@ interface nsIEventTarget;
 /**
  * A request observer proxy is used to ship data over to another thread
  * specified by the thread's dispatch target. The "true" request observer's
  * methods are invoked on the other thread.
  *
  * This interface only provides the initialization needed after construction.
  * Otherwise, these objects are used simply as nsIRequestObserver's.
  */
-[scriptable, uuid(7df8845f-938a-4437-9ea4-b11b850048f1)]
+[scriptable, uuid(c2b06151-1bf8-4eef-aea9-1532f12f5a10)]
 interface nsIRequestObserverProxy : nsIRequestObserver
 {
     /**
      * Initializes an nsIRequestObserverProxy.
      *
-     * @param observer - receives observer notifications on the other thread
-     * @param target - may be NULL indicating the calling thread's event target
+     * @param observer - receives observer notifications on the main thread
+     * @param context  - the context argument that will be passed to OnStopRequest
+     *                   and OnStartRequest. This has to be stored permanently on
+     *                   initialization because it sometimes can't be
+     *                   AddRef/Release'd off-main-thread.
      */
-    void init(in nsIRequestObserver observer,
-              in nsIEventTarget target);
+    void init(in nsIRequestObserver observer, in nsISupports context);
 };
diff --git a/netwerk/base/public/nsISecureBrowserUI.idl b/netwerk/base/public/nsISecureBrowserUI.idl
--- a/netwerk/base/public/nsISecureBrowserUI.idl
+++ b/netwerk/base/public/nsISecureBrowserUI.idl
@@ -17,10 +17,9 @@ interface nsISecureBrowserUI : nsISuppor
     void setDocShell(in nsIDocShell docShell);
 
     readonly attribute unsigned long state;
     readonly attribute AString tooltipText;
 };
 
 %{C++
 #define NS_SECURE_BROWSER_UI_CONTRACTID "@mozilla.org/secure_browser_ui;1"
-#define NS_SECURE_BROWSER_UI_CLASSNAME "Mozilla Secure Browser UI Handler"
 %}
diff --git a/netwerk/base/public/nsIStrictTransportSecurityService.idl b/netwerk/base/public/nsIStrictTransportSecurityService.idl
--- a/netwerk/base/public/nsIStrictTransportSecurityService.idl
+++ b/netwerk/base/public/nsIStrictTransportSecurityService.idl
@@ -76,13 +76,12 @@ interface nsIStrictTransportSecurityServ
      *                  NO_PERMANENT_STORAGE
      */
     boolean isStsURI(in nsIURI aURI, in uint32_t aFlags);
 
 };
 
 %{C++
 #define NS_STSSERVICE_CONTRACTID "@mozilla.org/stsservice;1"
-#define NS_STSSERVICE_CLASSNAME "stsservice"
 
 #define STS_PERMISSION "sts/use"
 #define STS_SUBDOMAIN_PERMISSION "sts/subd"
 %}
diff --git a/netwerk/base/public/nsIUDPServerSocket.idl b/netwerk/base/public/nsIUDPServerSocket.idl
new file mode 100644
--- /dev/null
+++ b/netwerk/base/public/nsIUDPServerSocket.idl
@@ -0,0 +1,163 @@
+/* vim:set ts=4 sw=4 et cindent: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+#include "nsINetAddr.idl"
+
+interface nsIUDPServerSocketListener;
+interface nsIUDPMessage;
+interface nsISocketTransport;
+interface nsIOutputStream;
+
+%{ C++
+#include "mozilla/net/DNS.h"
+%}
+native NetAddr(mozilla::net::NetAddr);
+[ptr] native NetAddrPtr(mozilla::net::NetAddr);
+
+/**
+ * nsIUDPServerSocket
+ *
+ * An interface to a server socket that can accept incoming connections.
+ */
+[scriptable, uuid(c2a38bd0-024b-4ae8-bcb2-20d766b54389)]
+interface nsIUDPServerSocket : nsISupports
+{
+    /**
+     * init
+     *
+     * This method initializes a server socket.
+     *
+     * @param aPort
+     *        The port of the server socket.  Pass -1 to indicate no preference,
+     *        and a port will be selected automatically.
+     * @param aLoopbackOnly
+     *        If true, the server socket will only respond to connections on the
+     *        local loopback interface.  Otherwise, it will accept connections
+     *        from any interface.  To specify a particular network interface,
+     *        use initWithAddress.
+     */
+    void init(in long aPort, in boolean aLoopbackOnly);
+
+    /**
+     * initWithAddress
+     *
+     * This method initializes a server socket, and binds it to a particular
+     * local address (and hence a particular local network interface).
+     *
+     * @param aAddr
+     *        The address to which this server socket should be bound.
+     */
+    [noscript] void initWithAddress([const] in NetAddrPtr aAddr);
+
+    /**
+     * close
+     *
+     * This method closes a server socket.  This does not affect already
+     * connected client sockets (i.e., the nsISocketTransport instances
+     * created from this server socket).  This will cause the onStopListening
+     * event to asynchronously fire with a status of NS_BINDING_ABORTED.
+     */
+    void close();
+
+    /**
+     * asyncListen
+     *
+     * This method puts the server socket in the listening state.  It will
+     * asynchronously listen for and accept client connections.  The listener
+     * will be notified once for each client connection that is accepted.  The
+     * listener's onSocketAccepted method will be called on the same thread
+     * that called asyncListen (the calling thread must have a nsIEventTarget).
+     *
+     * The listener will be passed a reference to an already connected socket
+     * transport (nsISocketTransport).  See below for more details.
+     *
+     * @param aListener
+     *        The listener to be notified when client connections are accepted.
+     */
+    void asyncListen(in nsIUDPServerSocketListener aListener);
+
+    /**
+     * Returns the port of this server socket.
+     */
+    readonly attribute long port;
+
+    /**
+     * Returns the address to which this server socket is bound.  Since a
+     * server socket may be bound to multiple network devices, this address
+     * may not necessarily be specific to a single network device.  In the
+     * case of an IP socket, the IP address field would be zerod out to
+     * indicate a server socket bound to all network devices.  Therefore,
+     * this method cannot be used to determine the IP address of the local
+     * system.  See nsIDNSService::myHostName if this is what you need.
+     */
+    [noscript] NetAddr getAddress();
+};
+
+/**
+ * nsIUDPServerSocketListener
+ *
+ * This interface is notified whenever a server socket accepts a new connection.
+ * The transport is in the connected state, and read/write streams can be opened
+ * using the normal nsITransport API.  The address of the client can be found by
+ * calling the nsISocketTransport::GetAddress method or by inspecting
+ * nsISocketTransport::GetHost, which returns a string representation of the
+ * client's IP address (NOTE: this may be an IPv4 or IPv6 string literal).
+ */
+[scriptable, uuid(0500a336-29b2-4df1-9103-911f8ee0a569)]
+interface nsIUDPServerSocketListener : nsISupports
+{
+    /**
+     * onPacketReceived
+     *
+     * This method is called when a client sends an UDP packet.
+     *
+     * @param aServ
+     *        The server socket.
+     * @param aMessage
+     *        The message.
+     */
+    void onPacketReceived(in nsIUDPServerSocket aServ,
+                          in nsIUDPMessage aMessage);
+
+    /**
+     * onStopListening
+     *
+     * This method is called when the listening socket stops for some reason.
+     * The server socket is effectively dead after this notification.
+     *
+     * @param aServ
+     *        The server socket.
+     * @param aStatus
+     *        The reason why the server socket stopped listening.  If the
+     *        server socket was manually closed, then this value will be
+     *        NS_BINDING_ABORTED.
+     */
+    void onStopListening(in nsIUDPServerSocket aServ, in nsresult aStatus);
+};
+
+/**
+ * nsIUDPMessage
+ *
+ * This interface is used to encapsulate an incomming UDP message
+ */
+[scriptable, uuid(1587698a-60b6-4a8d-9df9-708cd793e24b)]
+interface nsIUDPMessage : nsISupports
+{
+    /**
+     * Address of the source of the message
+     */
+    readonly attribute nsINetAddr fromAddr;
+
+    /**
+     * Data of the message
+     */
+    readonly attribute ACString data;
+
+    /**
+     * Stream to send a response
+     */
+    readonly attribute nsIOutputStream outputStream;
+};
diff --git a/netwerk/cookie/nsICookiePermission.idl b/netwerk/cookie/nsICookiePermission.idl
--- a/netwerk/cookie/nsICookiePermission.idl
+++ b/netwerk/cookie/nsICookiePermission.idl
@@ -26,16 +26,17 @@ interface nsICookiePermission : nsISuppo
   /**
    * additional values for nsCookieAccess which may not match
    * nsIPermissionManager. Keep 3-7 available to allow nsIPermissionManager to
    * add values without colliding. ACCESS_SESSION is not directly returned by
    * any methods on this interface.
    */
   const nsCookieAccess ACCESS_SESSION = 8;
   const nsCookieAccess ACCESS_ALLOW_FIRST_PARTY_ONLY = 9;
+  const nsCookieAccess ACCESS_LIMIT_THIRD_PARTY = 10;
 
   /**
    * setAccess
    *
    * this method is called to block cookie access for the given URI.  this
    * may result in other URIs being blocked as well (e.g., URIs which share
    * the same host name).
    *
diff --git a/netwerk/mime/nsIMIMEHeaderParam.idl b/netwerk/mime/nsIMIMEHeaderParam.idl
--- a/netwerk/mime/nsIMIMEHeaderParam.idl
+++ b/netwerk/mime/nsIMIMEHeaderParam.idl
@@ -7,45 +7,48 @@
  
 /*
  * This interface allows any module to access the routine 
  * for MIME header parameter parsing (RFC 2231/5987)
  */
 
 #include "nsISupports.idl"
 
-[scriptable, uuid(ddbbdfb8-a1c0-4dd5-a31b-5d2a7a3bb6ec)]
+[scriptable, uuid(9c9252a1-fdaf-40a2-9c2b-a3dc45e28dde)]
 interface nsIMIMEHeaderParam : nsISupports {
 
   /** 
    * Given the value of a single header field  (such as
    * Content-Disposition and Content-Type) and the name of a parameter
    * (e.g. filename, name, charset), returns the value of the parameter.
-   * The value is obtained by decoding RFC 2231-style encoding,
+   * The value is obtained by decoding RFC 2231/5987-style encoding,
    * RFC 2047-style encoding, and converting to UniChar(UTF-16)
    * from charset specified in RFC 2231/2047 encoding, UTF-8, 
    * <code>aFallbackCharset</code>, the locale charset as fallback if
    * <code>TryLocaleCharset</code> is set, and null-padding as last resort
    * if all else fails.
    *
    * <p> 
    * This method internally invokes <code>getParameterInternal</code>, 
    * However, it does not stop at decoding RFC 2231 (the task for
    * <code>getParameterInternal</code> but tries to cope
    * with several non-standard-compliant cases mentioned below.
    *
    * <p>
-   * Note that a lot of MUAs and HTTP servers put RFC 2047-encoded parameters 
-   * in mail headers and HTTP headers. Unfortunately, this includes Mozilla 
-   * as of 2003-05-30. Even more standard-ignorant MUAs, web servers and 
-   * application servers put 'raw 8bit characters'. This will try to cope 
-   * with all these cases as gracefully as possible. Additionally, it 
-   * returns the language tag if the parameter is encoded per RFC 2231 and 
+   * Note that a lot of MUAs put RFC 2047-encoded parameters. Unfortunately,
+   * this includes Mozilla as of 2003-05-30. Even more standard-ignorant MUAs,
+   * web servers and application servers put 'raw 8bit characters'. This will
+   * try to cope with all these cases as gracefully as possible. Additionally,
+   * it returns the language tag if the parameter is encoded per RFC 2231 and 
    * includes lang.
    *
+   * <p>
+   * Note that GetParameterHTTP skips some of the workarounds used for
+   * mail (MIME) header fields, and thus SHOULD be used from non-mail
+   * code.
    *
    *
    * @param  aHeaderVal        a header string to get the value of a parameter 
    *                           from.
    * @param  aParamName        the name of a MIME header parameter (e.g. 
    *                           filename, name, charset). If empty,  returns 
    *                           the first (possibly) _unnamed_ 'parameter'.
    * @param  aFallbackCharset  fallback charset to try if  the string after
@@ -54,29 +57,28 @@ interface nsIMIMEHeaderParam : nsISuppor
    * @param  aTryLocaleCharset If set, makes yet another attempt 
    *                           with the locale charset.
    * @param  aLang             If non-null, assigns it to a pointer 
    *                           to a string containing the value of language 
    *                           obtained from RFC 2231 parsing. Caller has to 
    *                           nsMemory::Free it.
    * @return the value of <code>aParamName</code> in Unichar(UTF-16).
    */
-
   AString getParameter(in ACString aHeaderVal,
                        in string aParamName,
                        in ACString aFallbackCharset,
                        in boolean aTryLocaleCharset, 
                        out string aLang);
 
 
   /**
-   * Like getParameter, but using RFC 5987 instead of 2231.  This removes
-   * support for header parameter continuations (foo*0, foo*1, etc).
+   * Like getParameter, but disabling encodings and workarounds specific to
+   * MIME (as opposed to HTTP).
    */
-  AString getParameter5987(in ACString aHeaderVal,
+  AString getParameterHTTP(in ACString aHeaderVal,
                            in string aParamName,
                            in ACString aFallbackCharset,
                            in boolean aTryLocaleCharset, 
                            out string aLang);
 
   /** 
    * Given the value of a header field parameter using the encoding
    * defined in RFC 5987, decode the value into a Unicode string, and extract
@@ -84,19 +86,18 @@ interface nsIMIMEHeaderParam : nsISuppor
    *
    * <p> 
    * This function is purposefully picky; it will abort for all (most?)
    * invalid inputs. This is by design. In particular, it does not support
    * any character encodings other than UTF-8, in order not to promote
    * non-interoperable usage.
    *
    * <p>
-   * This code is currently not used inside nsMIMEHeaderParamImpl, but
-   * might be in the future. New code that needs RFC2231/5987
-   * encoding should use this one.
+   * Code that parses HTTP header fields (as opposed to MIME header fields)
+   * should use this function.
    *
    * @param  aParamVal         a header field parameter to decode.
    * @param  aLang             will be set to the language part (possibly
    *                           empty).
    * @return the decoded parameter value.
    */
   AString decodeRFC5987Param(in ACString aParamVal, 
                              out ACString aLang);
diff --git a/netwerk/protocol/websocket/nsIWebSocketChannel.idl b/netwerk/protocol/websocket/nsIWebSocketChannel.idl
--- a/netwerk/protocol/websocket/nsIWebSocketChannel.idl
+++ b/netwerk/protocol/websocket/nsIWebSocketChannel.idl
@@ -128,9 +128,31 @@ interface nsIWebSocketChannel : nsISuppo
 
     /** 
      * Use to send a binary stream (Blob) to Websocket peer.
      *
      * @param aStream The input stream to be sent.  
      */
     void sendBinaryStream(in nsIInputStream aStream, 
                           in unsigned long length);
+
+    /**
+     * This value determines how often (in milliseconds) websocket keepalive
+     * pings are sent.  If set to 0 (the default), no pings are ever sent.
+     *
+     * This value can currently only be set before asyncOpen is called, else 
+     * NS_ERROR_IN_PROGRESS is thrown.
+     *
+     * Be careful using this setting: ping traffic can consume lots of power and
+     * bandwidth over time.
+     */
+    attribute unsigned long pingInterval;
+
+    /**
+     * This value determines how long (in milliseconds) the websocket waits for
+     * the server to reply to a ping that has been sent.
+     *
+     * This value can currently only be set before asyncOpen is called, else 
+     * NS_ERROR_IN_PROGRESS is thrown.
+     */
+    attribute unsigned long pingTimeout;
+
 };
diff --git a/netwerk/streamconv/public/nsIAppleFileDecoder.idl b/netwerk/streamconv/public/nsIAppleFileDecoder.idl
--- a/netwerk/streamconv/public/nsIAppleFileDecoder.idl
+++ b/netwerk/streamconv/public/nsIAppleFileDecoder.idl
@@ -3,18 +3,16 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIOutputStream.idl"
 #include "nsIFile.idl"
 
 
 %{C++
-#define NS_APPLEFILEDECODER_CLASSNAME    "Apple Single/Double File decoder"
-
 #define NS_APPLEFILEDECODER_CID                      \
 { /* 3a2bb281-64b8-11d5-9daa-bb433143c53c */         \
     0x3a2bb281,                                      \
     0x64b8,                                          \
     0x11d5,                                          \
     {0x9d, 0xaa, 0xbb, 0x43, 0x31, 0x43, 0xc5, 0x3c} \
 }
 
diff --git a/security/manager/boot/public/nsISecurityUITelemetry.idl b/security/manager/boot/public/nsISecurityUITelemetry.idl
--- a/security/manager/boot/public/nsISecurityUITelemetry.idl
+++ b/security/manager/boot/public/nsISecurityUITelemetry.idl
@@ -1,17 +1,17 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
  *
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
-[scriptable, uuid(d5c7d771-53a7-40e5-8247-fb6a8795cae8)]
+[scriptable, uuid(8c1b56c3-b76b-4180-a59a-fb2586db765d)]
 
 interface nsISecurityUITelemetry : nsISupports {
 
 /*
  * Addon installation warnings
  */
 
 // Firefox prevented this site from asking you to install addon
@@ -38,16 +38,17 @@ const uint32_t WARNING_CONFIRM_ADDON_INS
 // WARNING_CONFIRM_<X> + 1 == WARNING_CONFIRM_<X>_CLICK_THROUGH
 const uint32_t WARNING_CONFIRM_POST_TO_INSECURE_FROM_SECURE = 9;
 const uint32_t WARNING_CONFIRM_POST_TO_INSECURE_FROM_SECURE_CLICK_THROUGH = 10;
 //     removed WARNING_CONFIRM_POST_TO_INSECURE_FROM_INSECURE = 11;
 //     removed WARNING_CONFIRM_POST_TO_INSECURE_FROM_INSECURE_CLICK_THROUGH = 12;
 
 /*
  * Phishing / Malware page warnings
+ * deprecated: we use the _TOP and _FRAME versions below
  */
 
 const uint32_t WARNING_MALWARE_PAGE = 13;
 const uint32_t WARNING_MALWARE_PAGE_WHY_BLOCKED = 14;
 const uint32_t WARNING_MALWARE_PAGE_GET_ME_OUT_OF_HERE = 15;
 const uint32_t WARNING_MALWARE_PAGE_IGNORE_WARNING = 16;
 
 const uint32_t WARNING_PHISHING_PAGE = 17;
@@ -96,10 +97,29 @@ const uint32_t WARNING_GEOLOCATION_REQUE
 
 /*
  * Firefox Update Errors: UI is only thrown after 
  * repeated errors. We only measure when the UI is shown.
  */
 const uint32_t WARNING_INSECURE_UPDATE = 50;
 const uint32_t WARNING_NO_SECURE_UPDATE = 51;
 
+const uint32_t WARNING_MALWARE_PAGE_TOP = 52;
+const uint32_t WARNING_MALWARE_PAGE_TOP_WHY_BLOCKED = 53;
+const uint32_t WARNING_MALWARE_PAGE_TOP_GET_ME_OUT_OF_HERE = 54;
+const uint32_t WARNING_MALWARE_PAGE_TOP_IGNORE_WARNING = 55;
+
+const uint32_t WARNING_PHISHING_PAGE_TOP = 56;
+const uint32_t WARNING_PHISHING_PAGE_TOP_WHY_BLOCKED = 57;
+const uint32_t WARNING_PHISHING_PAGE_TOP_GET_ME_OUT_OF_HERE = 58;
+const uint32_t WARNING_PHISHING_PAGE_TOP_IGNORE_WARNING = 59;
+
+const uint32_t WARNING_MALWARE_PAGE_FRAME = 60;
+const uint32_t WARNING_MALWARE_PAGE_FRAME_WHY_BLOCKED = 61;
+const uint32_t WARNING_MALWARE_PAGE_FRAME_GET_ME_OUT_OF_HERE = 62;
+const uint32_t WARNING_MALWARE_PAGE_FRAME_IGNORE_WARNING = 63;
+
+const uint32_t WARNING_PHISHING_PAGE_FRAME = 64;
+const uint32_t WARNING_PHISHING_PAGE_FRAME_WHY_BLOCKED = 65;
+const uint32_t WARNING_PHISHING_PAGE_FRAME_GET_ME_OUT_OF_HERE = 66;
+const uint32_t WARNING_PHISHING_PAGE_FRAME_IGNORE_WARNING = 67;
 
 };
diff --git a/security/manager/ssl/public/nsIUserCertPicker.idl b/security/manager/ssl/public/nsIUserCertPicker.idl
--- a/security/manager/ssl/public/nsIUserCertPicker.idl
+++ b/security/manager/ssl/public/nsIUserCertPicker.idl
@@ -15,10 +15,9 @@ interface nsIUserCertPicker : nsISupport
                           in long certUsage, // as defined by NSS enum SECCertUsage
                           in boolean allowInvalid,
                           in boolean allowDuplicateNicknames,
                           out boolean canceled);
 };
 
 %{C++
 #define NS_CERT_PICKER_CONTRACTID "@mozilla.org/user_cert_picker;1"
-#define NS_CERT_PICKER_CLASSNAME "Cert Picker Object"
 %}
diff --git a/toolkit/components/alerts/nsIAlertsService.idl b/toolkit/components/alerts/nsIAlertsService.idl
--- a/toolkit/components/alerts/nsIAlertsService.idl
+++ b/toolkit/components/alerts/nsIAlertsService.idl
@@ -2,60 +2,76 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 
 #include "nsISupports.idl"
 #include "nsIObserver.idl"
 
-[scriptable, uuid(e177399e-2e31-4019-aed3-cba63ce9fa99)]
+[scriptable, uuid(160e87e1-d57d-456b-b6ea-17826f6ea7a8)]
 interface nsIAlertsService : nsISupports
 {
    /**
     * Displays a sliding notification window.
-    *    
+    *
     * @param imageUrl       A URL identifying the image to put in the alert.
     * @param title          The title for the alert.
     * @param text           The contents of the alert.
     * @param textClickable  If true, causes the alert text to look like a link
     *                       and notifies the listener when user attempts to 
     *                       click the alert text.
     * @param cookie         A blind cookie the alert will pass back to the 
     *                       consumer during the alert listener callbacks.
     * @param alertListener  Used for callbacks. May be null if the caller 
     *                       doesn't care about callbacks.
     * @param name           The name of the notification. This is currently
     *                       only used on OS X with Growl and Android.
     *                       On OS X with Growl, users can disable notifications
     *                       with a given name. On Android the name is hashed
-    *                       and used as a notification ID.
-    *
+    *                       and used as a notification ID. Notifications will
+    *                       replace previous notifications with the same name.
+    * @param dir            Bidi override for the title. Valid values are
+    *                       "auto", "ltr" or "rtl". Only available on supported
+    *                       platforms.
+    * @param lang           Language of title and text of the alert. Only available
+    *                       on supported platforms.
     * @throws NS_ERROR_NOT_AVAILABLE If the notification cannot be displayed.
     *
     * The following arguments will be passed to the alertListener's observe() 
     * method:
     *   subject - null
     *   topic   - "alertfinished" when the alert goes away
     *             "alertclickcallback" when the text is clicked
+    *             "alertshow" when the alert is shown
     *   data    - the value of the cookie parameter passed to showAlertNotification.
     *
     * @note Depending on current circumstances (if the user's in a fullscreen
     *       application, for instance), the alert might not be displayed at all.
     *       In that case, if an alert listener is passed in it will receive the
     *       "alertfinished" notification immediately.
     */
-   void showAlertNotification(in AString  imageUrl, 
-                              in AString  title, 
-                              in AString  text, 
+   void showAlertNotification(in AString  imageUrl,
+                              in AString  title,
+                              in AString  text,
                               [optional] in boolean textClickable,
                               [optional] in AString cookie,
                               [optional] in nsIObserver alertListener,
-                              [optional] in AString name);
+                              [optional] in AString name,
+                              [optional] in AString dir,
+                              [optional] in AString lang);
 
+   /**
+    * Close alerts created by the service.
+    *
+    * @param name           The name of the notification to close. If no name
+    *                       is provided then only a notification created with
+    *                       no name (if any) will be closed.
+    */
+   void closeAlert([optional] in AString name);
 };
 
 [scriptable, uuid(df1bd4b0-3a8c-40e6-806a-203f38b0bd9f)]
 interface nsIAlertsProgressListener : nsISupports
 {
     /**
      * Called to notify the alert service that progress has occurred for the
      * given notification previously displayed with showAlertNotification().
@@ -77,8 +93,9 @@ interface nsIAlertsProgressListener : ns
     /**
      * Called to cancel and hide the given notification previously displayed
      * with showAlertNotification().
      *
      * @param name         The name of the notification.
      */
     void onCancel(in AString name);
 };
+
diff --git a/toolkit/components/alerts/nsINotificationsList.idl b/toolkit/components/alerts/nsINotificationsList.idl
deleted file mode 100644
--- a/toolkit/components/alerts/nsINotificationsList.idl
+++ /dev/null
@@ -1,26 +0,0 @@
-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-[scriptable, uuid(11e0176a-4a2d-4a90-8dcc-1590eeb1769d)]
-interface nsINotificationsList : nsISupports
-{
-    /**
-     * Adds a notification to the registration dictionary.
-     *
-     * @param aName The name of the notification we might be sending.
-     * @param aEnabled Indicates if the notification is enabled by default.
-     */
-    void addNotification(in AString aName, in boolean aEnabled);
-
-    /**
-     * Checks to see if a paticular notification has already been registered.
-     *
-     * @param aName The name of the notification we are checking against.
-     */
-    boolean isNotification(in AString aName);
-};
-
diff --git a/toolkit/components/passwordmgr/nsILoginManager.idl b/toolkit/components/passwordmgr/nsILoginManager.idl
--- a/toolkit/components/passwordmgr/nsILoginManager.idl
+++ b/toolkit/components/passwordmgr/nsILoginManager.idl
@@ -7,17 +7,17 @@
 
 interface nsIURI;
 interface nsILoginInfo;
 interface nsIAutoCompleteResult;
 interface nsIDOMHTMLInputElement;
 interface nsIDOMHTMLFormElement;
 interface nsIPropertyBag;
 
-[scriptable, uuid(1f02142f-7e3f-4d02-b3e0-495c5f83ad7d)]
+[scriptable, uuid(338c8597-1e32-4682-b5c7-cf8142c0bd1d)]
 
 interface nsILoginManager : nsISupports {
 
     /**
      * Store a new login in the login manager.
      *
      * @param aLogin
      *        The login to be added.
@@ -235,15 +235,21 @@ interface nsILoginManager : nsISupports 
      */
     void searchLogins(out unsigned long count, in nsIPropertyBag matchData,
                       [retval, array, size_is(count)] out nsILoginInfo logins);
 
    /**
     * True when a master password prompt is being displayed.
     */
     readonly attribute boolean uiBusy;
+
+   /**
+    * True when the master password has already been entered, and so a caller
+    * can ask for decrypted logins without triggering a prompt.
+    */
+    readonly attribute boolean isLoggedIn;
 };
 
 %{C++
 
 #define NS_LOGINMANAGER_CONTRACTID "@mozilla.org/login-manager;1"
 
 %}
diff --git a/toolkit/components/passwordmgr/nsILoginManagerStorage.idl b/toolkit/components/passwordmgr/nsILoginManagerStorage.idl
--- a/toolkit/components/passwordmgr/nsILoginManagerStorage.idl
+++ b/toolkit/components/passwordmgr/nsILoginManagerStorage.idl
@@ -4,17 +4,17 @@
 
 
 #include "nsISupports.idl"
 
 interface nsIFile;
 interface nsILoginInfo;
 interface nsIPropertyBag;
 
-[scriptable, uuid(32a4f9f1-60a8-4971-b54e-71ad661483ae)]
+[scriptable, uuid(d9fee9e2-c649-4c47-8c85-90fbbb5ccf67)]
 
 /*
  * NOTE: This interface is intended to be implemented by modules
  *       providing storage mechanisms for the login manager.
  *       Other code should use the login manager's interfaces
  *       (nsILoginManager), and should not call storage modules
  *       directly.
  */
@@ -251,9 +251,15 @@ interface nsILoginManagerStorage : nsISu
     *        realm, specify null.
     */
    unsigned long countLogins(in AString aHostname, in AString aActionURL,
                              in AString aHttpRealm);
    /**
     * True when a master password prompt is being shown.
     */
     readonly attribute boolean uiBusy;
+
+   /**
+    * True when the master password has already been entered, and so a caller
+    * can ask for decrypted logins without triggering a prompt.
+    */
+    readonly attribute boolean isLoggedIn;
 };
diff --git a/toolkit/components/places/mozIAsyncHistory.idl b/toolkit/components/places/mozIAsyncHistory.idl
--- a/toolkit/components/places/mozIAsyncHistory.idl
+++ b/toolkit/components/places/mozIAsyncHistory.idl
@@ -6,17 +6,17 @@
 
 interface nsIURI;
 interface nsIVariant;
 
 %{C++
 #include "jsapi.h"
 %}
 
-[scriptable, uuid(1a3b1260-4bdb-45d0-a306-dc377dd9baa4)]
+[scriptable, uuid(41e4ccc9-f0c8-4cd7-9753-7a38514b8488)]
 interface mozIVisitInfo : nsISupports
 {
   /**
    * The machine-local (internal) id of the visit.
    */
   readonly attribute long long visitId;
 
   /**
@@ -31,23 +31,16 @@ interface mozIVisitInfo : nsISupports
    * @see nsINavHistory.idl
    */
   readonly attribute unsigned long transitionType;
 
   /**
    * The referring URI of this visit.  This may be null.
    */
   readonly attribute nsIURI referrerURI;
-
-  /**
-   * The sessionId of this visit.
-   *
-   * @see nsINavHistory.idl
-   */
-  readonly attribute long long sessionId;
 };
 
 [scriptable, uuid(ad83e137-c92a-4b7b-b67e-0a318811f91e)]
 interface mozIPlaceInfo : nsISupports
 {
   /**
    * The machine-local (internal) id of the place.
    */
diff --git a/toolkit/components/places/nsIBrowserHistory.idl b/toolkit/components/places/nsIBrowserHistory.idl
--- a/toolkit/components/places/nsIBrowserHistory.idl
+++ b/toolkit/components/places/nsIBrowserHistory.idl
@@ -5,18 +5,18 @@
 
 /*
  * browser-specific interface to global history
  */
 
 #include "nsISupports.idl"
 #include "nsIGlobalHistory2.idl"
 
-[scriptable, uuid(d176f8e8-383f-4109-812d-cce015e2d804)]
-interface nsIBrowserHistory : nsIGlobalHistory2
+[scriptable, uuid(20d31479-38de-49f4-9300-566d6e834c66)]
+interface nsIBrowserHistory : nsISupports
 {
     /**
      * Removes a page from global history.
      *
      * @note It is preferrable to use this one rather then RemovePages when
      *       removing less than 10 pages, since it won't start a full batch
      *       operation.
      */
@@ -88,26 +88,9 @@ interface nsIBrowserHistory : nsIGlobalH
      * Visits are removed synchronously, but pages are expired asynchronously
      * off the main-thread.
      *
      * @note The removal happens in a batch. Single removals are not notified,
      *       instead an onClearHistory notification is sent to
      *       nsINavHistoryObserver implementers.
      */
     void removeAllPages();
-
-    /**
-     * Designates the url as having been explicitly typed in by the user.
-     *
-     * @param aURI
-     *        URI of the page to be marked.
-     */
-    void markPageAsTyped(in nsIURI aURI);
-
-    /**
-     * Designates the url as coming from a link explicitly followed by
-     * the user (for example by clicking on it).
-     *
-     * @param aURI
-     *        URI of the page to be marked.
-     */
-    void markPageAsFollowedLink(in nsIURI aURI);
 };
diff --git a/toolkit/components/places/nsIFaviconService.idl b/toolkit/components/places/nsIFaviconService.idl
--- a/toolkit/components/places/nsIFaviconService.idl
+++ b/toolkit/components/places/nsIFaviconService.idl
@@ -1,250 +1,26 @@
 /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIURI;
-interface nsIFaviconDataCallback;
 
-[scriptable, uuid(8062a652-e0ea-4a50-b204-a0dde133de0e)]
+[scriptable, uuid(e81e0b0c-b9f1-4c2e-8f3c-b809933cf73c)]
 interface nsIFaviconService : nsISupports
 {
-  /**
-   * Declares that a given page uses a favicon with the given URI.
-   *
-   * Will create an entry linking the favicon URI to the page, regardless
-   * of whether we have data for that icon.  You can populate it later with
-   * SetFaviconData.  However, remember that favicons must only be associated
-   * with a visited web page, a bookmark, or a "place:" URI.  Trying to
-   * associate the icon to any other page will throw.
-   *
-   * This will send out history pageChanged notification if the new favicon has
-   * any data and it's different from the old associated favicon.  This means
-   * that you should try to set data before calling this method if you have it,
-   * otherwise it won't fire any notifications.
-   *
-   * @param aPageURI
-   *        URI of the page whose favicon is being set.
-   * @param aFaviconURI
-   *        URI of the favicon to associate with the page.
-   * @throws NS_ERROR_NOT_AVAILABLE if aPageURI doesn't exist in the database.
-   *
-   * @deprecated Use mozIAsyncFavicons::setAndFetchFaviconForPage
-   */
-  void setFaviconUrlForPage(in nsIURI aPageURI,
-                            in nsIURI aFaviconURI);
-
   // The favicon is being loaded from a private browsing window
   const unsigned long FAVICON_LOAD_PRIVATE = 1;
   // The favicon is being loaded from a non-private browsing window
   const unsigned long FAVICON_LOAD_NON_PRIVATE = 2;
 
   /**
-   * Same as SetFaviconUrlForPage except that this also attempts to fetch and
-   * save the icon data by loading the favicon URI through an async network
-   * request.
-   *
-   * If the icon data already exists, we won't normally try to re-load the
-   * icon.  If the icon is in the failed favicon cache we won't do anything.
-   * Use forceReload to force a reload of the data.  This will also eventually
-   * remove the favicon from the failed cache, if the reload succeeds.
-   *
-   * This function will only save favicons for "good" URIs, as defined by what
-   * gets added to history or is a bookmark.  For "bad" URIs, this function
-   * will succeed but do nothing.  This function will also ignore the error page
-   * favicon URI (see FAVICON_ERRORPAGE_URL below).
-   * Icons that fail to load will automatically be added to the failed favicon
-   * cache.
-   *
-   * This function will not save favicons for non-bookmarked URIs when
-   * history is disabled.  The rest of the functions
-   * here will always store favicons even when history is disabled.
-   *
-   * @param aPageURI
-   *        URI of the page whose favicon is being set.
-   * @param aFaviconURI
-   *        URI of the favicon to associate with the page.
-   * @param aForceReload
-   *        Unset is normal behavior, we will only try to reload the favicon
-   *        if we don't have it or if it has expired from the cache.  If set,
-   *        it will always try to reload the favicon.
-   * @param aFaviconLoadType
-   *        Set to FAVICON_LOAD_PRIVATE if the favicon is loaded from a private
-   *        browsing window.  Set to FAVICON_LOAD_NON_PRIVATE otherwise.
-   * @param aCallback
-   *        Once we're done setting and/or loading the favicon, we invoke this
-   *        callback.
-   *
-   * @deprecated Use mozIAsyncFavicons::setAndFetchFaviconForPage
-   */
-  [deprecated]
-  void setAndLoadFaviconForPage(in nsIURI aPageURI,
-                                in nsIURI aFaviconURI,
-                                in boolean aForceReload,
-                                in unsigned long aFaviconLoadType,
-                                [optional] in nsIFaviconDataCallback aCallback);
-
-  /**
-   * Stores the data for a given favicon URI.
-   *
-   * You can set the data even if you haven't called SetFaviconUrlForPage
-   * yet.  It will be stored but will not be associated with any page.
-   * However, any favicons not associated with a visited web page, bookmark,
-   * or "place:" URI will be expired when history expiration runs.  This might
-   * happen at any time, so you should not let the message loop run before
-   * you associate the icon or it may get deleted.
-   *
-   * It is best to set the favicon data, and then associate it with a page using
-   * setFaviconUrlForPage, otherwise it won't notify about the change.
-   *
-   * It's better to not use this function for chrome: icon URIs since you can
-   * reference the chrome image yourself. GetFaviconLinkForIcon/Page will ignore
-   * any associated data if the favicon URI is "chrome:" and just return the
-   * same chrome URI.
-   *
-   * This function does NOT send out notifications that the data has changed.
-   * Pages using this favicons that are visible in history or bookmarks views
-   * will keep the old icon until they have been refreshed by other means.
-   *
-   * This function tries to optimize the favicon size, if it is bigger
-   * than a defined limit we will try to convert it to a 16x16 png image.
-   * If the conversion fails and favicon is still bigger than our max accepted
-   * size it won't be saved.
-   *
-   * @param aFaviconURI
-   *        URI of the favicon whose data is being set.
-   * @param aData
-   *        Binary contents of the favicon to save
-   * @param aDataLength
-   *        Length of binary data
-   * @param aMimeType
-   *        MIME type of the data to store.  This is important so that we know
-   *        what to report when the favicon is used.  You should always set this
-   *        param unless you are clearing an icon.
-   * @param aExpiration
-   *        Time in microseconds since the epoch when this favicon expires.
-   *        Until this time, we won't try to load it again.
-   * @throws NS_ERROR_FAILURE
-   *         Thrown if the favicon is overbloated and won't be saved to the db.
-   *
-   * @deprecated Use mozIAsyncFavicons::replaceFaviconData
-   */
-  void setFaviconData(in nsIURI aFaviconURI,
-                      [const,array,size_is(aDataLen)] in octet aData,
-                      in unsigned long aDataLen,
-                      in AUTF8String aMimeType,
-                      in PRTime aExpiration);
-
-  /**
-   * Same as setFaviconData but the data is provided by a string
-   * containing a data URL.
-   *
-   * @see setFaviconData
-   *
-   * @param aFaviconURI
-   *        URI of the favicon whose data is being set.
-   * @param aDataURL
-   *        string containing a data URL that represents the contents of
-   *        the favicon to save
-   * @param aExpiration
-   *        Time in microseconds since the epoch when this favicon expires.
-   *        Until this time, we won't try to load it again.
-   * @throws NS_ERROR_FAILURE
-   *         Thrown if the favicon is overbloated and won't be saved to the db.
-   *
-   * @deprecated Use mozIAsyncFavicons::replaceFaviconDataFromDataURL
-   */
-  void setFaviconDataFromDataURL(in nsIURI aFaviconURI,
-                                 in AString aDataURL,
-                                 in PRTime aExpiration);
-
-  /**
-   * Retrieves the given favicon data.  Throws if we don't have data.
-   *
-   * If there is no data but we have an entry for this favicon, aDataLen will
-   * be 0 and aData will be NULL.
-   *
-   * @param aFaviconURI
-   *        URI of the favicon whose data is being read
-   * @param aData
-   *        Output parameter where the binary favicon data will be placed.
-   *        This will be null if we have this URI but have no data associated
-   *        with it.
-   * @param aDataLen
-   *        Output parameter where the size of the binary data will be placed.
-   * @param aMimeType
-   *        Output parameter where the MIME type will be placed.
-   * @throws NS_ERROR_NOT_AVAILABLE
-   *         Thrown when we have never heard of this favicon URI.
-   *
-   * @deprecated Use mozIAsyncFavicons::getFaviconDataForPage
-   */
-  void getFaviconData(in nsIURI aFaviconURI,
-                      out AUTF8String aMimeType,
-                      [optional] out unsigned long aDataLen,
-                      [array,retval,size_is(aDataLen)] out octet aData);
-
-  /**
-   * Same as getFaviconData, but returns data as a string containing a data url.
-   *
-   * @see getFaviconData
-   *
-   * @param aFaviconURI
-   *        URI of the favicon whose data is being read
-   * @return A data URL containing the data of the favicon. This will be
-   *         null if we have this URL but have no data associated with it.
-   * @throws NS_ERROR_NOT_AVAILABLE
-   *         Thrown when we have never heard of this favicon URL.
-   *
-   * @deprecated Use mozIAsyncFavicons::getFaviconDataForPage
-   */
-  AString getFaviconDataAsDataURL(in nsIURI aFaviconURI);
-
-  /**
-   * Retrieves the URI of the favicon for the given page.
-   *
-   * @param aPageURI
-   *        URI of the page whose favicon is desired
-   * @return The URI of the favicon associated with that page. Returning a
-   *         URI here does NOT mean that we have data for this favicon, only
-   *         that we know what the favicon should be.
-   * @throws NS_ERROR_NOT_AVAILABLE
-   *         When the page is not found or it has no favicon.
-   *
-   * @deprecated Use mozIAsyncFavicons::getFaviconURLForPage
-   */
-  nsIURI getFaviconForPage(in nsIURI aPageURI);
-
-  /**
-   * Same as getFaviconLinkForIcon but this adds an extra level of indirection,
-   * looking up the favicon based on the page URI and using the default if not
-   * found.
-   *
-   * @see getFaviconLinkForIcon
-   *
-   * @param aPageURI
-   *        URI of the page whose favicon is desired
-   * @return A URI that will give you the icon image.  This is NOT the URI of
-   *         the icon as set on the page, but a URI that will give you the
-   *         data out of the favicon service.  For a normal page with a
-   *         favicon we've stored, this will be an annotation URI which will
-   *         then cause the corresponding favicon data to be loaded async from
-   *         this service.  For pages where we don't have a favicon, this will
-   *         be a chrome URI of the default icon. For chrome URIs, the
-   *         output will be the same as the input.
-   *
-   * @deprecated Use mozIAsyncFavicons::getFaviconURLForPage and getFaviconLinkForIcon
-   */
-  nsIURI getFaviconImageForPage(in nsIURI aPageURI);
-
-  /**
    * For a given icon URI, this will return a URI that will result in the image.
    * In most cases, this is an annotation URI.  For chrome URIs, this will do
    * nothing but returning the input URI.
    *
    * No validity checking is done. If you pass an icon URI that we've never
    * seen, you'll get back a URI that references an invalid icon. The moz-anno
    * protocol handler's special case for "favicon" annotations will resolve
    * invalid icons to the default icon, although without caching.
@@ -351,12 +127,13 @@ interface nsIFaviconDataCallback : nsISu
 };
 
 %{C++
 
 /**
  * Notification sent when all favicons are expired.
  */
 #define NS_PLACES_FAVICONS_EXPIRED_TOPIC_ID "places-favicons-expired"
+
 #define FAVICON_DEFAULT_URL "chrome://mozapps/skin/places/defaultFavicon.png"
 #define FAVICON_ERRORPAGE_URL "chrome://global/skin/icons/warning-16.png"
 
 %}
diff --git a/toolkit/components/places/nsILivemarkService.idl b/toolkit/components/places/nsILivemarkService.idl
deleted file mode 100644
--- a/toolkit/components/places/nsILivemarkService.idl
+++ /dev/null
@@ -1,185 +0,0 @@
-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
-/* This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
-
-#include "nsISupports.idl"
-
-/**
- * WARNING:
- *
- * This interface is deprecated and will be removed in a future release.
- * Use the mozIAsyncLivemarks interface instead.
- */
-
-interface nsIURI;
-interface nsINavBookmarksService;
-
-[scriptable, uuid(62a5fe00-d85c-4a63-aef7-176d8f1b189d)]
-interface nsILivemarkService : nsISupports
-{
-  /**
-   * Starts the livemark refresh timer.
-   * Being able to manually control this allows activity such
-   * as bookmarks import to occur without kicking off HTTP traffic.
-   *
-   * @note This is a no-op and exists just as a compatibility shim.
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  void start();
-
-  /**
-   * Stop the livemark refresh timer.
-   *
-   * @note This is a no-op and exists just as a compatibility shim.
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  void stopUpdateLivemarks();
-
-  /**
-   * Creates a new livemark
-   * @param folder      The id of the parent folder
-   * @param name        The name to show when displaying the livemark
-   * @param siteURI     The URI of the site the livemark was created from
-   * @param feedURI     The URI of the actual RSS feed
-   * @param index       The index to insert at, or
-   *                    nsINavBookmarksService.DEFAULT_INDEX to append.
-   * @returns the ID of the folder for the livemark
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  long long createLivemark(in long long folder,
-                           in AString name,
-                           in nsIURI siteURI,
-                           in nsIURI feedURI,
-                           in long index);
-
-  /**
-   * Same as above, use during startup to avoid HTTP traffic
-   */
-  long long createLivemarkFolderOnly(in long long folder,
-                                     in AString name,
-                                     in nsIURI siteURI,
-                                     in nsIURI feedURI,
-                                     in long index);
-
-  /**
-   * Determines whether the folder with the given folder ID identifies
-   * a livemark container.
-   *
-   * @param folder    A folder ID
-   *
-   * @returns true if the given folder is a livemark folder, or
-   *          false otherwise
-   *
-   * @throws NS_ERROR_INVALID_ARG if the folder ID isn't known
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  boolean isLivemark(in long long folder);
-
-  /**
-   * Determines whether the feed URI is a currently registered livemark.
-   *
-   * @param aFeedURI
-   *        Feed URI to look for.
-   *
-   * @returns the found livemark folder id, or -1 if nothing was found.
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  long long getLivemarkIdForFeedURI(in nsIURI aFeedURI);
-
-  /**
-   * Gets the URI of the website associated with a livemark container.
-   *
-   * @param container  The folder ID of a livemark container
-   *
-   * @returns nsIURI representing the URI of the website; if the livemark
-   *          container doesn't have a valid site URI, null will be returned
-   *
-   * @throws NS_ERROR_INVALID_ARG if the folder ID isn't known or identifies
-   *         a folder that isn't a livemark container
-   * @throws NS_ERROR_MALFORMED_URI if the site URI annotation has
-   *         somehow been corrupted (and can't be turned into an nsIURI)
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  nsIURI getSiteURI(in long long container);
-
-  /**
-   * Sets the URI of the website associated with a livemark container.
-   *
-   * @param container  The folder ID of a livemark container
-   * @param siteURI    nsIURI object representing the site URI, or null
-   *                   to clear the site URI for this livemark container
-   *
-   * @throws NS_ERROR_INVALID_ARG if the folder ID isn't known or identifies
-   *         a folder that isn't a livemark container; also if the siteURI
-   *         argument isn't a valid nsIURI object (or null)
-   *
-   * @note This is a no-op and exists just as a compatibility shim.
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  void setSiteURI(in long long container, in nsIURI siteURI);
-
-  /**
-   * Gets the URI of the syndication feed associated with a livemark container.
-   *
-   * @param container  The folder ID of a livemark container
-   *
-   * @returns nsIURI representing the URI of the feed; if the livemark
-   *          container doesn't have a valid feed URI, null will be returned
-   *          of the nsIURI object returned will be the empty string.
-   *
-   * @throws NS_ERROR_INVALID_ARG if the folder ID isn't known or identifies
-   *         a folder that isn't a livemark container
-   * @throws NS_ERROR_MALFORMED_URI if the site URI annotation has
-   *         somehow been corrupted (and can't be turned into an nsIURI)
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  nsIURI getFeedURI(in long long container);
-
-  /**
-   * Sets the URI of the feed associated with a livemark container.
-   *
-   * NOTE: The caller is responsible for reloading the livemark after
-   *       changing its feed URI (since the contents are likely to be different
-   *       given a different feed).
-   *
-   * @param container  The folder ID of a livemark container
-   * @param feedURI    nsIURI object representing the syndication feed URI
-   *
-   * @throws NS_ERROR_INVALID_ARG if the folder ID isn't known or identifies
-   *         a folder that isn't a livemark container; also if the feedURI
-   *         argument isn't a valid nsIURI object
-   *
-   * @note This is a no-op and exists just as a compatibility shim.
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  void setFeedURI(in long long container, in nsIURI feedURI);
-
-  /**
-   * Reloads all livemark subscriptions, whether or not they've expired.
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  void reloadAllLivemarks();
-
-  /**
-   * Reloads the livemark with this folder ID, whether or not it's expired.
-   * @param folderID The ID of the folder to be reloaded
-   *
-   * @deprecated use the mozIAsyncLivemarks interface instead.
-   */
-  void reloadLivemarkFolder(in long long folderID);
-};
-
-%{C++
-#define LMANNO_FEEDURI "livemark/feedURI"
-%}
diff --git a/toolkit/components/places/nsINavHistoryService.idl b/toolkit/components/places/nsINavHistoryService.idl
--- a/toolkit/components/places/nsINavHistoryService.idl
+++ b/toolkit/components/places/nsINavHistoryService.idl
@@ -45,21 +45,24 @@ interface nsINavHistoryResultNode : nsIS
    */
   readonly attribute AUTF8String uri;
 
   /**
    * Identifies the type of this node. This node can then be QI-ed to the
    * corresponding specialized result node interface.
    */
   const unsigned long RESULT_TYPE_URI = 0;               // nsINavHistoryResultNode
-  const unsigned long RESULT_TYPE_VISIT = 1;             // nsINavHistoryVisitResultNode
+
+  // Visit nodes are deprecated and unsupported.
+  // This line exists just to avoid reusing the value:
+  // const unsigned long RESULT_TYPE_VISIT = 1;
 
   // Full visit nodes are deprecated and unsupported.
   // This line exists just to avoid reusing the value:
-  // const unsigned long RESULT_TYPE_FULL_VISIT = 2;        // nsINavHistoryFullVisitResultNode
+  // const unsigned long RESULT_TYPE_FULL_VISIT = 2;
 
   // Dynamic containers are deprecated and unsupported.
   // This const exists just to avoid reusing the value:
   // const unsigned long RESULT_TYPE_DYNAMIC_CONTAINER = 4; // nsINavHistoryContainerResultNode
 
   const unsigned long RESULT_TYPE_QUERY = 5;             // nsINavHistoryQueryResultNode
   const unsigned long RESULT_TYPE_FOLDER = 6;            // nsINavHistoryQueryResultNode
   const unsigned long RESULT_TYPE_SEPARATOR = 7;         // nsINavHistoryResultNode
@@ -150,32 +153,16 @@ interface nsINavHistoryResultNode : nsIS
    * For uri nodes, this is a sorted list of the tags, delimited with commans,
    * for the uri represented by this node. Otherwise this is an empty string.
    */
   readonly attribute AString tags;
 };
 
 
 /**
- * When you request RESULT_TYPE_VISIT from query options, you will get this
- * interface for each item, which includes the session ID so that we can
- * group items from the same session together.
- */
-[scriptable, uuid(8e2c5a86-b33d-4fa6-944b-559af7e95fcd)]
-interface nsINavHistoryVisitResultNode : nsINavHistoryResultNode
-{
-  /**
-   * This indicates the session ID of the * visit. This is used for session
-   * grouping when a tree view is sorted by date.
-   */
-  readonly attribute long long sessionId;
-};
-
-
-/**
  * Base class for container results. This includes all types of groupings.
  * Bookmark folders and places queries will be QueryResultNodes which extends
  * these items.
  */
 [scriptable, uuid(62534d3c-1b3f-401e-b3ba-b911f57f8a29)]
 interface nsINavHistoryContainerResultNode : nsINavHistoryResultNode
 {
 
@@ -631,17 +618,17 @@ interface nsINavHistoryObserver : nsISup
    *
    * Normally, transition types of TRANSITION_EMBED (corresponding to images in
    * a page, for example) are not displayed in history results (unless
    * includeHidden is set). Many observers can ignore _EMBED notifications
    * (which will comprise the majority of visit notifications) to save work.
    *
    * @param aVisitID        ID of the visit that was just created.
    * @param aTime           Time of the visit
-   * @param aSessionID      The ID of one connected sequence of visits.
+   * @param aSessionID      No longer supported (always set to 0).
    * @param aReferringID    The ID of the visit the user came from. 0 if empty.
    * @param aTransitionType One of nsINavHistory.TRANSITION_*
    * @param aGUID           The unique ID associated with the page.
    * @param aHidden         Whether the visited page is marked as hidden.
    */
   void onVisit(in nsIURI aURI,
                in long long aVisitID,
                in PRTime aTime,
@@ -1152,17 +1139,17 @@ interface nsINavHistoryQueryOptions : ns
   attribute boolean asyncEnabled;
 
   /**
    * Creates a new options item with the same parameters of this one.
    */
   nsINavHistoryQueryOptions clone();
 };
 
-[scriptable, uuid(562e698d-04f0-4df1-bd5d-1f1e5b84d7ef)]
+[scriptable, uuid(baebc597-9daf-4103-a325-e41ef9e7608a)]
 interface nsINavHistoryService : nsISupports
 {
   /**
    * System Notifications:
    *
    * places-init-complete - Sent once the History service is completely
    *                        initialized successfully.
    * places-database-locked - Sent if initialization of the History service
@@ -1262,16 +1249,33 @@ interface nsINavHistoryService : nsISupp
    * by the history service), but for bookmarks. It declares that the given URI
    * is being opened as a result of following a bookmark. If this URI is loaded
    * soon after this message has been received, that transition will be marked
    * as following a bookmark.
    */
   void markPageAsFollowedBookmark(in nsIURI aURI);
 
   /**
+   * Designates the url as having been explicitly typed in by the user.
+   *
+   * @param aURI
+   *        URI of the page to be marked.
+   */
+  void markPageAsTyped(in nsIURI aURI);
+
+  /**
+   * Designates the url as coming from a link explicitly followed by
+   * the user (for example by clicking on it).
+   *
+   * @param aURI
+   *        URI of the page to be marked.
+   */
+  void markPageAsFollowedLink(in nsIURI aURI);
+
+  /**
    * Gets the stored character-set for an URI.
    *
    * @param aURI
    *        URI to retrieve character-set for
    * @return character-set, empty string if not found
    */
   AString getCharsetForURI(in nsIURI aURI);
 
@@ -1282,54 +1286,24 @@ interface nsINavHistoryService : nsISupp
    *        URI to set the character-set for
    * @param aCharset
    *        character-set to be set
    */
   void setCharsetForURI(in nsIURI aURI, in AString aCharset);
 
   /**
    * Returns true if this URI would be added to the history. You don't have to
-   * worry about calling this, addPageToSession/addURI will always check before
+   * worry about calling this, adding a visit will always check before
    * actually adding the page. This function is public because some components
    * may want to check if this page would go in the history (i.e. for
    * annotations).
    */
   boolean canAddURI(in nsIURI aURI);
 
   /**
-   * Call to manually add a visit for a specific page. This will probably not
-   * be commonly used other than for backup/restore type operations. If the URI
-   * does not have an entry in the history database already, one will be created
-   * with no visits, no title, hidden, not typed.  Adding a visit will
-   * automatically increment the visit count for the visited page and will unhide
-   * it and/or mark it typed according to the transition type.
-   *
-   * @param aURI             Visited page
-   * @param aTime            Time page was visited (microseconds)
-   * @param aReferringURI    The URI of the visit that generated this one. Use
-   *                         null for no referrer.
-   * @param aTranstitionType Type of transition: one of TRANSITION_* above
-   * @param aIsRedirect      True if the given visit redirects to somewhere else.
-   *                         (ie you will create an visit out of here that is a
-   *                         redirect transition). This causes this page to be
-   *                         hidden in normal history views (unless it has been
-   *                         unhidden by visiting it with a non-redirect).
-   * @param aSessionID       The session ID that this page belongs to. Use 0 for
-   *                         no session.
-   * @return The ID of the created visit. This will be 0 if the URI cannot
-   *         be added to history (canAddURI = false) or the visit is session
-   *         persistent (TRANSITION_EMBED).
-   *
-   * @deprecated Use mozIAsyncHistory::updatePlaces
-   */
-  long long addVisit(in nsIURI aURI, in PRTime aTime,
-                     in nsIURI aReferringURI, in long aTransitionType,
-                     in boolean aIsRedirect, in long long aSessionID);
-
-  /**
    * This returns a new query object that you can pass to executeQuer[y/ies].
    * It will be initialized to all empty (so using it will give you all history).
    */
   nsINavHistoryQuery getNewQuery();
 
   /**
    * This returns a new options object that you can pass to executeQuer[y/ies]
    * after setting the desired options.
diff --git a/toolkit/components/telemetry/nsITelemetryPing.idl b/toolkit/components/telemetry/nsITelemetryPing.idl
--- a/toolkit/components/telemetry/nsITelemetryPing.idl
+++ b/toolkit/components/telemetry/nsITelemetryPing.idl
@@ -2,17 +2,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIObserver.idl"
 
 interface nsIFile;
 
-[scriptable, uuid(077ee790-3a9d-11e2-81c1-0800200c9a66)]
+[scriptable, uuid(37fb32f5-d5ed-45e3-8feb-fa085935e732)]
 interface nsITelemetryPing : nsIObserver {
   /**
    * Return the current telemetry payload.
    */
   jsval getPayload();
 
   /**
    * Save histograms to a file.
@@ -28,16 +28,21 @@ interface nsITelemetryPing : nsIObserver
   void gatherStartup();
 
   /**
    * Notify observers when loads and saves finish. Used only for testing.
    */
   void enableLoadSaveNotifications();
 
   /**
+   * Cache the profile directory for later use.
+   */
+  void cacheProfileDirectory();
+
+  /**
    * Inform the ping which AddOns are installed.
    *
    * @param aAddOns - The AddOns.
    */
   void setAddOns(in AString aAddOns);
 
   /**
    * Send a ping to a test server. Used only for testing.
diff --git a/uriloader/exthandler/nsIExternalSharingAppService.idl b/uriloader/exthandler/nsIExternalSharingAppService.idl
--- a/uriloader/exthandler/nsIExternalSharingAppService.idl
+++ b/uriloader/exthandler/nsIExternalSharingAppService.idl
@@ -1,17 +1,16 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsIMIMEInfo.idl"
 
 %{C++
 #define NS_EXTERNALSHARINGAPPSERVICE_CONTRACTID    "@mozilla.org/uriloader/external-sharing-app-service;1"
-#define NS_IEXTERNALSHARINGAPPSERVICE_CLASSNAME "Mozilla Sharing App Service"
 %}
 
 
 [scriptable, uuid(7111f769-53ec-41fd-b314-613661d5b6ba)]
 interface nsISharingHandlerApp : nsIHandlerApp
 {
   void share(in AString data, [optional] in AString title);
 };
diff --git a/uriloader/exthandler/nsIHelperAppLauncherDialog.idl b/uriloader/exthandler/nsIHelperAppLauncherDialog.idl
--- a/uriloader/exthandler/nsIHelperAppLauncherDialog.idl
+++ b/uriloader/exthandler/nsIHelperAppLauncherDialog.idl
@@ -79,10 +79,9 @@ interface nsIHelperAppLauncherDialog : n
                               in wstring aDefaultFileName,
                               in wstring aSuggestedFileExtension,
                               in boolean aForcePrompt);
 };
 
 
 %{C++
 #define NS_HELPERAPPLAUNCHERDLG_CONTRACTID    "@mozilla.org/helperapplauncherdialog;1"
-#define NS_IHELPERAPPLAUNCHERDLG_CLASSNAME "Mozilla Helper App Launcher Confirmation Dialog"
 %}
diff --git a/widget/nsIFilePicker.idl b/widget/nsIFilePicker.idl
--- a/widget/nsIFilePicker.idl
+++ b/widget/nsIFilePicker.idl
@@ -3,32 +3,33 @@
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIFile;
 interface nsIURI;
+interface nsIDOMFile;
 interface nsIDOMWindow;
 interface nsISimpleEnumerator;
 
 [scriptable, function, uuid(0d79adad-b244-49A5-9997-2a8cad93fc44)]
 interface nsIFilePickerShownCallback : nsISupports
 {
  /**
   * Callback which is called when a filepicker is shown and a result
   * is returned.
   *
   * @param aResult One of returnOK, returnCancel, or returnReplace
   */
   void done(in short aResult);
 };
 
-[scriptable, uuid(60e2dfb6-3fc7-4A2C-8137-16bef44536fc)]
+[scriptable, uuid(a6a24df3-d20a-4b6a-96d4-4736b10a51b7)]
 interface nsIFilePicker : nsISupports
 {
   const short modeOpen        = 0;              // Load a file or directory
   const short modeSave        = 1;              // Save a file or directory
   const short modeGetFolder   = 2;              // Select a folder/directory
   const short modeOpenMultiple= 3;              // Load multiple files
 
   const short returnOK        = 0;              // User hit Ok, process selection
@@ -137,16 +138,31 @@ interface nsIFilePicker : nsISupports
   * Get the enumerator for the selected files
   * only works in the modeOpenMultiple mode
   *
   * @return Returns the files currently selected
   */
   readonly attribute nsISimpleEnumerator files;
 
  /**
+  * Get the nsIDOMFile for the file.
+  *
+  * @return Returns the file currently selected as DOMFile
+  */
+  readonly attribute nsIDOMFile domfile;
+
+ /**
+  * Get the enumerator for the selected files
+  * only works in the modeOpenMultiple mode
+  *
+  * @return Returns the files currently selected as DOMFiles
+  */
+  readonly attribute nsISimpleEnumerator domfiles;
+
+ /**
   * Controls whether the chosen file(s) should be added to the system's recent
   * documents list. This attribute will be ignored if the system has no "Recent
   * Docs" concept, or if the application is in private browsing mode (in which
   * case the file will not be added). Defaults to true.
   */
   attribute boolean addToRecentDocs;
 
  /**
diff --git a/widget/nsIMacDockSupport.idl b/widget/nsIMacDockSupport.idl
--- a/widget/nsIMacDockSupport.idl
+++ b/widget/nsIMacDockSupport.idl
@@ -3,16 +3,19 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 
 interface nsIStandaloneNativeMenu;
 
 /**
  * Allow applications to interface with the Mac OS X Dock.
+ *
+ * Applications may indicate progress on their Dock icon. Only one such
+ * progress indicator is available to the entire application.
  */
 
 [scriptable, uuid(8BE66B0C-5F71-4B74-98CF-6C2551B999B1)]
 interface nsIMacDockSupport : nsISupports
 {
   /**
    * Menu to use for application-specific dock menu items.
    */
diff --git a/widget/nsIScreenManager.idl b/widget/nsIScreenManager.idl
--- a/widget/nsIScreenManager.idl
+++ b/widget/nsIScreenManager.idl
@@ -2,17 +2,17 @@
  *
  * This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsISupports.idl"
 #include "nsIScreen.idl"
 
-[scriptable, uuid(B92319E6-9A84-4ca7-A2CC-EEC22EA9854E)]
+[scriptable, uuid(1C195990-FF9E-412B-AFE7-67D1C660BB27)]
 interface nsIScreenManager : nsISupports
 {
     //
     // Returns the screen that contains the rectangle. If the rect overlaps
     // multiple screens, it picks the screen with the greatest area of intersection.
     //
     // The coordinates are in pixels (not twips) and in screen coordinates.
     //
@@ -20,16 +20,36 @@ interface nsIScreenManager : nsISupports
   
     // The screen with the menubar/taskbar. This shouldn't be needed very
     // often.
   readonly attribute nsIScreen primaryScreen;
   
     // Holds the number of screens that are available
   readonly attribute unsigned long numberOfScreens;
 
+    // The default DPI scaling factor of the screen environment (number of
+    // screen pixels corresponding to 1 CSS px, at the default zoom level).
+    //
+    // This is currently fixed at 1.0 on most platforms, but varies on Windows
+    // if the "logical DPI" scaling option in the Display control panel is set
+    // to a value other than 100% (e.g. 125% or 150% are increasingly common
+    // defaults on laptops with high-dpi screens). See bug 851520.
+    //
+    // NOTE that on OS X, this does -not- reflect the "backing scale factor"
+    // used to support Retina displays, which is a per-display property,
+    // not a system-wide scaling factor. The default ratio of CSS pixels to
+    // Cocoa points remains 1:1, even on a Retina screen where one Cocoa point
+    // corresponds to two device pixels. (This is exposed via other APIs:
+    // see window.devicePixelRatio).
+    //
+    // NOTE also that on Linux, this does -not- currently reflect changes
+    // to the system-wide (X11 or Gtk2) DPI value, as Firefox does not yet
+    // honor these settings. See bug 798362 and bug 712898.
+  readonly attribute float systemDefaultScale;
+
     // Returns the nsIScreen instance for the given native widget pointer;
     // the pointer is specific to the particular widget implementation,
     // and is generally of the same type that NS_NATIVE_WINDOW is.
   [noscript] nsIScreen screenForNativeWidget ( in voidPtr nativeWidget );
 };
 
 
 %{ C++
diff --git a/widget/nsIWinMetroUtils.idl b/widget/nsIWinMetroUtils.idl
--- a/widget/nsIWinMetroUtils.idl
+++ b/widget/nsIWinMetroUtils.idl
@@ -7,17 +7,17 @@
 
 /**
  * Integration with the "Metro"/"Modern" UI environment in Windows 8.
  *
  * Note: browser/metro/base/content/browser-scripts.js contains a stub
  * implementation of this interface for non-Windows systems, for testing and
  * development purposes only.
  */
-[scriptable, uuid(b2452440-71c6-41a7-8eda-48004d725001)]
+[scriptable, uuid(ac813696-3b0a-4259-bce1-1d078021ebbe)]
 interface nsIWinMetroUtils : nsISupports
 {
   /* Fullscreen landscape orientation */
   const long fullScreenLandscape = 0;
   /* Larger snapped state */
   const long filled = 1;
   /* Smaller snapped state */
   const long snapped = 2;
@@ -40,16 +40,21 @@ interface nsIWinMetroUtils : nsISupports
   readonly attribute boolean immersive;
 
   /**
    * Determine if the user prefers left handed or right handed input.
    */
   readonly attribute long handPreference;
 
   /**
+   * Determine the activation URI
+   */
+  readonly attribute AString activationURI;
+
+  /**
    * Attempts to unsnap the application from snapped state to filled state
    */
    void unsnap();
 
 
    /**
     * Show the settings flyout
     */
@@ -96,16 +101,39 @@ interface nsIWinMetroUtils : nsISupports
    * Determines if a tile is pinned to the Windows 8 start screen.
    * 
    * @param aTileID An ID which may have been pinned with pinTileAsync
    * @return true if the tile is pinned
    */
   bool isTilePinned(in AString aTileID);
 
   /**
+   * Stores the sync info securely
+   *
+   * @param aEmail The sync account email
+   * @param aPassword The sync account password
+   * @param aKey The sync account key
+   */
+  void storeSyncInfo(in AString aEmail, in AString aPassword, in AString aKey);
+
+  /**
+   * Loads the sync info
+   *
+   * @param aEmail The sync account email
+   * @param aPassword The sync account password
+   * @param aKey The sync account key
+   */
+  void loadSyncInfo(out AString aEmail, out AString aPassword, out AString aKey);
+
+  /**
+   * Clears the stored sync info if any.
+   */
+  void clearSyncInfo();
+
+  /**
    * Soft keyboard attributes. Used in unison with shown/hidden observer
    * events sent via FrameworkView.
    *
    * keyboardVisible - returns true if the soft keyboard is currently
    * displayed, false otherwise.
    * keyboardX, keyboardY, keyboardWidth, keyboardHeight - occlude rect
    * of the keyboard when displayed in device independent pixels.
    */
diff --git a/widget/windows/winrt/UIABridge.idl b/widget/windows/winrt/UIABridge.idl
--- a/widget/windows/winrt/UIABridge.idl
+++ b/widget/windows/winrt/UIABridge.idl
@@ -5,27 +5,19 @@
 #define DO_NO_IMPORTS 1
 
 import "oaidl.idl";
 import "oleacc.idl";
 import "Inspectable.idl";
 
   [uuid(343159D8-B1E9-4464-82FC-B12C7A473CF1)]
   interface IUIABridge : IInspectable {
-#if defined(x86_64)
-    HRESULT Init([in] IInspectable* view, [in] IInspectable* window, [in] __int64 inner);
-#else
-    HRESULT Init([in] IInspectable* view, [in] IInspectable* window, [in] __int32 inner);
-#endif
+    HRESULT Init([in] IInspectable* view, [in] IInspectable* window, [in] LONG_PTR inner);
     HRESULT Disconnect();
   };
 
   [uuid(2153B284-F946-4209-908D-AB8AA1FED09C)]
   interface IUIAElement : IInspectable {
-#if defined(x86_64)
-    HRESULT SetFocusInternal([in] __int64 accessible);
-#else
-    HRESULT SetFocusInternal([in] __int32 accessible);
-#endif
+    HRESULT SetFocusInternal([in] LONG_PTR accessible);
     HRESULT CheckFocus([in] int X, [in] int y);
     HRESULT ClearFocus();
     HRESULT HasFocus([out, retval] VARIANT_BOOL * hasFocus);
   };
diff --git a/xpcom/base/nsIConsoleMessage.idl b/xpcom/base/nsIConsoleMessage.idl
--- a/xpcom/base/nsIConsoleMessage.idl
+++ b/xpcom/base/nsIConsoleMessage.idl
@@ -14,11 +14,9 @@
 interface nsIConsoleMessage : nsISupports
 {
     [binaryname(MessageMoz)] readonly attribute wstring message;
 };
 
 %{ C++
 #define NS_CONSOLEMESSAGE_CID \
 { 0x56c9d666, 0x1dd2, 0x11b2, { 0xb4, 0x3c, 0xa8, 0x4b, 0xf3, 0xb3, 0xec, 0xbb }}
-
-#define NS_CONSOLEMESSAGE_CONTRACTID "@mozilla.org/consolemessage;1"
 %}
diff --git a/xpcom/base/nsIConsoleService.idl b/xpcom/base/nsIConsoleService.idl
--- a/xpcom/base/nsIConsoleService.idl
+++ b/xpcom/base/nsIConsoleService.idl
@@ -42,16 +42,14 @@ interface nsIConsoleService : nsISupport
     /**
      * Clear the message buffer (e.g. for privacy reasons).
      */
     void reset();
 };
 
 
 %{ C++
-#define NS_CONSOLESERVICE_CLASSNAME "Console Service"
-
 #define NS_CONSOLESERVICE_CID \
 { 0x7e3ff85c, 0x1dd2, 0x11b2, { 0x8d, 0x4b, 0xeb, 0x45, 0x2c, 0xb0, 0xff, 0x40 }}
 
 #define NS_CONSOLESERVICE_CONTRACTID "@mozilla.org/consoleservice;1"
 %}
 
diff --git a/xpcom/base/nsIExceptionService.idl b/xpcom/base/nsIExceptionService.idl
--- a/xpcom/base/nsIExceptionService.idl
+++ b/xpcom/base/nsIExceptionService.idl
@@ -51,14 +51,13 @@ interface nsIExceptionService : nsIExcep
         NOTE: This interface must be thread-safe - it will be called
         on whatever thread needs the error translation performed.*/
     void registerExceptionProvider( in nsIExceptionProvider provider, in uint32_t moduleCode );
     void unregisterExceptionProvider( in nsIExceptionProvider provider, in uint32_t moduleCode );
 };
 
 
 %{ C++
-#define NS_EXCEPTIONSERVICE_CLASSNAME "Exception Service"
 // {35A88F54-F267-4414-92A7-191F6454AB52}
 #define NS_EXCEPTIONSERVICE_CID \
 { 0x35a88f54, 0xf267, 0x4414, { 0x92, 0xa7, 0x19, 0x1f, 0x64, 0x54, 0xab, 0x52 } }
 #define NS_EXCEPTIONSERVICE_CONTRACTID "@mozilla.org/exceptionservice;1"
 %}
diff --git a/xpcom/base/nsIVisualEventTracer.idl b/xpcom/base/nsIVisualEventTracer.idl
new file mode 100644
--- /dev/null
+++ b/xpcom/base/nsIVisualEventTracer.idl
@@ -0,0 +1,53 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIVisualEventTracerLog;
+
+/**
+ * Interface to control the visual event tracer feature.  The result
+ * is a log of various events that are monitored by a custom code
+ * instrumentation around the mozilla code base.
+ */
+
+[scriptable, uuid(D51F7867-42F3-4029-8C4E-C00676253A8E)]
+interface nsIVisualEventTracer : nsISupports
+{
+  /**
+   * Start the logging now.  No affect if already started.
+   * Current backlog is deleted by this call otherwise.
+   *
+   * @param minBacklogSeconds
+   *    Manimum time to keep the backlog.  Entries of the log are discarded
+   *    when their age is more then value of this argument.
+   */
+  void start(in unsigned long minBacklogSeconds);
+
+  /**
+   * Stop the logging now.  Backlog is kept in memory.
+   */
+  void stop();
+
+  /**
+   * Obtain the log.  This can be called whenever you want.
+   *
+   * @return
+   *    Result is an object that keeps snaphot of the log from
+   *    time this method has been called.  You can then access
+   *    the log using the object.  Calling stop() on the tracer
+   *    doesn't delete this log.
+   */
+  nsIVisualEventTracerLog snapshot();
+};
+
+[scriptable, uuid(52EC8962-F67C-4f49-A9D6-89B8EBDA2649)]
+interface nsIVisualEventTracerLog : nsISupports
+{
+  /**
+   * JSON string of the log.  Use JSON.parse to get it as an object.
+   */
+  readonly attribute ACString JSONString;
+};
diff --git a/xpcom/ds/nsIAtomService.idl b/xpcom/ds/nsIAtomService.idl
--- a/xpcom/ds/nsIAtomService.idl
+++ b/xpcom/ds/nsIAtomService.idl
@@ -9,17 +9,16 @@
 #define NS_ATOMSERVICE_CID \
 { /* ed3db3fc-0168-4cab-8818-98f5475a490c */ \
     0xed3db3fc,                              \
     0x0168,                                  \
     0x4cab,                                  \
     {0x88, 0x18, 0x98, 0xf5, 0x47, 0x5a, 0x49, 0x0c} }
 
 #define NS_ATOMSERVICE_CONTRACTID "@mozilla.org/atom-service;1"
-#define NS_ATOMSERVICE_CLASSNAME "Atom Service"
 %}
 
 /*
  * Should this really be scriptable?  Using atoms from script or proxies
  * could be dangerous since double-wrapping could lead to loss of
  * pointer identity.
  */
  
diff --git a/xpcom/ds/nsIPersistentProperties2.idl b/xpcom/ds/nsIPersistentProperties2.idl
--- a/xpcom/ds/nsIPersistentProperties2.idl
+++ b/xpcom/ds/nsIPersistentProperties2.idl
@@ -60,12 +60,11 @@ interface nsIPersistentProperties : nsIP
 
 %{C++
 
 #define NS_IPERSISTENTPROPERTIES_CID \
 { 0x2245e573, 0x9464, 0x11d2, \
   { 0x9b, 0x8b, 0x0, 0x80, 0x5f, 0x8a, 0x16, 0xd9 } }
 
 #define NS_PERSISTENTPROPERTIES_CONTRACTID "@mozilla.org/persistent-properties;1"
-#define NS_PERSISTENTPROPERTIES_CLASSNAME "Persistent Properties"
 
 %}
 
diff --git a/xpcom/ds/nsISupportsArray.idl b/xpcom/ds/nsISupportsArray.idl
--- a/xpcom/ds/nsISupportsArray.idl
+++ b/xpcom/ds/nsISupportsArray.idl
@@ -23,17 +23,16 @@ class nsISupportsArray;
 #define NS_SUPPORTSARRAY_CID                         \
 { /* bda17d50-0d6b-11d3-9331-00104ba0fd40 */         \
     0xbda17d50,                                      \
     0x0d6b,                                          \
     0x11d3,                                          \
     {0x93, 0x31, 0x00, 0x10, 0x4b, 0xa0, 0xfd, 0x40} \
 }
 #define NS_SUPPORTSARRAY_CONTRACTID "@mozilla.org/supports-array;1"
-#define NS_SUPPORTSARRAY_CLASSNAME "Supports Array"
  
 %}
 
 [scriptable, uuid(241addc8-3608-4e73-8083-2fd6fa09eba2)]
 interface nsISupportsArray : nsICollection {
 
   [notxpcom] boolean Equals([const] in nsISupportsArray other);
   
diff --git a/xpcom/reflect/xptinfo/public/nsIInterfaceInfoManager.idl b/xpcom/reflect/xptinfo/public/nsIInterfaceInfoManager.idl
--- a/xpcom/reflect/xptinfo/public/nsIInterfaceInfoManager.idl
+++ b/xpcom/reflect/xptinfo/public/nsIInterfaceInfoManager.idl
@@ -34,19 +34,16 @@ interface nsIInterfaceInfoSuperManager :
     void addAdditionalManager(in nsIInterfaceInfoManager manager);        
     void removeAdditionalManager(in nsIInterfaceInfoManager manager);        
 
     boolean hasAdditionalManagers();
     nsISimpleEnumerator enumerateAdditionalManagers();
 };
 
 %{C++
-#define NS_INTERFACEINFOMANAGER_SERVICE_CLASSNAME  \
-   "Interface Information Manager Service"
-
 #define NS_INTERFACEINFOMANAGER_SERVICE_CID            \
  { /* 13bef784-f8e0-4f96-85c1-09f9ef4f9a19 */          \
   0x13bef784, 0xf8e0, 0x4f96,                          \
   {0x85, 0xc1, 0x09, 0xf9, 0xef, 0x4f, 0x9a, 0x19} }  
 
 #define NS_INTERFACEINFOMANAGER_SERVICE_CONTRACTID  \
    "@mozilla.org/xpti/interfaceinfomanager-service;1"
 %}
diff --git a/xpcom/threads/nsIProcess.idl b/xpcom/threads/nsIProcess.idl
--- a/xpcom/threads/nsIProcess.idl
+++ b/xpcom/threads/nsIProcess.idl
@@ -91,10 +91,9 @@ interface nsIProcess : nsISupports
    * Returns whether the process is currently running or not.
    */
   readonly attribute boolean isRunning;
 };
 
 %{C++
 
 #define NS_PROCESS_CONTRACTID "@mozilla.org/process/util;1"
-#define NS_PROCESS_CLASSNAME "Process Specification"
 %}
